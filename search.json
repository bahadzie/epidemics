[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 epidemics authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/ebola_model.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Modelling ebolavirus disease with a stochastic model","text":"Prepare population data — model, need total population size initial conditions. can create <population> object dummy values contact matrix, assign total size demography vector. prepare population total size 14 million, corresponding population Guinea, West African country 2014 ebolavirus epidemic originated. assume one person initially infected, line Getz Dougherty (2018).","code":"population_size <- 14e6  # prepare initial conditions as proportions initial_i <- 1 / population_size  initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0 ) guinea_population <- population(   name = \"Guinea\",   contact_matrix = matrix(1), # note dummy value   demography_vector = 14e6, # 14 million, no age groups   initial_conditions = matrix(     initial_conditions,     nrow = 1   ) )  guinea_population #> <population> #> Population name: \"Guinea\" #>  #> Demography: #> Dem. grp. 1: 14,000,000 (100%) #>  #> Contact matrix: #>              Dem. grp. 1: #> Dem. grp. 1:            1"},{"path":"/articles/ebola_model.html","id":"prepare-pathogen-parameters","dir":"Articles","previous_headings":"","what":"Prepare pathogen parameters","title":"Modelling ebolavirus disease with a stochastic model","text":"prepare <infection> class object ebola, \\(R_0\\) taken value estimated ebola Guinea (althaus2014?). assume ebola infectious period 5 days. ebola high severity, model yet “deaths” compartment assume individuals recover period.","code":"# Prepare ebola parameters as an infection class object ebola <- infection(   name = \"ebolavirus disease\",   r0 = 1.5,   infectious_period = 5,   shape_E = 5L, rate_E = 1,   shape_I = 5L, rate_I = 1 )  # print to visualise ebola #> <infection> #> infection name: \"ebolavirus disease\" #> R0: 1.5 #> Infectious period: 5 #> Other infection parameters: #> \"shape_E\", \"rate_E\", \"shape_I\", \"rate_I\""},{"path":"/articles/ebola_model.html","id":"run-epidemic-model","dir":"Articles","previous_headings":"","what":"Run epidemic model","title":"Modelling ebolavirus disease with a stochastic model","text":"run model 100 days, data reported day. appropriate period obtain initial predictions outbreak, response efforts non-pharmaceutical interventions vaccination campaigns likely launched bring outbreak control.","code":"# set seed to get consistent results set.seed(0)  # run the epidemic model using `epidemic` # we call the model \"ebola\" from the library output <- epidemic(   model_name = \"ebola\",   population = guinea_population,   infection = ebola,   time_end = 100, increment = 1.0 )  # view the head of the output head(output) #>    time demography_group compartment    value #> 1:    0     demo_group_1 susceptible 13999999 #> 2:    0     demo_group_1     exposed        0 #> 3:    0     demo_group_1  infectious        1 #> 4:    0     demo_group_1   recovered        0 #> 5:    1     demo_group_1 susceptible 13999998 #> 6:    1     demo_group_1     exposed        1"},{"path":"/articles/ebola_model.html","id":"prepare-data-and-visualise-infections","dir":"Articles","previous_headings":"","what":"Prepare data and visualise infections","title":"Modelling ebolavirus disease with a stochastic model","text":"plot ebola epidemic time, showing number individuals exposed infected compartments.","code":"# plot figure of epidemic curve ggplot(   output[compartment %in% c(\"exposed\", \"infectious\")],   aes(     x = time,     y = value,     colour = compartment   ) ) +   geom_line() +   scale_y_continuous(     labels = scales::comma   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = NULL,     labels = c(\"Exposed\", \"Infectious\")   ) +   expand_limits(     x = c(0, 101)   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )"},{"path":"/articles/ebola_model.html","id":"consensus-estimates-from-multiple-model-iterations","dir":"Articles","previous_headings":"","what":"Consensus estimates from multiple model iterations","title":"Modelling ebolavirus disease with a stochastic model","text":"Since ebola model stochastic one, model results vary run. can run model multiple times — , 100 times — plot number infectious people, get consensus idea ebola outbreak might look like. plot data.  observe model stochasticity leads wide variation model outcomes, simulation replicates lead exponential growth outbreak within first 100 days. However, number replicates, outbreak low daily incidence within simulation time, although replicates might show exponential growth later. can find ‘final size’ replicate using epidemic_size() function original simulation data. Note final size refers final size 100 days, duration simulation.  see replicates affect 3,000 individuals within first 100 days, replicates fewer 1,000 cases, suggesting responses halt spread ebola may quite effective real outbreaks.","code":"# set seed for consistent output set.seed(1)  # run the simulation 100 times data <- Map(   x = seq(100),   f = function(x) {     data <- epidemic(       model_name = \"ebola\",       population = guinea_population,       infection = ebola,       time_end = 100, increment = 1.0     )      # add replicate number and return data     data$replicate <- x     data   } )  # use data.table to collect the data data_timeseries <- rbindlist(data) ggplot(data_timeseries[compartment == \"infectious\", ]) +   geom_line(     aes(time, value, group = replicate),     alpha = 0.3, colour = \"grey50\"   ) +   stat_summary(     aes(time, value),     geom = \"ribbon\",     fill = \"red\", alpha = 0.5   ) +   stat_summary(     aes(time, value),     geom = \"line\"   ) +   scale_y_continuous(     labels = scales::comma   ) +   expand_limits(     x = c(0, 101)   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     y = \"Individuals infectious with ebola\"   ) # apply the function over each replicate data_final_size <- Map(   data, f = epidemic_size, deaths = FALSE, by_group = FALSE ) data_final_size <- unlist(data_final_size) # plot a histogram of the replicates ggplot() +   geom_histogram(     aes(data_final_size),     fill = \"steelblue\"   ) +   scale_x_continuous(     labels = scales::comma   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Epidemic size at 100 days\",     y = \"Number of replicates\"   )"},{"path":"/articles/epidemics.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Epidemic modelling with Rcpp","text":"Prepare population contact data. Prepare initial conditions age group. Prepare population population class object.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE ) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix)  # view contact matrix and demography contact_matrix #>                   #> contact.age.group     [,1]     [,2]     [,3] #>           [0,20)  7.883663 2.794154 1.565665 #>           [20,40) 3.120220 4.854839 2.624868 #>           40+     3.063895 4.599893 5.005571  demography_vector #>   [0,20)  [20,40)      40+  #> 14799290 16526302 28961159 # initial conditions initial_i <- 1e-6 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix)  # view initial conditions initial_conditions #>                S E     I R V #> [0,20)  0.999999 0 1e-06 0 0 #> [20,40) 0.999999 0 1e-06 0 0 #> 40+     0.999999 0 1e-06 0 0 uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )  uk_population #> <population> #> Population name: \"UK\" #>  #> Demography: #> [0,20): 14,799,290 (20%) #> [20,40): 16,526,302 (30%) #> 40+: 28,961,159 (50%) #>  #> Contact matrix: #>                   #> contact.age.group [0,20) [20,40) 40+ #>           [0,20)     7.9     2.8 1.6 #>           [20,40)    3.1     4.9 2.6 #>           40+        3.1     4.6 5.0"},{"path":"/articles/epidemics.html","id":"prepare-pathogen-parameters","dir":"Articles","previous_headings":"","what":"Prepare pathogen parameters","title":"Epidemic modelling with Rcpp","text":"","code":"# Prepare epidemiological parameters as an infection class object pandemic <- infection(   r0 = 1.5,   preinfectious_period = 3,   infectious_period = 7 )"},{"path":"/articles/epidemics.html","id":"run-epidemic-model","dir":"Articles","previous_headings":"","what":"Run epidemic model","title":"Epidemic modelling with Rcpp","text":"","code":"# run an epidemic model using `epidemic` output <- epidemic(   population = uk_population,   infection = pandemic,   time_end = 600, increment = 1.0 )"},{"path":"/articles/epidemics.html","id":"prepare-data-and-visualise-infections","dir":"Articles","previous_headings":"","what":"Prepare data and visualise infections","title":"Epidemic modelling with Rcpp","text":"Plot epidemic time, showing number individuals exposed infected compartments.","code":"# plot figure of epidemic curve ggplot(   output[compartment %in% c(\"exposed\", \"infectious\")],   aes(     x = time,     y = value,     col = demography_group,     linetype = compartment   ) ) +   geom_line() +   scale_y_continuous(     labels = scales::comma   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   expand_limits(     y = c(0, 500e3)   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )"},{"path":"/articles/modelling_interventions.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Modelling interventions","text":"Prepare population contact data. Prepare initial conditions age group. Prepare population population class object.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE ) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix) # initial conditions initial_i <- 1e-6 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix) uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )"},{"path":"/articles/modelling_interventions.html","id":"prepare-pathogen-parameters","dir":"Articles","previous_headings":"","what":"Prepare pathogen parameters","title":"Modelling interventions","text":"","code":"# Prepare epidemiological parameters as an infection object pandemic <- infection(   r0 = 1.5,   preinfectious_period = 3,   infectious_period = 7 )"},{"path":"/articles/modelling_interventions.html","id":"prepare-an-intervention","dir":"Articles","previous_headings":"","what":"Prepare an intervention","title":"Modelling interventions","text":"Prepare intervention simulate school closures.","code":"# prepare an intervention with a differential effect on age groups close_schools <- intervention(   name = \"School closure\",   time_begin = 200,   time_end = 300,   contact_reduction = matrix(c(0.5, 0.001, 0.001)) )  # examine the intervention object close_schools #> <intervention> #> Intervention name: \"School closure\" #> Time begin: #>      [,1] #> [1,]  200 #> Time end: #>      [,1] #> [1,]  300 #> Contact reduction: #>       [,1] #> [1,] 0.500 #> [2,] 0.001 #> [3,] 0.001"},{"path":"/articles/modelling_interventions.html","id":"run-epidemic-model","dir":"Articles","previous_headings":"","what":"Run epidemic model","title":"Modelling interventions","text":"","code":"# run an epidemic model using `epidemic` output <- epidemic(   population = uk_population,   infection = pandemic,   intervention = close_schools,   time_end = 600, increment = 1.0 )"},{"path":"/articles/modelling_interventions.html","id":"prepare-data-and-visualise-infections","dir":"Articles","previous_headings":"","what":"Prepare data and visualise infections","title":"Modelling interventions","text":"Plot epidemic time, showing number individuals exposed infected compartments.","code":"# plot figure of epidemic curve ggplot(   output[compartment %in% c(\"exposed\", \"infectious\")],   aes(     x = time,     y = value,     col = demography_group,     linetype = compartment   ) ) +   geom_line() +   annotate(     geom = \"rect\",     xmin = close_schools$time_begin,     xmax = close_schools$time_end,     ymin = 0, ymax = 500e3,     fill = alpha(\"red\", alpha = 0.2),     lty = \"dashed\"   ) +   annotate(     geom = \"text\",     x = mean(c(close_schools$time_begin, close_schools$time_end)),     y = 400e3,     angle = 90,     label = \"School closure\"   ) +   scale_y_continuous(     labels = scales::comma   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   expand_limits(     y = c(0, 500e3)   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )"},{"path":"/articles/modelling_vaccination.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Modelling a vaccination campaign","text":"Prepare population contact data. Prepare initial conditions age group. Prepare population population class object.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 65),   symmetric = TRUE ) #> Using POLYMOD social contact data. To cite this in a publication, use the 'cite' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix) # initial conditions initial_i <- 1e-6 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix) uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )"},{"path":"/articles/modelling_vaccination.html","id":"prepare-pathogen-parameters","dir":"Articles","previous_headings":"","what":"Prepare pathogen parameters","title":"Modelling a vaccination campaign","text":"","code":"# Prepare epidemiological parameters as an infection object pandemic <- infection(   r0 = 1.5,   preinfectious_period = 3,   infectious_period = 7 )"},{"path":"/articles/modelling_vaccination.html","id":"prepare-a-vaccination-campaign","dir":"Articles","previous_headings":"","what":"Prepare a vaccination campaign","title":"Modelling a vaccination campaign","text":"Prepare vaccination campaign targeting individuals aged 65.","code":"# prepare a vaccination object vaccinate_elders <- vaccination(   name = \"vaccinate elders\",   time_begin = matrix(100, nrow(contact_matrix)),   time_end = matrix(250, nrow(contact_matrix)),   nu = matrix(c(0.0001, 0.0001, 0.0001)) )  # view vaccination object vaccinate_elders #> <vaccination> #> Vaccination name: \"vaccinate elders\" #>  #> Time begin: #>      dose_1 #> [1,]    100 #> [2,]    100 #> [3,]    100 #>  #> Time end: #>      dose_1 #> [1,]    250 #> [2,]    250 #> [3,]    250 #>  #> Vaccination rate: #>      dose_1 #> [1,]  1e-04 #> [2,]  1e-04 #> [3,]  1e-04"},{"path":"/articles/modelling_vaccination.html","id":"run-epidemic-model","dir":"Articles","previous_headings":"","what":"Run epidemic model","title":"Modelling a vaccination campaign","text":"","code":"# run an epidemic model using `epidemic` output <- epidemic(   population = uk_population,   infection = pandemic,   vaccination = vaccinate_elders,   time_end = 600, increment = 1.0 )"},{"path":"/articles/modelling_vaccination.html","id":"prepare-data-and-visualise-infections","dir":"Articles","previous_headings":"","what":"Prepare data and visualise infections","title":"Modelling a vaccination campaign","text":"Plot epidemic time, showing number individuals exposed, infected, vaccinated compartments.","code":"# plot figure of epidemic curve ggplot(   output[compartment %in% c(\"exposed\", \"infectious\")],   aes(     x = time,     y = value,     col = demography_group,     linetype = compartment   ) ) +   geom_line() +   scale_y_continuous(     labels = scales::comma   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   expand_limits(     y = c(0, 500e3)   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )"},{"path":"/articles/multiple_interventions.html","id":"prepare-population-initial-conditions-and-pathogen","dir":"Articles","previous_headings":"","what":"Prepare population, initial conditions, and pathogen","title":"Modelling multiple overlapping non-pharmaceutical interventions","text":"prepare population contact data U.K., epidemiological compartments matching default epidemic model (SEIR-V). prepare infection object simulate pathogen \\(R_0\\) 1.5 similar pandemic influenza, infectious period 7 days, pre-infectious period 3 days. assume one every million people infected infectious, translating 67 total infections U.K. population 67 million. code steps similar “Getting started vignette” hidden , although can expanded reference.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 65),   symmetric = TRUE )  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix) # initial conditions initial_i <- 1e-4 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix) uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions ) # Prepare epidemiological parameters as an infection object pandemic <- infection(   r0 = 1.3,   preinfectious_period = 1.5,   infectious_period = 5 )"},{"path":"/articles/multiple_interventions.html","id":"examine-the-baseline","dir":"Articles","previous_headings":"","what":"Examine the baseline","title":"Modelling multiple overlapping non-pharmaceutical interventions","text":"first examine baseline scenario — interventions implemented slow spread epidemic — visualise outcomes terms daily new infections. simulate epidemic using epidemic() function, calling default model outlined “Get started vignette”. show one instance plotting code using ggplot2 package , instances hidden keep vignette short. Figure 1: model infectious disease epidemic, assuming directly transmitted infection influenza, \\(R_0\\) 1.3, infectious period 5 days, pre-infectious period 1.5 days. baseline scenario, epidemic continue approximately 400 days, one year, peak new infections 150th 180th day different age groups. scenario, epidemic expected final size around 23 million individuals infected overall. following sections shall iteratively model effects applying non-pharmaceutical interventions reduce contacts examine whether epidemic’s final size reduced, whether peak infections can spread time.","code":"# no intervention baseline scenario data_baseline <- epidemic(   population = uk_population,   infection = pandemic,   time_end = 400, increment = 1.0 )  # get new infections data_baseline_infections <- new_infections(data_baseline, by_group = TRUE) # visualise the spread of the epidemic in terms of new infections # plot figure of epidemic curve plot_baseline <- ggplot() +   geom_line(     data = data_baseline_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"dashed\"   ) +   scale_y_sqrt(     labels = scales::comma,     breaks = c(10^seq(3, 5), 5e4)   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )  plot_baseline"},{"path":"/articles/multiple_interventions.html","id":"modelling-overlapping-interventions","dir":"Articles","previous_headings":"","what":"Modelling overlapping interventions","title":"Modelling multiple overlapping non-pharmaceutical interventions","text":"shall prepare multiple interventions plausibly implemented course epidemic. can use c() function combine two intervention objects single intervention accommodates effect interventions. multiple intervention can passed — single intervention object — epidemic model epidemic(). can combine number intervention objects single intervention object passed epidemic(). cumulative effect interventions handled automatically C++ code underlying epidemics. Remember two multiple interventions can also combined using c(). important careful make sure interventions intend combine concatenated together. example, c(combined_interventions, combined_interventions) valid, effectively double effect school workplace closures example. simulate epidemic using epidemic() function, calling default model outlined “Get started vignette”. simulate epidemic 600 days. Figure 3: Epidemic model two overlapping interventions early phase outbreak: school closures target infections among younger people, workplace closures target infections among working-age adults. scenario school closures 6 months well workplace closures 2 months, epidemic still continue approximately 600 days, one half years, number days 10,000 daily cases reduced, typically occur intervention workplaces lifted. scenario, epidemic expected final size around 22 million individuals infected overall — similar school closures intervention. distinct peak new infections schools simulated re-open, nearly 100,000 new infections days.","code":"# combine interventions using `c()` combined_interventions <- c(   close_schools, close_workplaces )  # visualise the combined intervention object combined_interventions #> <intervention> #> Intervention name: \"School closure\" #> Time begin: #>      npi_1 npi_2 #> [1,]    60    80 #> Time end: #>      npi_1 npi_2 #> [1,]   240   140 #> Contact reduction: #>      npi_1 npi_2 #> [1,]  0.30  0.01 #> [2,]  0.01  0.30 #> [3,]  0.01  0.01 # get data from an epidemic model with both interventions data_combined <- epidemic(   population = uk_population,   infection = pandemic,   intervention = combined_interventions,   time_end = 600, increment = 1.0 )  # get data on new infections data_infections <- new_infections(data_combined, by_group = TRUE) plot_intervention_cases <-   ggplot() +   geom_vline(     xintercept = c(       close_schools$time_begin,       close_schools$time_end     ),     linetype = \"dotted\"   ) +   geom_vline(     xintercept = c(       close_workplaces$time_begin,       close_workplaces$time_end     ),     colour = \"red\",     linetype = \"dotted\"   ) +   annotate(     geom = \"text\",     x = mean(c(close_schools$time_begin, close_schools$time_end)),     y = 50000,     label = \"Schools closed\"   ) +   annotate(     geom = \"text\",     x = mean(c(       close_workplaces$time_begin,       close_workplaces$time_end     )),     y = 30000,     colour = \"red\",     label = \"Workplaces\\nclosed\"   ) +   geom_line(     data = data_baseline_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"dashed\"   ) +   geom_line(     data = data_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"solid\"   ) +   scale_y_sqrt(     labels = scales::comma,     breaks = c(10^seq(3, 5), 5e4)   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )  plot_intervention_cases"},{"path":"/articles/multiple_interventions.html","id":"school-closures","dir":"Articles","previous_headings":"Modelling overlapping interventions","what":"School closures","title":"Modelling multiple overlapping non-pharmaceutical interventions","text":"first example, shall model school closures, primarily aimed reducing infections among younger individuals transmit families. first prepare intervention simulates effect closing schools reduce contacts younger people. assume reduces contacts age group 0 – 19 30%, contacts age groups 1% (adults meet individuals age). intervention assumed last 6 months approximately 180 days, beginning 100th day outbreak — similar duration initial school closures Covid-19 pandemic 2020 U.K. simulate epidemic 600 days expect intervention spread disease incidence longer period. Figure 2: Epidemic model intervention targets infections among children closing schools six months, thus reducing children’s social contacts. school closures scenario, epidemic continue approximately 600 days, one half years, 10,000 daily new infections one year. scenario, epidemic expected final size around 20 million individuals infected overall.","code":"# prepare an intervention that models school closures for ~3 months (100 days) close_schools <- intervention(   name = \"School closure\",   time_begin = 60,   time_end = 60 + 180,   contact_reduction = matrix(c(0.3, 0.01, 0.01)) )  # examine the intervention object close_schools #> <intervention> #> Intervention name: \"School closure\" #> Time begin: #>      [,1] #> [1,]   60 #> Time end: #>      [,1] #> [1,]  240 #> Contact reduction: #>      [,1] #> [1,] 0.30 #> [2,] 0.01 #> [3,] 0.01 # no intervention baseline scenario data_schools_closed <- epidemic(   population = uk_population,   infection = pandemic,   intervention = close_schools,   time_end = 600, increment = 1.0 )  # get new infections data_noschool_infections <- new_infections(data_schools_closed, by_group = TRUE) # visualise the spread of the epidemic in terms of new infections when # schools are closed plot_noschool <-   ggplot() +   geom_vline(     xintercept = c(       close_schools$time_begin,       close_schools$time_end     ),     linetype = \"dotted\"   ) +   annotate(     geom = \"text\",     x = mean(c(close_schools$time_begin, close_schools$time_end)),     y = 1000,     label = \"Schools closed\"   ) +   geom_line(     data = data_baseline_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"dashed\"   ) +   geom_line(     data = data_noschool_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"solid\"   ) +   scale_y_sqrt(     labels = scales::comma,     breaks = c(10^seq(3, 5), 5e4)   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )  plot_noschool"},{"path":"/articles/multiple_interventions.html","id":"workplace-closures","dir":"Articles","previous_headings":"Modelling overlapping interventions","what":"Workplace closures","title":"Modelling multiple overlapping non-pharmaceutical interventions","text":"General workplace closures broad-based measure aimed reducing infections among working age adults. shall prepare intervention simulates effect closing workplaces addition closing schools, assume reduces contacts age group 20 – 65 30%, contacts age groups 1% (assume individuals age groups meeting many individuals workplaces). intervention assumed last 60 days, beginning 80th day outbreak — simulates situation policymakers decide close workplaces three weeks deciding close schools, choose keep workplaces closed long (2 months 60 days vs. 6 months 180 days school closures).","code":"# prepare an intervention which mostly affects adults 20 -- 65 intervention_duration <- 60 close_workplaces <- intervention(   name = \"Workplace closure\",   time_begin = 80,   time_end = 80 + intervention_duration,   contact_reduction = matrix(c(0.01, 0.3, 0.01)) )  # examine the intervention object close_workplaces #> <intervention> #> Intervention name: \"Workplace closure\" #> Time begin: #>      [,1] #> [1,]   80 #> Time end: #>      [,1] #> [1,]  140 #> Contact reduction: #>      [,1] #> [1,] 0.01 #> [2,] 0.30 #> [3,] 0.01"},{"path":"/articles/multiple_interventions.html","id":"combining-interventions","dir":"Articles","previous_headings":"Modelling overlapping interventions","what":"Combining interventions","title":"Modelling multiple overlapping non-pharmaceutical interventions","text":"can use c() function combine two intervention objects single intervention accommodates effect interventions. multiple intervention can passed — single intervention object — epidemic model epidemic(). intervention object made multiple interventions first intervention specified treated baseline intervention, age-specific effect reducing contacts duration effect. interventions assumed additional percentage point increases effect active interventions.","code":""},{"path":"/articles/multiple_interventions.html","id":"re-applying-workplace-closures","dir":"Articles","previous_headings":"Modelling overlapping interventions","what":"Re-applying workplace closures","title":"Modelling multiple overlapping non-pharmaceutical interventions","text":"scenario combined interventions, daily new infections forecast exceed 50,000 258th day epidemic. final example, simulate re-implementing two months workplace closures, school closures, reduce infections. Combine multiple interventions object two interventions third intervention. simulate epidemic using epidemic() function 600 days . Figure 4: Epidemic model two initial, overlapping interventions schools workplaces, followed later intervention workplaces. scenario school closures 6 months well two phases workplace closures 2 months , epidemic continue 600 days, one half years, number days 10,000 daily cases reduced, typically occur interventions workplaces lifted — similar previous example. scenario, epidemic expected final size around 20 million individuals infected overall — lower previous examples.","code":"# log the date that cases exceed 50000 daily start_date <- min(   which(     new_infections(data_combined, by_group = FALSE)[, new_infections > 50000]   ) )  # create a new workplace closures object workplace_closures_2 <- intervention(   time_begin = start_date,   time_end = start_date + 60,   contact_reduction = matrix(c(0.01, 0.3, 0.01)) ) combined_interventions <- c(combined_interventions, workplace_closures_2) # get data from an epidemic model with both interventions data_combined <- epidemic(   population = uk_population,   infection = pandemic,   intervention = combined_interventions,   time_end = 600, increment = 1.0 )  # get data on new infections data_infections <- new_infections(data_combined, by_group = TRUE) plot_three_interventions <-   ggplot() +   geom_vline(     xintercept = c(       close_schools$time_begin,       close_schools$time_end     ),     linetype = \"dotted\"   ) +   geom_vline(     xintercept = c(       close_workplaces$time_begin,       close_workplaces$time_end,       workplace_closures_2$time_begin,       workplace_closures_2$time_end     ),     colour = \"red\",     linetype = \"dotted\"   ) +   annotate(     geom = \"text\",     x = mean(c(close_schools$time_begin, close_schools$time_end)),     y = 50000,     label = \"Schools closed\"   ) +   annotate(     geom = \"text\",     x = c(       mean(         c(close_workplaces$time_begin, close_workplaces$time_end)       ),       mean(c(workplace_closures_2$time_begin, workplace_closures_2$time_end))     ),     y = 30000,     colour = \"red\",     label = c(\"Workplaces\\nclosed\", \"Workplaces\\nclosed\")   ) +   geom_line(     data = data_baseline_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"dashed\"   ) +   geom_line(     data = data_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"solid\"   ) +   scale_y_sqrt(     labels = scales::comma,     breaks = c(10^seq(3, 5), 5e4)   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_classic() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )  plot_three_interventions"},{"path":"/articles/vacamole.html","id":"modifications-for-epidemics","dir":"Articles","previous_headings":"","what":"Modifications for epidemics","title":"Using the RIVM Vacamole model of leaky vaccination and hospitalisations","text":"made modifications ODE model Vacamole order make general thus potentially applicable wider range settings. Specifically, dropped ICU ICU2H compartment potentially less relevant context intensive care capacity low. added transitions infectious () hospitalised (H) compartments death (D), may general assumption hospital capacity low (relatively → D) treatments poor (relatively H → D). assume, first pass implementation vaccination primarily reduces adverse outcomes, modification transition rates (\\(\\beta_V,\\eta_{V},\\omega_V\\)): \\(\\beta_V\\): infection rate \\(\\beta\\) individuals fully vaccinated compartment \\(V_2\\); \\(\\eta_{V}\\): hospitalisation rate \\(\\eta\\) fully vaccinated, infected individuals (\\(I_V\\) → \\(H_V\\)); \\(\\omega_V\\): mortality rate fully vaccinated individuals stage post infection (, H). details ODE system version Vacamole included epidemics can found end page.","code":"library(epidemics) library(data.table) library(ggplot2) library(colorspace) library(scales)"},{"path":"/articles/vacamole.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Using the RIVM Vacamole model of leaky vaccination and hospitalisations","text":"Prepare population contact data. Prepare initial conditions age group. Vacamole model 11 compartments therefore requires matrix 11 columns. Prepare time days model epidemic, outbreak beginning day zero. Prepare population population class object.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 65),   symmetric = TRUE )  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix) # initial conditions initial_i <- 1e-6  # // 0| 1| 2|3| 4|5| 6|7| 8|9|10 # // S|V1|V2|E|EV|I|IV|H|HV|D|R  # make initial conditions - order is important initial_conditions <- c(   S = 1 - initial_i,   V1 = 0, V2 = 0,   E = 0, EV = 0,   I = initial_i, IV = 0,   H = 0, HV = 0, D = 0, R = 0 ) initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix) epidemic_days <- 300 uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )"},{"path":"/articles/vacamole.html","id":"prepare-pathogen-parameters","dir":"Articles","previous_headings":"","what":"Prepare pathogen parameters","title":"Using the RIVM Vacamole model of leaky vaccination and hospitalisations","text":"","code":"# make infection class for Vacamole model # note extra arguments passed as ... infect <- infection(   name = \"covid\", r0 = 3, infectious_period = 10,   preinfectious_period = 5,   eta = 1 / 1000, omega = 1 / 1000,   susc_reduction_vax = 0.5,   hosp_reduction_vax = 0.5,   mort_reduction_vax = 0.5 )"},{"path":"/articles/vacamole.html","id":"prepare-a-two-dose-vaccination-campaign","dir":"Articles","previous_headings":"","what":"Prepare a two dose vaccination campaign","title":"Using the RIVM Vacamole model of leaky vaccination and hospitalisations","text":"prepare two-dose vaccination campaign concatenating two single dose vaccination regimes, .e., applying function c() two vaccination objects. possible combine multiple vaccination objects together using c() — limitation vaccination regimes combined way must number demographic groups. possible add single dose two-vaccination regime using c() two vaccination objects two one dose, respectively. prepare dummy vaccination regime vaccination compare two-dose vaccination campaign. done using no_vaccination() function specifying number doses (, 2 doses).","code":"# prepare a two dose vaccination regime for a single age group # prepare the first dose dose_1 <- vaccination(   name = \"two-dose vaccination\", # name given to first dose   nu = matrix(1e-2, nrow = 3),   time_begin = matrix(30, nrow = 3),   time_end = matrix(epidemic_days, nrow = 3) )  # prepare the second dose with a 30 day interval in start date dose_2 <- vaccination(   name = \"two-dose vaccination\", # name given to first dose   nu = matrix(1e-2, nrow = 3),   time_begin = matrix(60, nrow = 3),   time_end = matrix(epidemic_days, nrow = 3) )  # use `c()` to combine the two doses double_vaccination <- c(dose_1, dose_2)  # print to visualise double_vaccination #> <vaccination> #> Vaccination name: \"two-dose vaccination\" #>  #> Time begin: #>      dose_1 dose_2 #> [1,]     30     60 #> [2,]     30     60 #> [3,]     30     60 #>  #> Time end: #>      dose_1 dose_2 #> [1,]    300    300 #> [2,]    300    300 #> [3,]    300    300 #>  #> Vaccination rate: #>      dose_1 dose_2 #> [1,]   0.01   0.01 #> [2,]   0.01   0.01 #> [3,]   0.01   0.01 # prepare a null vaccination regime with two doses # use the convenience function `no_vaccination()` no_vaccination <- no_vaccination(population = uk_population, doses = 2)"},{"path":"/articles/vacamole.html","id":"model-epidemic-using-vacamole","dir":"Articles","previous_headings":"","what":"Model epidemic using Vacamole","title":"Using the RIVM Vacamole model of leaky vaccination and hospitalisations","text":"First, run model vaccination. Next run model two dose vaccination regime.","code":"data <- epidemic(   model_name = \"vacamole\",   population = uk_population,   infection = infect,   vaccination = no_vaccination, # note custom no_vaccination object   time_end = epidemic_days ) data_vaccination <- epidemic(   model_name = \"vacamole\",   population = uk_population,   infection = infect,   vaccination = double_vaccination, # note custom object for two doses   time_end = epidemic_days )"},{"path":"/articles/vacamole.html","id":"visualise-model-outcomes","dir":"Articles","previous_headings":"","what":"Visualise model outcomes","title":"Using the RIVM Vacamole model of leaky vaccination and hospitalisations","text":"First, calculate total number infections resulting recoveries deaths course simulation; epidemic’s final size.  Finally, can compare peak hospital bed occupancy scenario — can rough indication much hospital capacity required pandemic characteristics occur, well another way examine effect vaccination reducing requirement. example demonstrates implementing vaccination can substantially reduce peak hospital occupancy (27%) compared scenario vaccines deployed.","code":"# collect data from the two scenarios data_scenarios <- list(data, data_vaccination)  # get deaths and recoveries from infection data_scenarios <- Map(   data_scenarios, c(\"no_vax\", \"vax\"),   f = function(df, sc) {     df_ <- unique(df[, \"demography_group\"], by = \"demography_group\")     # get total deaths per group     df_$total_deaths <- df[time == max(time) & compartment == \"dead\", ]$value      # get total recoveries per group using helper function `epidemic_size()`     df_$total_recovered <- epidemic_size(df, deaths = FALSE) # do not count dead      # add scenario information     df_$scenario <- sc      # return data     df_   } )  # collect data data_scenarios <- rbindlist(data_scenarios)  # transform to long format data_scenarios <- melt(   data_scenarios,   id.vars = c(\"demography_group\", \"scenario\") ) ggplot(data_scenarios) +   geom_col(     aes(demography_group, value, fill = scenario),     position = \"dodge\",     colour = \"black\"   ) +   facet_wrap(     ~variable,     scales = \"free_y\",     labeller = labeller(       variable = c(         \"total_deaths\" = \"Total deaths\",         \"total_recovered\" = \"Epidemic size (infections, not counting deaths)\"       )     )   ) +   scale_fill_discrete_qualitative(     palette = \"Dynamic\",     labels = c(\"No vaccination\", \"Vaccination\"),     name = \"Scenario\",     na.value = \"lightgrey\"   ) +   scale_y_continuous(     labels = label_comma(       scale = 1e-6, suffix = \"M\"     )   ) +   theme_classic() +   theme(     legend.position = \"bottom\",     legend.key.height = unit(2, \"mm\"),     strip.background = element_blank(),     strip.text = element_text(       face = \"bold\",       size = 11     )   ) +   expand_limits(     x = c(0.5, length(unique(data_scenarios$demography_group)) + 0.5)   ) +   coord_cartesian(     expand = FALSE   ) +   labs(     x = \"Age group\",     y = \"No. of individuals\",     title = \"Effect of vaccination on deaths and total infections\"   ) # collect data from the two scenarios data_scenarios <- list(data, data_vaccination)  peak_hospital_occupancy <- vapply(data_scenarios, function(df) {   # get highest hospital occupancy   # first get total hospitalisations among vaccinated and un- or part-vacc.   df <- dcast(     df[compartment %like% \"hospitalised\", ],     time + demography_group ~ compartment,     value.var = \"value\"   )   df[, total_hosp := hospitalised + hospitalised_vaccinated]    # sum all age groups   df <- df[, list(total_hosp = sum(total_hosp)), by = \"time\"]    df[total_hosp == max(total_hosp), ]$total_hosp }, FUN.VALUE = numeric(1))  # set names for comprehensibility names(peak_hospital_occupancy) <- c(\"No vaccination\", \"Vaccination\")  # show peak hospital occupancy in a readable format format(peak_hospital_occupancy, big.mark = \",\", digits = 1) #> No vaccination    Vaccination  #>       \"95,063\"       \"69,827\""},{"path":"/articles/vacamole.html","id":"vacamole-ode-system-for-epidemics","dir":"Articles","previous_headings":"","what":"Vacamole ODE system for {epidemics}","title":"Using the RIVM Vacamole model of leaky vaccination and hospitalisations","text":"Vacamole ODE system adapted {epidemics} : Susceptibles vaccinated, partially vaccinated (considered unprotected) can transition exposed vaccinated: \\[dS = -\\beta S(+I_V) - \\nu_1 S\\] Two sequential vaccination compartments, lower conversion rate two-dose vaccinated individuals (considered protected) exposed: \\[dV_1 = \\nu_1S - \\beta V_1(+I_V) - \\nu_2V_1\\] \\[dV_2 = \\nu_2V_1 - \\beta_VV_2(+I_V)\\] Two parallel exposed compartments, similar conversion infectious: \\[dE = \\beta (S+V_1)(+I_V) - \\alpha E\\] \\[dE_V = \\beta_VV_2(+I_V) - \\alpha E_V\\] Two parallel infectious compartments, lower hospitalisation mortality rate vaccinated: \\[dI = \\alpha E - \\gamma - \\eta - \\omega \\] \\[dI_V = \\alpha E_V - \\gamma I_V - \\eta_{V} I_V - \\omega_V I_V\\] Two parallel hospitalisation compartments, lower mortality rate vaccinated: \\[dH = \\eta - \\gamma H - \\eta_2 H - \\omega H\\] \\[dH_V = \\eta_{V} - \\gamma H_V - \\omega_V H_V\\] Single recovered compartment: \\[dR = \\gamma(+ H + I_V + H_V)\\] Single mortality compartment: \\[dD = \\omega(+ H) + \\omega_V(I_V + H_V)\\]","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratik Gupte. Author, maintainer, copyright holder. Rosalind Eggo. Author, copyright holder. Edwin Van Leeuwen. Author, copyright holder. Tim Taylor. Contributor, reviewer. Hugo Gruson. Reviewer. Joshua W. Lambert. Reviewer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gupte P, Eggo R, Van Leeuwen E (2023). epidemics: Library Compartmental Epidemic Scenario Models. https://github.com/epiverse-trace/epidemics, https://epiverse-trace.github.io/epidemics/.","code":"@Manual{,   title = {epidemics: A Library of Compartmental Epidemic Scenario Models},   author = {Pratik Gupte and Rosalind Eggo and Edwin {Van Leeuwen}},   year = {2023},   note = {https://github.com/epiverse-trace/epidemics, https://epiverse-trace.github.io/epidemics/}, }"},{"path":"/index.html","id":"epidemics-a-library-of-compartmental-epidemic-scenario-models-","dir":"","previous_headings":"","what":"A Library of Compartmental Epidemic Scenario Models","title":"A Library of Compartmental Epidemic Scenario Models","text":"epidemics R package provides convenient interface library compartmental models can help model epidemic scenarios directly transmitted infections influenza, Covid-19, respiratory syncytial virus (RSV). models epidemics implement methods outlined Bjørnstad et al. (2020a) Bjørnstad et al. (2020b). models epidemics can help provide rough estimates course epidemics, effectiveness pharmaceutical non-pharmaceutical interventions. epidemics currently provides default model susceptible, exposed, infectious, recovered, vaccinated compartments (SEIR-V), allowing heterogeneity social contacts, implementation group-specific non-pharmaceutical intervention reduces social contacts, vaccination regime group-specific start end dates. Additionally, epidemics includes Vacamole model developed RIVM, Dutch Public Health Institute Covid-19 pandemic, focus scenario modelling hospitalisation vaccination (Ainslie et al. 2022). models developed Covid-19 pandemic planned added near future. Please get touch like see model added epidemics model library — happy help translating R another language Rcpp. epidemics relies Eigen via {RcppEigen}, Boost Odeint via {BH}, developed Centre Mathematical Modelling Infectious Diseases London School Hygiene Tropical Medicine part Epiverse-TRACE initiative.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Library of Compartmental Epidemic Scenario Models","text":"current development version epidemics can installed GitHub using pak package.","code":"if(!require(\"pak\")) install.packages(\"pak\") pak::pak(\"epiverse-trace/epidemics\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"A Library of Compartmental Epidemic Scenario Models","text":"show example using default model epidemics model epidemic U.K. population R0 similar pandemic influenza, heterogeneity social contacts among different age groups, implementation school closures dampen spread infection. Prepare social contact pattern population (, U.K population), divided three age groups: 0 – 19, 20 – 39, 40+. Prepare initial conditions population age group — , one every million individuals infected start epidemic (total 60 infections). Prepare object class <population>, using function population(). Prepare <infection> class object store parameters infection causing epidemic modelled. Define intervention close schools two months. intervention mostly affects individuals age range 0 – 19, reduces contacts 50%, reducing contacts age groups 1%. object class <intervention>, created using function intervention(). Prepare infection Run default epidemic model, using function epidemic(). assume R0 1.5 similar pandemic influenza, infectious period 7 days, pre-infectious period 3 days. Visualise development individuals “infectious” compartment model time. Note curves represent number individuals infectious, number newly infectious individuals.","code":"# load epidemics library(epidemics) library(ggplot2) library(data.table) # load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE )  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix) # initial conditions: one in every 1 million is infected initial_i <- 1e-6 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions ) rownames(initial_conditions) <- rownames(contact_matrix) # prepare the population to model as affected by the epidemic uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions ) # simulate a pandemic, with an R0, # an infectious period, and an pre-infectious period pandemic_influenza <- infection(   r0 = 1.5,   preinfectious_period = 3,   infectious_period = 7 )  pandemic_influenza #> <infection> #> infection name: NA #> R0: 1.5 #> Infectious period: 7 #> Other infection parameters: #> \"preinfectious_period\" # an intervention to close schools close_schools <- intervention(   time_begin = 200,   time_end = 260,   contact_reduction = c(0.5, 0.01, 0.01) ) # run an epidemic model using `epidemic()` output <- epidemic(   model = \"default\",   population = uk_population,   infection = pandemic_influenza,   intervention = close_schools,   time_end = 600, increment = 1.0 )"},{"path":"/index.html","id":"package-vignettes","dir":"","previous_headings":"","what":"Package vignettes","title":"A Library of Compartmental Epidemic Scenario Models","text":"details use epidemics can found online documentation package vignettes, “Articles”.","code":""},{"path":"/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"A Library of Compartmental Epidemic Scenario Models","text":"report bug please open issue.","code":""},{"path":"/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"A Library of Compartmental Epidemic Scenario Models","text":"Contributions epidemics welcomed. Please follow package contributing guide.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"A Library of Compartmental Epidemic Scenario Models","text":"Please note epidemics project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":[]},{"path":"/reference/add_to_library.html","id":null,"dir":"Reference","previous_headings":"","what":"Add model functions to the model library — add_to_library","title":"Add model functions to the model library — add_to_library","text":"Add model functions model library","code":""},{"path":"/reference/add_to_library.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add model functions to the model library — add_to_library","text":"","code":"add_to_library(model_type = \"epidemic\", model_name = \"default\", compartments)"},{"path":"/reference/add_to_library.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add model functions to the model library — add_to_library","text":"model_type model type, single word, lower case string. currently supported type \"epidemic\", future additions likely include \"outbreak\". model_name model name, single word, lower case string. Please name model informatively yet concisely - pathogen name, author institution name, name previous model implementation. Overall, name help users identify model quickly reliably. compartments model compartments' names, single word, lower case string. Please use names correspond prevailing epidemiological naming conventions, please check model library names used models consider re-using names naming compartments model.","code":""},{"path":"/reference/add_to_library.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add model functions to the model library — add_to_library","text":"return type; updates model library JSON file model type name provided user.","code":""},{"path":"/reference/as.intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list to a intervention object — as.intervention","title":"Convert a list to a intervention object — as.intervention","text":"Convert list intervention object","code":""},{"path":"/reference/as.intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list to a intervention object — as.intervention","text":"","code":"as.intervention(x)"},{"path":"/reference/as.intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list to a intervention object — as.intervention","text":"x list, object inherits list.","code":""},{"path":"/reference/as.intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list to a intervention object — as.intervention","text":"intervention class object.","code":""},{"path":"/reference/as.intervention.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list to a intervention object — as.intervention","text":"","code":"# prepare a list npi <- list(   name = \"npi\",   time_begin = 30,   time_end = 60,   contact_reduction = matrix(0.1, 3) )  as.intervention(npi) #> <intervention> #> Intervention name: \"npi\" #> Time begin: #>      [,1] #> [1,]   30 #> Time end: #>      [,1] #> [1,]   60 #> Contact reduction: #>      [,1] #> [1,]  0.1 #> [2,]  0.1 #> [3,]  0.1"},{"path":"/reference/as.vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list to a vaccination object — as.vaccination","title":"Convert a list to a vaccination object — as.vaccination","text":"Convert list vaccination object","code":""},{"path":"/reference/as.vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list to a vaccination object — as.vaccination","text":"","code":"as.vaccination(x)"},{"path":"/reference/as.vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list to a vaccination object — as.vaccination","text":"x list, object inherits list.","code":""},{"path":"/reference/as.vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list to a vaccination object — as.vaccination","text":"vaccination class object.","code":""},{"path":"/reference/as.vaccination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list to a vaccination object — as.vaccination","text":"","code":"# prepare a list vax <- list(   name = \"vax_regime\",   time_begin = matrix(1),   time_end = matrix(100),   nu = matrix(0.001) )  as.vaccination(vax) #> <vaccination> #> Vaccination name: \"vax_regime\" #>  #> Time begin: #>      dose_1 #> [1,]      1 #>  #> Time end: #>      dose_1 #> [1,]    100 #>  #> Vaccination rate: #>      dose_1 #> [1,]  0.001"},{"path":"/reference/assert_infection.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert properties of an infection object — assert_infection","title":"Assert properties of an infection object — assert_infection","text":"Assert objects infection class parameters expected epidemic model. See infection() epidemic(), well model details check infection parameters required model. function internal use argument checking functions.","code":""},{"path":"/reference/assert_infection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert properties of an infection object — assert_infection","text":"","code":"assert_infection(   x,   default_params = c(\"name\", \"r0\", \"infectious_period\"),   extra_parameters,   extra_parameters_limits )"},{"path":"/reference/assert_infection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert properties of an infection object — assert_infection","text":"x infection object. default_params Default parameter names present infection object. argument provided account potential changes default elements infection object, expected changed. extra_parameters character vector giving names extra parameters included x. x may already expected members r0 infectious_period. extra_parameters_limits optional named list numeric limits acceptable limits parameters specifies extra_parameters. list element must named, two element vector 'lower' 'upper' limits. extra parameters need limits passed explicitly. Parameters whose limits explicitly specified values checked lower bound 0, upper limit expected finite.","code":""},{"path":"/reference/assert_infection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert properties of an infection object — assert_infection","text":"Silently returns infection object x. Primarily called side effects throwing errors x meet certain requirements.","code":""},{"path":"/reference/assert_infection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assert properties of an infection object — assert_infection","text":"","code":"if (FALSE) { # prepare a well formed infection object for the default model infection_default <- infection(   name = \"influenza\", r0 = 1.3, infectious_period = 10,   preinfectious_period = 3, mortality_rate = 1e-4 )  # expect no errors for well formed infection-assertion matches assert_infection(   infection_default,   extra_parameters = c(\"preinfectious_period\", \"mortality_rate\") ) }"},{"path":"/reference/assert_intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert properties of a intervention object — assert_intervention","title":"Assert properties of a intervention object — assert_intervention","text":"Assert objects intervention class properties expected epidemic model. See intervention() epidemic(), well model details check intervention properties required model. function internal use argument checking functions.","code":""},{"path":"/reference/assert_intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert properties of a intervention object — assert_intervention","text":"","code":"assert_intervention(x, population)"},{"path":"/reference/assert_intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert properties of a intervention object — assert_intervention","text":"x intervention object. population optional argument population object. present, used check whether intervention object x corresponding values contact_reduction demographic group population.","code":""},{"path":"/reference/assert_intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert properties of a intervention object — assert_intervention","text":"Silently returns intervention object x. Primarily called side effects throwing errors x meet certain requirements.","code":""},{"path":"/reference/assert_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert properties of a population object — assert_population","title":"Assert properties of a population object — assert_population","text":"Assert objects population class parameters expected epidemic model. See population() epidemic(), well model details check population parameters required model. function internal use argument checking functions.","code":""},{"path":"/reference/assert_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert properties of a population object — assert_population","text":"","code":"assert_population(x, compartments)"},{"path":"/reference/assert_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert properties of a population object — assert_population","text":"x population object. compartments character vector giving names model compartments whose length taken reference number columns initial_conditions matrix x.","code":""},{"path":"/reference/assert_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert properties of a population object — assert_population","text":"Silently returns population object x. Primarily called side effects throwing errors x meet certain requirements.","code":""},{"path":"/reference/assert_vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert properties of a vaccination object — assert_vaccination","title":"Assert properties of a vaccination object — assert_vaccination","text":"Assert objects vaccination class parameters expected epidemic model. See vaccination() epidemic(), well model details check vaccination properties required model. function internal use argument checking functions.","code":""},{"path":"/reference/assert_vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert properties of a vaccination object — assert_vaccination","text":"","code":"assert_vaccination(x, doses, population)"},{"path":"/reference/assert_vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert properties of a vaccination object — assert_vaccination","text":"x vaccination object. doses number doses expected vaccination object. population optional argument population object. present, used check whether vaccination object x corresponding values demographic group population.","code":""},{"path":"/reference/assert_vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert properties of a vaccination object — assert_vaccination","text":"Silently returns vaccination object x. Primarily called side effects throwing errors x meet certain requirements.","code":""},{"path":"/reference/c.intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate intervention doses into a multi-dose intervention — c.intervention","title":"Concatenate intervention doses into a multi-dose intervention — c.intervention","text":"Concatenate intervention doses multi-dose intervention","code":""},{"path":"/reference/c.intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate intervention doses into a multi-dose intervention — c.intervention","text":"","code":"# S3 method for intervention c(x, ...)"},{"path":"/reference/c.intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate intervention doses into a multi-dose intervention — c.intervention","text":"x intervention object. ... intervention objects combine x create multi-dose intervention object.","code":""},{"path":"/reference/c.intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate intervention doses into a multi-dose intervention — c.intervention","text":"intervention object many doses overall number doses specified x objects passed ....","code":""},{"path":"/reference/c.intervention.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate intervention doses into a multi-dose intervention — c.intervention","text":"","code":"# create first dose regime npi_1 <- intervention(   time_begin = 30,   time_end = 60,   contact_reduction = matrix(0.1) )  # second dose regime npi_2 <- intervention(   time_begin = 45,   time_end = 75,   contact_reduction = matrix(0.1) )  c(npi_1, npi_2) #> <intervention> #> Intervention name: NA #> Time begin: #>      npi_1 npi_2 #> [1,]    30    45 #> Time end: #>      npi_1 npi_2 #> [1,]    60    75 #> Contact reduction: #>      npi_1 npi_2 #> [1,]   0.1   0.1"},{"path":"/reference/c.vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate vaccination doses into a multi-dose vaccination — c.vaccination","title":"Concatenate vaccination doses into a multi-dose vaccination — c.vaccination","text":"Concatenate vaccination doses multi-dose vaccination","code":""},{"path":"/reference/c.vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate vaccination doses into a multi-dose vaccination — c.vaccination","text":"","code":"# S3 method for vaccination c(x, ...)"},{"path":"/reference/c.vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate vaccination doses into a multi-dose vaccination — c.vaccination","text":"x vaccination object. ... Vaccination objects combine x create multi-dose vaccination object.","code":""},{"path":"/reference/c.vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate vaccination doses into a multi-dose vaccination — c.vaccination","text":"vaccination object many doses overall number doses specified x objects passed ....","code":""},{"path":"/reference/c.vaccination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate vaccination doses into a multi-dose vaccination — c.vaccination","text":"","code":"# create first dose regime vax_1 <- vaccination(   name = \"vax_regime\",   time_begin = matrix(1),   time_end = matrix(100),   nu = matrix(0.001) )  # second dose regime vax_2 <- vaccination(   name = \"vax_regime\",   time_begin = matrix(101),   time_end = matrix(200),   nu = matrix(0.001) )  c(vax_1, vax_2) #> <vaccination> #> Vaccination name: \"vax_regime\" #>  #> Time begin: #>      dose_1 dose_2 #> [1,]      1    101 #>  #> Time end: #>      dose_1 dose_2 #> [1,]    100    200 #>  #> Vaccination rate: #>      dose_1 dose_2 #> [1,]  0.001  0.001"},{"path":"/reference/compute_erlang_discrete_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete probabilities for an Erlang distribution — compute_erlang_discrete_prob","title":"Discrete probabilities for an Erlang distribution — compute_erlang_discrete_prob","text":"Discrete probabilities Erlang distribution","code":""},{"path":"/reference/compute_erlang_discrete_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete probabilities for an Erlang distribution — compute_erlang_discrete_prob","text":"","code":"compute_erlang_discrete_prob(k, gamma)"},{"path":"/reference/compute_erlang_discrete_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete probabilities for an Erlang distribution — compute_erlang_discrete_prob","text":"k shape parameter Erlang distribution. gamma rate parameter Erlang distribution.","code":""},{"path":"/reference/compute_erlang_discrete_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discrete probabilities for an Erlang distribution — compute_erlang_discrete_prob","text":"","code":"A vector containing all p_i values, for i = 1 : n."},{"path":"/reference/dot-check_args_epidemic_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Check arguments to default epidemic function — .check_args_epidemic_default","title":"Check arguments to default epidemic function — .check_args_epidemic_default","text":"Check arguments default epidemic function","code":""},{"path":"/reference/dot-check_args_epidemic_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check arguments to default epidemic function — .check_args_epidemic_default","text":"","code":".check_args_epidemic_default(mod_args)"},{"path":"/reference/dot-check_args_epidemic_ebola.html","id":null,"dir":"Reference","previous_headings":"","what":"Check arguments to epidemic ebola model from Getz and Dougherty — .check_args_epidemic_ebola","title":"Check arguments to epidemic ebola model from Getz and Dougherty — .check_args_epidemic_ebola","text":"Check arguments epidemic ebola model Getz Dougherty","code":""},{"path":"/reference/dot-check_args_epidemic_ebola.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check arguments to epidemic ebola model from Getz and Dougherty — .check_args_epidemic_ebola","text":"","code":".check_args_epidemic_ebola(mod_args)"},{"path":"/reference/dot-check_args_epidemic_vacamole.html","id":null,"dir":"Reference","previous_headings":"","what":"Check arguments to epidemic function for the Vacamole model — .check_args_epidemic_vacamole","title":"Check arguments to epidemic function for the Vacamole model — .check_args_epidemic_vacamole","text":"Check arguments epidemic function Vacamole model","code":""},{"path":"/reference/dot-check_args_epidemic_vacamole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check arguments to epidemic function for the Vacamole model — .check_args_epidemic_vacamole","text":"","code":".check_args_epidemic_vacamole(mod_args)"},{"path":"/reference/dot-epidemic_default_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an age-structured SEIR-V epidemic model — .epidemic_default_cpp","title":"Run an age-structured SEIR-V epidemic model — .epidemic_default_cpp","text":"compartmental model optional non-pharmaceutical intervention optional vaccination regime. Allows heterogeneity social contact patterns, variable sizes demographic groups. Also allows group-specific initial proportions model compartment, well group-specific vaccination start dates vaccination rates, also group-specific effects implementing non-pharmaceutical intervention. model allows single, population-wide rates transition 'susceptible' 'exposed' compartments, 'exposed' 'infectious' compartments, recovery rate.","code":""},{"path":"/reference/dot-epidemic_default_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an age-structured SEIR-V epidemic model — .epidemic_default_cpp","text":"","code":".epidemic_default_cpp(   population,   beta,   alpha,   gamma,   intervention,   vaccination,   time_end = 200,   increment = 0.1 )"},{"path":"/reference/dot-epidemic_default_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an age-structured SEIR-V epidemic model — .epidemic_default_cpp","text":"population object population class, holds population contact matrix, demography vector, initial conditions demographic group. See population(). beta transmission rate \\(\\beta\\). alpha rate transition exposed infectious \\(\\alpha\\). gamma recovery rate \\(\\gamma\\). intervention non-pharmaceutical intervention applied course epidemic, start end time, age-specific effect contacts. See intervention(). vaccination vaccination regime followed course epidemic, start end time, age-specific effect transition individuals susceptible vaccinated. See vaccination(). time_end maximum time, defaults 200.0. increment increment time, defaults 0.1.","code":""},{"path":"/reference/dot-epidemic_default_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an age-structured SEIR-V epidemic model — .epidemic_default_cpp","text":"two element list, first element list matrices whose elements correspond numbers individuals compartment specified initial conditions matrix (see population()). second list element vector timesteps.","code":""},{"path":"/reference/dot-epidemic_ebola_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an SEIR model with Erlang passage times — .epidemic_ebola_cpp","title":"Run an SEIR model with Erlang passage times — .epidemic_ebola_cpp","text":"Wrapper function SEIR compartmental model Erlang passage times based Getz Dougherty (2017) J. Biological Dynamics, developed model West African ebola virus disease outbreak 2014 .","code":""},{"path":"/reference/dot-epidemic_ebola_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an SEIR model with Erlang passage times — .epidemic_ebola_cpp","text":"","code":".epidemic_ebola_cpp(   population,   population_size,   initial_conditions,   beta,   shape_E,   rate_E,   shape_I,   rate_I,   time_end )"},{"path":"/reference/dot-epidemic_ebola_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an SEIR model with Erlang passage times — .epidemic_ebola_cpp","text":"population object population class, holds population contact matrix, demography vector, initial conditions demographic group. See population(). population_size single integer population size. initial_conditions integer vector initial conditions corresponding SEIR model. beta transmission rate \\(\\beta\\). shape_E single integer shape parameter Erlang distribution passage times exposed compartment. rate_E single double rate parameter Erlang distribution passage times exposed compartment. shape_I single integer shape parameter Erlang distribution passage times infectious compartment. rate_I single double rate parameter Erlang distribution passage times infectious compartment. time_end single integer maximum simulation time; assumed days.","code":""},{"path":"/reference/dot-epidemic_ebola_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an SEIR model with Erlang passage times — .epidemic_ebola_cpp","text":"list two elements, x, integer matrix many rows number timesteps (given time_end), four columns, one compartment, susceptible, exposed, infectious, recovered, order ; times, vector simulation times, taken days. output intended passed output_to_df() converted data.frame analysis.","code":""},{"path":"/reference/dot-epidemic_vacamole_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the RIVM Vacamole model — .epidemic_vacamole_cpp","title":"Run the RIVM Vacamole model — .epidemic_vacamole_cpp","text":"Vacamole deterministic, compartmental epidemic model built Kylie Ainslie others RIVM, Dutch Public Health Institute Covid-19 pandemic, focus scenario modelling hospitalisation vaccination. Model code: https://github.com/kylieainslie/vacamole Manuscript describing model application: https://doi.org/10.2807/1560-7917.ES.2022.27.44.2101090","code":""},{"path":"/reference/dot-epidemic_vacamole_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the RIVM Vacamole model — .epidemic_vacamole_cpp","text":"","code":".epidemic_vacamole_cpp(   population,   beta,   beta_v,   alpha,   omega,   omega_v,   eta,   eta_v,   gamma,   intervention,   vaccination,   time_end,   increment )"},{"path":"/reference/dot-epidemic_vacamole_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the RIVM Vacamole model — .epidemic_vacamole_cpp","text":"population object population class, holds population contact matrix, demography vector, initial conditions demographic group. See population(). beta transmission rate \\(\\beta\\) unvaccinated partially vaccinated individuals infected disease. beta_v transmission rate \\(\\beta_V\\) individuals received two vaccine doses infected disease. alpha rate transition exposed infectious \\(\\alpha\\). common fully susceptible, partially vaccinated, fully vaccinated individuals (fully vaccinated represents two doses). omega mortality rate fully susceptible partially vaccinated unprotected individuals. omega_v mortality rate individuals protected vaccination. eta hospitalisation rate fully susceptible partially vaccinated unprotected individuals. eta_v hospitalisation rate individuals protected vaccination. gamma recovery rate \\(\\gamma\\). intervention non-pharmaceutical intervention applied course epidemic, start end time, age-specific effect contacts. See intervention(). vaccination vaccination regime followed course epidemic, group- dose-specific start end time, age-specific rates delivery first second doses. See vaccination(). time_end maximum time. See epidemic() default value. increment increment time. See epidemic() default value.","code":""},{"path":"/reference/dot-epidemic_vacamole_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the RIVM Vacamole model — .epidemic_vacamole_cpp","text":"two element list, first element list matrices whose elements correspond numbers individuals compartment specified initial conditions matrix (see population()). second list element vector timesteps.","code":""},{"path":"/reference/dot-epidemic_vacamole_cpp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the RIVM Vacamole model — .epidemic_vacamole_cpp","text":"original model 8 conceptual compartments - four epidemiological compartments (SEIR), three hospitalisation compartments (H, ICU, ICU2H), death - see manuscript Eurosurveillance. infected individuals can enter hospitalisation death compartments. Vacamole implemented stand-alone R package, versions used generate scenarios ECDC Covid-19 Scenario Hub. Individuals susceptible compartment may vaccinated partially fully (assuming two dose regimen), second dose reducing probability infected, hospitalised dying.","code":""},{"path":"/reference/dot-prepare_args_epidemic_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare arguments to default epidemic function — .prepare_args_epidemic_default","title":"Prepare arguments to default epidemic function — .prepare_args_epidemic_default","text":"Prepare arguments default epidemic function","code":""},{"path":"/reference/dot-prepare_args_epidemic_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare arguments to default epidemic function — .prepare_args_epidemic_default","text":"","code":".prepare_args_epidemic_default(mod_args)"},{"path":"/reference/dot-prepare_args_epidemic_ebola.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare arguments to epidemic ebola model from Getz and Dougherty — .prepare_args_epidemic_ebola","title":"Prepare arguments to epidemic ebola model from Getz and Dougherty — .prepare_args_epidemic_ebola","text":"Prepare arguments epidemic ebola model Getz Dougherty","code":""},{"path":"/reference/dot-prepare_args_epidemic_ebola.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare arguments to epidemic ebola model from Getz and Dougherty — .prepare_args_epidemic_ebola","text":"","code":".prepare_args_epidemic_ebola(mod_args)"},{"path":"/reference/dot-prepare_args_epidemic_vacamole.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare arguments for the Vacamole epidemic function — .prepare_args_epidemic_vacamole","title":"Prepare arguments for the Vacamole epidemic function — .prepare_args_epidemic_vacamole","text":"Prepare arguments Vacamole epidemic function","code":""},{"path":"/reference/dot-prepare_args_epidemic_vacamole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare arguments for the Vacamole epidemic function — .prepare_args_epidemic_vacamole","text":"","code":".prepare_args_epidemic_vacamole(mod_args)"},{"path":"/reference/dot-prob_discrete_erlang.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the discrete probability of the truncated Erlang distribution — .prob_discrete_erlang","title":"Compute the discrete probability of the truncated Erlang distribution — .prob_discrete_erlang","text":"helper function gives probability discrete values Erlang distribution given shape rate. number values returned correspond number discrete values cumulative probability reaches 0.99.","code":""},{"path":"/reference/dot-prob_discrete_erlang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the discrete probability of the truncated Erlang distribution — .prob_discrete_erlang","text":"","code":".prob_discrete_erlang(shape = 5L, rate = 1)"},{"path":"/reference/dot-prob_discrete_erlang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the discrete probability of the truncated Erlang distribution — .prob_discrete_erlang","text":"shape single integer-like number shape Erlang distribution. rate single number rate Erlang distribution.","code":""},{"path":"/reference/dot-prob_discrete_erlang.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the discrete probability of the truncated Erlang distribution — .prob_discrete_erlang","text":"vector variable length giving probability integer value cumulative probability 0.99.","code":""},{"path":"/reference/epidemic.html","id":null,"dir":"Reference","previous_headings":"","what":"Model an epidemic — epidemic","title":"Model an epidemic — epidemic","text":"Simulate epidemic using deterministic, compartmental epidemic model package's library epidemic models. option currently available SEIR-V model, compartments \"susceptible\", \"exposed\", \"infectious\", \"recovered\", \"vaccinated\". call epidemic() must provide population infection object, arguments flexible, may passed .... See Details information.","code":""},{"path":"/reference/epidemic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model an epidemic — epidemic","text":"","code":"epidemic(   model_name = c(\"default\", \"vacamole\", \"ebola\"),   population,   infection,   time_end = 200,   increment = 1,   ... )"},{"path":"/reference/epidemic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model an epidemic — epidemic","text":"model_name string epidemic model. currently supported option \"default\", default SEIR-V model. population object population class, holds population contact matrix, demography vector, initial conditions demographic group. See population(). infection infection object created using infection(). Must least basic reproductive number \\(R_0\\) infection, infectious period. Parameters required models can found documentation model functions. time_end maximum number timesteps run model. Taken days, default value 200 days. increment size time increment. Taken days, default value 1 day. ... Arguments model specified model. See Details supported arguments.","code":""},{"path":"/reference/epidemic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model an epidemic — epidemic","text":"data.frame columns \"time\", \"compartment\", \"age_group\", \"value\". compartments correspond compartments model chosen model. current default model compartments \"susceptible\", \"exposed\", \"infectious\", \"recovered\", \"vaccinated\".","code":""},{"path":"/reference/epidemic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model an epidemic — epidemic","text":"Arguments passed ... may differ depending model specified model. default model (model_name = \"default\") takes following arguments. population object population class, holds population contact matrix, demography vector, initial conditions demographic group. See population(). infection infection class object giving parameters appropriate SEIR-V model. See infection(). infection object must parameters: r0 reproductive number infection, \\(R_0\\). Must number vector numbers length number demographic groups, depending model implemented. 'default' model requires single number. preinfectious_period mean infectious period. Must number vector numbers length number demographic groups, depending model implemented. 'default' model requires single number. infectious_period mean infections period. Must number vector numbers length number demographic groups, depending model implemented. 'default' model requires single number. intervention optional non-pharmaceutical intervention applied population epidemic. See intervention(). optional argument default model. vaccination optional vaccination regime followed course epidemic, start end time, age-specific effect transition individuals susceptible vaccinated. See vaccination(). optional argument default model.","code":""},{"path":"/reference/epidemic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model an epidemic — epidemic","text":"","code":"# create a population uk_population <- population(   name = \"UK population\",   contact_matrix = matrix(1),   demography_vector = 67e6,   initial_conditions = matrix(     c(0.9999, 0.0001, 0, 0, 0),     nrow = 1, ncol = 5L   ) )  # specify the infection parameters pandemic_influenza <- infection(   r0 = 1.5, infectious_period = 7, preinfectious_period = 3 )  # run epidemic simulation with no vaccination or intervention epidemic(   model_name = \"default\",   population = uk_population,   infection = pandemic_influenza,   time_end = 200,   increment = 1 ) #>       time demography_group compartment      value #>    1:    0     demo_group_1 susceptible 66993300.0 #>    2:    0     demo_group_1     exposed     6700.0 #>    3:    0     demo_group_1  infectious        0.0 #>    4:    0     demo_group_1   recovered        0.0 #>    5:    0     demo_group_1  vaccinated        0.0 #>   ---                                              #> 1001:  200     demo_group_1 susceptible 35831461.3 #> 1002:  200     demo_group_1     exposed   871176.8 #> 1003:  200     demo_group_1  infectious  2346467.2 #> 1004:  200     demo_group_1   recovered 27950894.7 #> 1005:  200     demo_group_1  vaccinated        0.0"},{"path":"/reference/epidemic_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the epidemic size — epidemic_size","title":"Get the epidemic size — epidemic_size","text":"Get size epidemic stage start end. calculated number individuals recovered infection stage epidemic.","code":""},{"path":"/reference/epidemic_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the epidemic size — epidemic_size","text":"","code":"epidemic_size(data, stage = 1, by_group = TRUE, deaths = TRUE)"},{"path":"/reference/epidemic_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the epidemic size — epidemic_size","text":"data data.table (data.frame) model output, typically output epidemic(). stage stage epidemic return epidemic size; , 0.0 represents initial conditions epidemic (0% model time ), 1.0 represents end epidemic model (100% model time). values returned stage = 1.0 represent final size epidemic. by_group logical representing whether epidemic size returned demographic group, whether single population-wide value returned. deaths logical value indicates whether count individuals epidemic size calculation. Setting deaths = TRUE looks \"dead\" compartment data. column, function returns final number recovered individuals demographic group.","code":""},{"path":"/reference/epidemic_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the epidemic size — epidemic_size","text":"single number by_group = FALSE, vector numbers length number demographic groups by_group = TRUE.","code":""},{"path":"/reference/epidemic_size.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the epidemic size — epidemic_size","text":"function can used calculate final size epidemic, setting stage = 1.0 (100% model time; default). function allows calculation epidemic sizes demographic group well total epidemic size.","code":""},{"path":"/reference/epidemic_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the epidemic size — epidemic_size","text":"","code":"# create a population uk_population <- population(   name = \"UK population\",   contact_matrix = matrix(1),   demography_vector = 67e6,   initial_conditions = matrix(     c(0.9999, 0.0001, 0, 0, 0),     nrow = 1, ncol = 5L   ) )  # create an infection object pandemic_influenza <- infection(   r0 = 1.5, infectious_period = 7, preinfectious_period = 3 )  # run epidemic simulation with no vaccination or intervention data <- epidemic(   model_name = \"default\",   population = uk_population,   infection = pandemic_influenza,   time_end = 200,   increment = 1 )  # get the final epidemic size epidemic_size(data) #> No 'dead' compartment found in `data`; counting only 'recovered' individuals in the epidemic size. #> demo_group_1  #>     27950895   # get the epidemic size at the halfway point epidemic_size(data, stage = 0.5) #> No 'dead' compartment found in `data`; counting only 'recovered' individuals in the epidemic size. #> demo_group_1  #>      1132229"},{"path":"/reference/epidemics-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epidemics: A Library of Compartmental Epidemic Scenario Models — epidemics-package","title":"epidemics: A Library of Compartmental Epidemic Scenario Models — epidemics-package","text":"Model epidemics using compartmental models.","code":""},{"path":[]},{"path":"/reference/epidemics-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epidemics: A Library of Compartmental Epidemic Scenario Models — epidemics-package","text":"Maintainer: Pratik Gupte pratik.gupte@lshtm.ac.uk (ORCID) [copyright holder] Authors: Rosalind Eggo rosalind.eggo@lshtm.ac.uk (ORCID) [copyright holder] Edwin Van Leeuwen edwin.vanleeuwen@ukhsa.gov.uk (ORCID) [copyright holder] contributors: Tim Taylor tim.taylor@hiddenelephants.co.uk (ORCID) [contributor, reviewer] Hugo Gruson hugo.gruson@data.org (ORCID) [reviewer] Joshua W. Lambert joshua.lambert@lshtm.ac.uk (ORCID) [reviewer]","code":""},{"path":"/reference/get_model_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names of available models — get_model_names","title":"Get names of available models — get_model_names","text":"Get names available models","code":""},{"path":"/reference/get_model_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names of available models — get_model_names","text":"","code":"get_model_names(model_type = \"epidemic\")"},{"path":"/reference/get_model_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names of available models — get_model_names","text":"model_type model type. option currently available \"epidemic\". Future development may see addition model types, including endemic disease compartmental models, branching process outbreak models.","code":""},{"path":"/reference/infection.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a new infection for an epidemic model — infection","title":"Prepare a new infection for an epidemic model — infection","text":"Prepare new infection epidemic model","code":""},{"path":"/reference/infection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a new infection for an epidemic model — infection","text":"","code":"infection(name = NA_character_, r0, infectious_period, ...)"},{"path":"/reference/infection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a new infection for an epidemic model — infection","text":"name String name infection. default value NA. r0 basic reproductive number infection, \\(R_0\\). Must number vector numbers length number demographic groups, depending model implemented. 'default' model requires single number. infectious_period mean infections period. Must number vector numbers length number demographic groups, depending model implemented. Currently, option pass single infectious period common demographic groups available. ... arguments representing infection parameters. argument intentionally left flexible allow single values vectors values.","code":""},{"path":"/reference/infection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a new infection for an epidemic model — infection","text":"object infection S3 class.","code":""},{"path":"/reference/infection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a new infection for an epidemic model — infection","text":"","code":"infection(   name = \"pandemic influenza\",   r0 = 1.3,   infectious_period = 5,   preinfectious_period = 2 ) #> <infection> #> infection name: \"pandemic influenza\" #> R0: 1.3 #> Infectious period: 5 #> Other infection parameters: #> \"preinfectious_period\""},{"path":"/reference/intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new intervention for an epidemic model — intervention","title":"Construct a new intervention for an epidemic model — intervention","text":"Construct new intervention epidemic model","code":""},{"path":"/reference/intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new intervention for an epidemic model — intervention","text":"","code":"intervention(name = NA_character_, time_begin, time_end, contact_reduction)"},{"path":"/reference/intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new intervention for an epidemic model — intervention","text":"name String name intervention. time_begin Single number start time intervention. time_end Single number end time intervention. contact_reduction vector length number demographic groups target population, gives overall group-specific proportion reduction contacts respectively.","code":""},{"path":"/reference/intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a new intervention for an epidemic model — intervention","text":"object intervention S3 class.","code":""},{"path":"/reference/intervention.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a new intervention for an epidemic model — intervention","text":"","code":"# assuming a population with two age groups, 0 -- 18, and 18+ # an example in which schools are closed for 30 days (or other time units) close_schools <- intervention(   name = \"close schools\",   time_begin = 50,   time_end = 80,   contact_reduction = matrix(c(0.5, 0.01)) # reduces contacts differentially ) close_schools #> <intervention> #> Intervention name: \"close schools\" #> Time begin: #>      [,1] #> [1,]   50 #> Time end: #>      [,1] #> [1,]   80 #> Contact reduction: #>      [,1] #> [1,] 0.50 #> [2,] 0.01"},{"path":"/reference/is_infection.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an object is an infection — is_infection","title":"Check whether an object is an infection — is_infection","text":"Check whether object infection","code":""},{"path":"/reference/is_infection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an object is an infection — is_infection","text":"","code":"is_infection(object)"},{"path":"/reference/is_infection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an object is an infection — is_infection","text":"object object checked infection.","code":""},{"path":"/reference/is_infection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an object is an infection — is_infection","text":"logical whether object infection class.","code":""},{"path":"/reference/is_infection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether an object is an infection — is_infection","text":"","code":"pandemic_influenza <- infection(   name = \"pandemic influenza\",   r0 = 1.3,   infectious_period = 5,   preinfectious_period = 2 ) is_infection(pandemic_influenza) #> [1] TRUE"},{"path":"/reference/is_intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an object is an intervention — is_intervention","title":"Check whether an object is an intervention — is_intervention","text":"Check whether object intervention","code":""},{"path":"/reference/is_intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an object is an intervention — is_intervention","text":"","code":"is_intervention(object)"},{"path":"/reference/is_intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an object is an intervention — is_intervention","text":"object object checked intervention.","code":""},{"path":"/reference/is_intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an object is an intervention — is_intervention","text":"logical whether object intervention class.","code":""},{"path":"/reference/is_intervention.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether an object is an intervention — is_intervention","text":"","code":"close_schools <- intervention(   name = \"close schools\",   time_begin = 50,   time_end = 80,   contact_reduction = matrix(c(0.5, 0.01)) # reduces contacts differentially ) is_intervention(close_schools) #> [1] TRUE"},{"path":"/reference/is_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an object is a population — is_population","title":"Check whether an object is a population — is_population","text":"Check whether object population","code":""},{"path":"/reference/is_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an object is a population — is_population","text":"","code":"is_population(object)"},{"path":"/reference/is_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an object is a population — is_population","text":"object object checked valid population.","code":""},{"path":"/reference/is_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an object is a population — is_population","text":"logical whether object population.","code":""},{"path":"/reference/is_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether an object is a population — is_population","text":"","code":"# for the UK new_pop <- population(   initial_conditions = matrix(     c(0.999, 0.001, 0, 0),     nrow = 1, ncol = 4   ) ) is_population(new_pop) #> [1] TRUE"},{"path":"/reference/is_vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an object is a vaccination — is_vaccination","title":"Check whether an object is a vaccination — is_vaccination","text":"Check whether object vaccination","code":""},{"path":"/reference/is_vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an object is a vaccination — is_vaccination","text":"","code":"is_vaccination(object)"},{"path":"/reference/is_vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an object is a vaccination — is_vaccination","text":"object object checked vaccination.","code":""},{"path":"/reference/is_vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an object is a vaccination — is_vaccination","text":"logical whether object vaccination class.","code":""},{"path":"/reference/is_vaccination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether an object is a vaccination — is_vaccination","text":"","code":"# an example for childhood vaccination only childhood_vaccination <- vaccination(   name = \"childhood_vaccination\",   time_begin = matrix(c(0, 100)), # assuming a simulation over 100 days   time_end = matrix(c(100, 100)),   nu = matrix(c(0.0001, 0.0)) # over 5s never vaccinated ) #> Vaccination: some `time_end`s are not greater than `time_begin`s #> Vaccination: some `time_end`s are not greater than `time_begin`s is_vaccination(childhood_vaccination) #> [1] TRUE"},{"path":"/reference/model_library.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and display the model library — model_library","title":"Read and display the model library — model_library","text":"Read display model library","code":""},{"path":"/reference/model_library.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and display the model library — model_library","text":"","code":"model_library()"},{"path":"/reference/model_library.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and display the model library — model_library","text":"data.frame representing model library.","code":""},{"path":"/reference/new_infections.html","id":null,"dir":"Reference","previous_headings":"","what":"Get new infections — new_infections","title":"Get new infections — new_infections","text":"Get new infections","code":""},{"path":"/reference/new_infections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get new infections — new_infections","text":"","code":"new_infections(data, compartments_from_susceptible, by_group = TRUE)"},{"path":"/reference/new_infections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get new infections — new_infections","text":"data data.table (data.frame) model output, typically output epidemic(). compartments_from_susceptible optional argument, character vector names model compartments individuals transition \"susceptible\" compartment, related infection. common example compartment \"vaccinated\" individuals longer susceptible, also counted infected. by_group logical representing whether epidemic size returned demographic group, whether single population-wide value returned.","code":""},{"path":"/reference/new_infections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get new infections — new_infections","text":"data.table columns data, additional variable compartment, \"new_infections\", resulting additional rows.","code":""},{"path":"/reference/new_infections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get new infections — new_infections","text":"","code":"# create a population uk_population <- population(   name = \"UK population\",   contact_matrix = matrix(1),   demography_vector = 67e6,   initial_conditions = matrix(     c(0.9999, 0.0001, 0, 0, 0),     nrow = 1, ncol = 5L   ) )  # create an infection pandemic_influenza <- infection(   r0 = 1.5, infectious_period = 7, preinfectious_period = 3 )  # run epidemic simulation with no vaccination or intervention data <- epidemic(   model_name = \"default\",   population = uk_population,   infection = pandemic_influenza,   time_end = 200,   increment = 1 )  new_infections(data) #> Loading required namespace: testthat #>      time demography_group new_infections #>   1:    0     demo_group_1         0.0000 #>   2:    1     demo_group_1       206.2792 #>   3:    2     demo_group_1       513.2870 #>   4:    3     demo_group_1       713.8049 #>   5:    4     demo_group_1       851.9442 #>  ---                                      #> 197:  196     demo_group_1    301353.1136 #> 198:  197     demo_group_1    294124.8571 #> 199:  198     demo_group_1    286895.5505 #> 200:  199     demo_group_1    279678.9433 #> 201:  200     demo_group_1    272487.9871"},{"path":"/reference/no_intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a null intervention — no_intervention","title":"Generate a null intervention — no_intervention","text":"Generate null intervention","code":""},{"path":"/reference/no_intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a null intervention — no_intervention","text":"","code":"no_intervention(population)"},{"path":"/reference/no_intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a null intervention — no_intervention","text":"population population object contact_matrix member.","code":""},{"path":"/reference/no_intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a null intervention — no_intervention","text":"intervention effect contacts, start end times set 0.0","code":""},{"path":"/reference/no_vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a null vaccination — no_vaccination","title":"Generate a null vaccination — no_vaccination","text":"Generate null vaccination","code":""},{"path":"/reference/no_vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a null vaccination — no_vaccination","text":"","code":"no_vaccination(population, doses = 1L)"},{"path":"/reference/no_vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a null vaccination — no_vaccination","text":"population population object contact_matrix member. doses number, defaulting 1, indicate number doses vaccination regime.","code":""},{"path":"/reference/no_vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a null vaccination — no_vaccination","text":"vaccination effect population, start end times set 0.0, rate vaccination \\(nu\\) also set 0.0.","code":""},{"path":"/reference/output_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Return ODE model output as a data.table — output_to_df","title":"Return ODE model output as a data.table — output_to_df","text":"Return ODE model output data.table","code":""},{"path":"/reference/output_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return ODE model output as a data.table — output_to_df","text":"","code":"output_to_df(output, model_arguments, compartments)"},{"path":"/reference/output_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return ODE model output as a data.table — output_to_df","text":"output model output, must two element list (epidemic) models, names \"x\" \"time\", \"x\" represents condition compartment timestep \"time\". model_arguments list containing model arguments passed epidemic(). scanned information population passed model, must population object; see population(). population object used generate names demographic groups, named. compartments vector model compartment names.","code":""},{"path":"/reference/output_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return ODE model output as a data.table — output_to_df","text":"data.table columns \"compartment\", \"demography_group\", \"value\", \"time\"; specify epidemiological compartment, name demography group, number individuals group compartment, model timestep, respectively. Names demographic groups generated names provided population object; form \"demo_group_X\".","code":""},{"path":"/reference/population.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new population for an epidemic model — population","title":"Construct a new population for an epidemic model — population","text":"Construct new population epidemic model","code":""},{"path":"/reference/population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new population for an epidemic model — population","text":"","code":"population(   name = NA_character_,   contact_matrix = matrix(1),   demography_vector = 6.7e+07,   initial_conditions = matrix() )"},{"path":"/reference/population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new population for an epidemic model — population","text":"name Optional string population name. contact_matrix matrix giving contacts demographic groups population. Must square matrix. demography_vector vector sizes demographic group. Must length dimensions contact matrix. initial_conditions Matrix representing initial proportions demographic group four model compartments: 'susceptible', 'infected/infectious', 'recovered', 'vaccinated'. Must many rows number demographic groups. compartment represented columns matrix, element \\(M_{ij}\\) represents proportion individuals demographic group \\(\\) compartment \\(j\\) .","code":""},{"path":"/reference/population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a new population for an epidemic model — population","text":"object population S3 class.","code":""},{"path":"/reference/population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a new population for an epidemic model — population","text":"","code":"population(   name = \"UK population\",   contact_matrix = matrix(1),   demography_vector = 67e6,   initial_conditions = matrix(     c(0.9999, 0.0001, 0, 0),     nrow = 1, ncol = 4   ) ) #> <population> #> Population name: \"UK population\" #>  #> Demography: #> Dem. grp. 1: 67,000,000 (100%) #>  #> Contact matrix: #>              Dem. grp. 1: #> Dem. grp. 1:            1"},{"path":"/reference/print.infection.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an infection object — print.infection","title":"Print an infection object — print.infection","text":"Print infection object","code":""},{"path":"/reference/print.infection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an infection object — print.infection","text":"","code":"# S3 method for infection print(x, ...)"},{"path":"/reference/print.infection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an infection object — print.infection","text":"x infection object. ... parameters passed print().","code":""},{"path":"/reference/print.infection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print an infection object — print.infection","text":"Invisibly returns infection object x. Called printing side-effects.","code":""},{"path":"/reference/print.intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a intervention object — print.intervention","title":"Print a intervention object — print.intervention","text":"Print intervention object","code":""},{"path":"/reference/print.intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a intervention object — print.intervention","text":"","code":"# S3 method for intervention print(x, ...)"},{"path":"/reference/print.intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a intervention object — print.intervention","text":"x intervention object. ... parameters passed print().","code":""},{"path":"/reference/print.intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a intervention object — print.intervention","text":"Invisibly returns intervention object x. Called printing side-effects.","code":""},{"path":"/reference/print.population.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a population object — print.population","title":"Print a population object — print.population","text":"Print population object","code":""},{"path":"/reference/print.population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a population object — print.population","text":"","code":"# S3 method for population print(x, ...)"},{"path":"/reference/print.population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a population object — print.population","text":"x population object. ... parameters passed print().","code":""},{"path":"/reference/print.population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a population object — print.population","text":"Invisibly returns population object x. Called printing side-effects.","code":""},{"path":"/reference/print.vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a vaccination object — print.vaccination","title":"Print a vaccination object — print.vaccination","text":"Print vaccination object","code":""},{"path":"/reference/print.vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a vaccination object — print.vaccination","text":"","code":"# S3 method for vaccination print(x, ...)"},{"path":"/reference/print.vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a vaccination object — print.vaccination","text":"x vaccination object. ... parameters passed print().","code":""},{"path":"/reference/print.vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a vaccination object — print.vaccination","text":"Invisibly returns vaccination object x. Called printing side-effects.","code":""},{"path":"/reference/read_from_library.html","id":null,"dir":"Reference","previous_headings":"","what":"Get functions from model library — read_from_library","title":"Get functions from model library — read_from_library","text":"Get functions model library","code":""},{"path":"/reference/read_from_library.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get functions from model library — read_from_library","text":"","code":"read_from_library(   model_type = \"epidemic\",   model_name = \"default\",   what = \"model_function\" )"},{"path":"/reference/read_from_library.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get functions from model library — read_from_library","text":"model_type model type. option currently available \"epidemic\". Future development may see addition model types, including endemic disease compartmental models, branching process outbreak models. model_name model name. option currently available \"default\", default epidemic compartmental SEIR-V model. string function requested, may one \"model_function\", \"model_args_checker\", \"model_args_prepper\". correspond functions run model, check arguments, prepare arguments model function, respectively.","code":""},{"path":"/reference/seir_erlang.html","id":null,"dir":"Reference","previous_headings":"","what":"SEIR model with Erlang passage times — seir_erlang","title":"SEIR model with Erlang passage times — seir_erlang","text":"SEIR model Erlang passage times","code":""},{"path":"/reference/seir_erlang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEIR model with Erlang passage times — seir_erlang","text":"","code":"seir_erlang(initial_state, parameters, max_time)"},{"path":"/reference/seir_erlang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEIR model with Erlang passage times — seir_erlang","text":"initial_state vector contains 4 numbers corresponding initial values 4 classes: S, E, , R. parameters vector contains 5 numbers corresponding following parameters: shape rate parameters Erlang distribution used calculate transition rates E components (.e. k[E] gamma[E]), shape rate parameters Erlang distribution used calculate transition rates components (.e. k[] gamma[]), base transmission rate (.e. beta). max_time length simulation.","code":""},{"path":"/reference/seir_erlang.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEIR model with Erlang passage times — seir_erlang","text":"data frame containing values S, E, , R time (1 max_time).","code":""},{"path":"/reference/vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new vaccination regime for an epidemic model — vaccination","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"Construct new vaccination regime epidemic model","code":""},{"path":"/reference/vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"","code":"vaccination(name = NA_character_, nu, time_begin, time_end)"},{"path":"/reference/vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"name String name vaccination regime. nu Matrix group-specific rate vaccination, expressed rate parameter \\(nu\\). element matrix \\(nu_{ij}\\) represents rate delivering vaccine dose \\(j\\) demographic group \\(\\). time_begin Matrix start time delivering vaccination dose \\(j\\) demographic group \\(\\). demographic group \\(\\). time_end Matrix end time delivering vaccination dose \\(j\\) demographic group \\(\\).","code":""},{"path":"/reference/vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"object vaccination S3 class.","code":""},{"path":"/reference/vaccination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"","code":"# assuming a population with two age groups, children 0 -- 5, and others 5+ # an example for childhood vaccination only childhood_vaccination <- vaccination(   name = \"childhood_vaccination\",   time_begin = matrix(c(0, 100)), # assuming a simulation over 100 days   time_end = matrix(c(100, 100)),   nu = matrix(c(0.0001, 0.0)) # over 5s never vaccinated ) #> Vaccination: some `time_end`s are not greater than `time_begin`s #> Vaccination: some `time_end`s are not greater than `time_begin`s childhood_vaccination #> Vaccination: some `time_end`s are not greater than `time_begin`s #> <vaccination> #> Vaccination name: \"childhood_vaccination\" #>  #> Time begin: #>      dose_1 #> [1,]      0 #> [2,]    100 #>  #> Time end: #>      dose_1 #> [1,]    100 #> [2,]    100 #>  #> Vaccination rate: #>      dose_1 #> [1,]  1e-04 #> [2,]  0e+00"}]
