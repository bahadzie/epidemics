[{"path":"https://epiverse.github.io/epidemics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 epidemics authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiverse.github.io/epidemics/articles/benchmarking.html","id":"benchmarking-the-default-model","dir":"Articles","previous_headings":"","what":"Benchmarking the default model","title":"Benchmarking R and Rcpp implementations of epidemic models","text":"code prepare model arguments hidden , can expanded.","code":"# prepare arguments polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE ) #> Using POLYMOD social contact data. To cite this in a publication, use the 'get_citation()' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option contact_matrix <- t(contact_data$matrix) demography_vector <- contact_data$demography$population  # Prepare some initial objects uk_population <- population(   name = \"UK population\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = matrix(     c(0.9999, 0.0001, 0, 0, 0),     nrow = nrow(contact_matrix), ncol = 5L,     byrow = TRUE   ) )  # create a multi intervention multi_intervention <- c(   intervention(     type = \"contacts\",     time_begin = 50, time_end = 100,     reduction = rep(       0.2, nrow(contact_matrix)     )   ),   intervention(     type = \"contacts\",     time_begin = 70, time_end = 90,     reduction = rep(       0.3, nrow(contact_matrix)     )   ) )  # create a vaccination regime vax_regime <- vaccination(   time_begin = matrix(20, nrow(contact_matrix)),   time_end = matrix(100, nrow(contact_matrix)),   nu = matrix(0.01, nrow(contact_matrix)) ) mark(   # run epidemic model, expect no conditions   \"epidemic default R\" = model_default_r(     population = uk_population,     intervention = list(contacts = multi_intervention),     vaccination = vax_regime,     time_end = 100, increment = 1.0   ),   \"epidemic default Rcpp\" = model_default_cpp(     population = uk_population,     intervention = list(contacts = multi_intervention),     vaccination = vax_regime,     time_end = 100, increment = 1.0   ),   iterations = 1000,   time_unit = \"s\",   check = FALSE ) #> # A tibble: 2 × 6 #>   expression                min  median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>              <dbl>   <dbl>     <dbl> <bch:byt>    <dbl> #> 1 epidemic default R    0.0579  0.0593       16.8     2.2MB    26.1  #> 2 epidemic default Rcpp 0.00225 0.00231     431.    151.4KB     7.89"},{"path":"https://epiverse.github.io/epidemics/articles/benchmarking.html","id":"benchmarking-the-vacamole-model","dir":"Articles","previous_headings":"","what":"Benchmarking the Vacamole model","title":"Benchmarking R and Rcpp implementations of epidemic models","text":"code prepare model arguments hidden , can expanded.","code":"# prepare arguments polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE ) #> Using POLYMOD social contact data. To cite this in a publication, use the 'get_citation()' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option contact_matrix <- t(contact_data$matrix) demography_vector <- contact_data$demography$population  # make initial conditions - order is important initial_conditions <- c(   S = 1 - 1e-6,   V1 = 0, V2 = 0,   E = 0, EV = 0,   I = 1e-6, IV = 0,   H = 0, HV = 0, D = 0, R = 0 ) initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # Prepare some initial objects uk_population <- population(   name = \"UK population\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )  # create a multi intervention multi_intervention <- c(   intervention(     type = \"contacts\",     time_begin = 50, time_end = 100,     reduction = rep(       0.2, nrow(contact_matrix)     )   ),   intervention(     type = \"contacts\",     time_begin = 70, time_end = 90,     reduction = rep(       0.3, nrow(contact_matrix)     )   ) )  # prepare a two dose vaccination regime for three age groups double_vaccination <- vaccination(   name = \"double_vaccination\",   nu = matrix(     1e-3,     nrow = 3, ncol = 2   ),   time_begin = matrix(     20,     nrow = 3, ncol = 2   ),   time_end = matrix(     100,     nrow = 3, ncol = 2   ) ) mark(   # run epidemic model, expect no conditions   \"epidemic Vacamole R\" = model_vacamole_r(     population = uk_population,     intervention = list(contacts = multi_intervention),     vaccination = double_vaccination,     time_end = 100, increment = 1.0   ),   \"epidemic Vacamole Rcpp\" = model_vacamole_cpp(     population = uk_population,     intervention = list(contacts = multi_intervention),     vaccination = double_vaccination,     time_end = 100, increment = 1.0   ),   iterations = 1000,   time_unit = \"s\",   check = FALSE ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 2 × 6 #>   expression                 min  median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>               <dbl>   <dbl>     <dbl> <bch:byt>    <dbl> #> 1 epidemic Vacamole R    0.116   0.119        8.31    2.27MB    10.2  #> 2 epidemic Vacamole Rcpp 0.00299 0.00306    316.    309.01KB     6.00"},{"path":"https://epiverse.github.io/epidemics/articles/diphtheria.html","id":"modelling-an-outbreak-with-pre-existing-immunity","dir":"Articles","previous_headings":"","what":"Modelling an outbreak with pre-existing immunity","title":"Modelling a diphtheria outbreak in a humanitarian camp setting","text":"create population object corresponding Kutupalong camp Cox’s Bazar, Bangladesh 2017-18, rounded nearest 100, described Additional file 1 provided Finger et al. (2019). population three age groups, < 5 years, 5 – 14 years, \\(\\geq\\) 15 years. assume one individual infectious age group. assume, following Finger et al. (2019), 20% 5 – 14 year-olds vaccinated (immune ) diphtheria prior start outbreak, coverage much lower among age groups. run model default parameters, assuming : diphtheria \\(R_0\\) 4.0 mean infectious period 4.5 days, giving transmissibility (\\(\\beta\\)) 0.889; diphtheria pre-infectious incubation period 3 days, giving infectiousness rate (\\(\\sigma\\)) 0.33; recovery rate diphtheria 0.33. also make several assumptions regarding clinical progression reporting. Specifically: case reporting (3% infections reported cases), proportion reported cases needing hospitalisation (1%), time taken cases needing hospitalisation seek admitted hospital (5 days, giving daily hospitalisation rate 0.2 among cases), time spent hospital (5 days, giving daily hospitalisation recovery rate 0.2). Finally, assume interventions seasonal effects affect dynamics transmission outbreak. run model plot outcomes. Figure 1: Model results single run showing number individuals infectious diphtheria 100 days outbreak.","code":"# three age groups with five compartments SEIHR n_age_groups <- 3 demography_vector <- c(83000, 108200, 224600) initial_conditions <- matrix(0, nrow = n_age_groups, ncol = 5)  # 1 individual in each group is infectious initial_conditions[, 1] <- demography_vector - 1 initial_conditions[, 3] <- rep(1, n_age_groups)  # camp social contact rates are assumed to be uniform within and between # age groups camp_pop <- population(   contact_matrix = matrix(1, nrow = n_age_groups, ncol = n_age_groups),   demography_vector = demography_vector,   initial_conditions = initial_conditions / demography_vector )  camp_pop #>  #>  Population name:  #>  Demography  #> Dem. grp. 1: 83,000 (20%) #> Dem. grp. 2: 108,200 (30%) #> Dem. grp. 3: 224,600 (50%) #>  #>  Contact matrix  #>              Dem. grp. 1: Dem. grp. 2: Dem. grp. 3: #> Dem. grp. 1:            1            1            1 #> Dem. grp. 2:            1            1            1 #> Dem. grp. 3:            1            1            1 # 20% of 5-14 year-olds are vaccinated prop_vaccinated <- c(0.05, 0.2, 0.05) data <- model_diphtheria_cpp(   population = camp_pop,   prop_vaccinated = prop_vaccinated ) filter(data, compartment == \"infectious\") |>   ggplot() +   geom_line(     aes(time, value, colour = demography_group)   ) +   scale_y_continuous(     labels = scales::comma   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\",     labels = c(\"<5\", \"5-15\", \">15\")   ) +   expand_limits(     x = c(0, 101)   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     y = \"Individuals infectious\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/diphtheria.html","id":"modelling-an-outbreak-with-changing-population-sizes","dir":"Articles","previous_headings":"","what":"Modelling an outbreak with changing population sizes","title":"Modelling a diphtheria outbreak in a humanitarian camp setting","text":"now model outbreak, increase susceptible individuals towards end outbreak, illustrate effect influx non-immune individuals outbreak dynamics. example, assume prior immunity among new arrivals population. prepare population change schedule named list giving times change, corresponding changes demographic group. Note model assumes changes apply susceptible compartment, assume wider population entering camp yet affected diphtheria (.e. infected recovered arrival), already infected hospitalised individuals leave camp. , population size camp increases 75% overall, similar reported values Kutupalong camp scenario (Finger et al. 2019). Figure 2: Model results single run showing number individuals infectious diphtheria 100 days outbreak, increase camp population size. Shaded blue region shows number individuals susceptible infection (right-hand side Y axis). example shows increase number susceptibles population can lead rise transmission potential infection therefore extend duration outbreak.","code":"# susceptibles increase by about 12%, 92%, and 89% of initial sizes pop_change <- list(   time = 70,   values = list(     c(1e4, 1e5, 2e5)   ) ) data <- model_diphtheria_cpp(   population = camp_pop,   population_change = pop_change )  # summarise population change in susceptibles data_pop_size <- filter(data, compartment == \"susceptible\") |>   group_by(time) |>   summarise(     total_susceptibles = sum(value)   ) ggplot() +   geom_area(     data = data_pop_size,     aes(time, total_susceptibles / 10),     fill = \"steelblue\", alpha = 0.5   ) +   geom_line(     data = filter(data, compartment == \"infectious\"),     aes(time, value, colour = demography_group)   ) +   geom_vline(     xintercept = pop_change$time,     colour = \"red\",     linetype = \"dashed\",     linewidth = 0.2   ) +   annotate(     geom = \"text\",     x = pop_change$time,     y = 20e3,     label = \"Population increase\",     angle = 90,     vjust = \"inward\",     colour = \"red\"   ) +   scale_y_continuous(     labels = scales::comma,     sec.axis = dup_axis(       trans = function(x) x * 10,       name = \"Individuals susceptible\"     )   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group (individuals infectious)\",     labels = c(\"<5\", \"5-15\", \">15\")   ) +   expand_limits(     x = c(0, 101)   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     y = \"Individuals infectious\"   )"},{"path":[]},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"Prepare population data — model, need total population size initial conditions. can create <population> object dummy values contact matrix, assign total size demography vector. prepare population total size 14 million, corresponding population Guinea, West African country 2014 Ebola virus epidemic originated. assume 1 person initially infected infectious, 10 people exposed yet become infectious.","code":"population_size <- 14e6  # prepare initial conditions as proportions initial_conditions <- c(   S = population_size - 11, E = 10, I = 1, H = 0, F = 0, R = 0 ) / population_size # prepare a <population> object guinea_population <- population(   name = \"Guinea\",   contact_matrix = matrix(1), # note dummy value   demography_vector = 14e6, # 14 million, no age groups   initial_conditions = matrix(     initial_conditions,     nrow = 1   ) )  guinea_population #>  #>  Population name:  #>  Demography  #> Dem. grp. 1: 14,000,000 (100%) #>  #>  Contact matrix  #>              Dem. grp. 1: #> Dem. grp. 1:            1"},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"prepare-model-parameters","dir":"Articles","previous_headings":"","what":"Prepare model parameters","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"use default model parameters, beginning \\(R_0\\) taken value estimated ebola Guinea (Althaus 2014). assume ebola mean infectious period 12 days, time exposure symptom onset — pre-infectious period — 5 days. Together, give following values: Transmissibility (\\(\\beta\\)): 0.125, Infectiousness rate (\\(\\gamma^E\\) Getz Dougherty (2018)): 0.4, Removal rate (\\(\\gamma^\\) Getz Dougherty (2018)): 0.1667 model yet explicit “deaths” compartment, rather, “removed” compartment holds individuals recovered died buried safely. Functionally, similar part model dynamics. assume 10% infectious individuals hospitalised, hospitalisation achieves modest 30% reduction transmission hospitalised individuals still susceptible. assume also deaths hospital lead ebola-safe funerals, infections result . assume infectious individuals hospitalised die community, funerals potentially ebola-safe. assume transmission rate ebola funerals 50% baseline transmission rate. can also interpreted proportion funerals ebola-safe.","code":""},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"run-epidemic-model","dir":"Articles","previous_headings":"","what":"Run epidemic model","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"run model using function model_ebola_r(). C++ equivalent model, found much faster R-version, made available users. model run 100 days, data reported day. appropriate period obtain initial predictions outbreak, response efforts non-pharmaceutical interventions vaccination campaigns likely launched bring outbreak control.","code":"# set seed to get consistent results set.seed(0)  # run the epidemic model using `epidemic` # we call the model \"ebola\" from the library data <- model_ebola_r(   population = guinea_population,   time_end = 100 )  # view the head of the output head(data) #>   time demography_group  compartment    value #> 1    1     demo_group_1  susceptible 13999989 #> 2    1     demo_group_1      exposed       10 #> 3    1     demo_group_1   infectious        1 #> 4    1     demo_group_1 hospitalised        0 #> 5    1     demo_group_1      funeral        0 #> 6    1     demo_group_1      removed        0"},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"prepare-data-and-visualise-infections","dir":"Articles","previous_headings":"","what":"Prepare data and visualise infections","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"plot ebola epidemic time, showing number individuals exposed infectious. Figure 1: Model results single run showing number individuals exposed infectious compartments 100 days outbreak. model assumes 1 initially infectious person exposed 10 others.","code":"# plot figure of epidemic curve filter(data, compartment %in% c(\"exposed\", \"infectious\")) %>%   ggplot(     aes(       x = time,       y = value,       colour = compartment     )   ) +   geom_line() +   scale_y_continuous(     labels = scales::comma   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = NULL,     labels = c(\"Exposed\", \"Infectious\")   ) +   expand_limits(     x = c(0, 101)   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"consensus-estimates-from-multiple-model-iterations","dir":"Articles","previous_headings":"","what":"Consensus estimates from multiple model iterations","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"Since ebola model stochastic one, model results vary run. can run model multiple times — , 100 times — plot number infectious people, get consensus idea ebola outbreak might look like. plot data. Figure 2: Model results 100 runs showing number individuals infectious compartments 100 days outbreak. models assume 1 initially infectious person exposed 10 others. simple summary using mean (black line standard error shaded red regions), plotted individual model runs (grey) show can wide variation individual outbreak trajectories. observe model stochasticity leads wide variation model outcomes, simulation replicates lead exponential growth outbreak within first 100 days. However, number replicates, outbreak low daily incidence within simulation time, although replicates might show exponential growth later. can find ‘final size’ replicate using epidemic_size() function original simulation data. Note final size refers final size 365 days, duration simulation. Figure 3: Histogram final outbreak sizes 100 ebola outbreaks. taken 100 model runs presented earlier figure, show outbreaks may affect fewer 500 individuals within first 100 days. see replicates affect 600 individuals within first 100 days, replicates fewer 500 cases, suggesting responses halt spread ebola quite effective real outbreaks.","code":"# set seed for consistent output set.seed(1)  # run the simulation 100 times data <- lapply(   X = seq(100),   FUN = function(x) {     data <- model_ebola_r(       population = guinea_population,       time_end = 100     )      # add replicate number and return data     data$replicate <- x     data   } )  # use data.table to collect the data data_timeseries <- bind_rows(data) filter(data_timeseries, compartment == \"infectious\") %>%   ggplot() +   geom_line(     aes(time, value, group = replicate),     alpha = 0.3, colour = \"grey50\"   ) +   stat_summary(     aes(time, value),     geom = \"ribbon\",     fill = \"red\", alpha = 0.5   ) +   stat_summary(     aes(time, value),     geom = \"line\"   ) +   scale_y_continuous(     labels = scales::comma   ) +   expand_limits(     x = c(0, 101)   ) +   coord_cartesian(     expand = FALSE   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     y = \"Individuals infectious with ebola\"   ) # apply the function over each replicate data_final_size <- lapply(   X = data,   FUN = epidemic_size, include_deaths = FALSE, by_group = FALSE ) data_final_size <- unlist(data_final_size) # plot a histogram of the replicates ggplot() +   geom_histogram(     aes(data_final_size),     fill = \"steelblue\"   ) +   scale_x_continuous(     labels = scales::comma   ) +   coord_cartesian(     expand = FALSE   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Epidemic size at 100 days\",     y = \"Number of replicates\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"applying-interventions-that-reduce-transmission","dir":"Articles","previous_headings":"","what":"Applying interventions that reduce transmission","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"intervention reduces transmission can applied passing <rate_intervention> transmission rate parameter, beta. begin initial simple example models intervention begins 15 days outbreak, reduces transmission 20%. can pass intervention model function’s intervention argument. Figure 4: Effect implementing intervention reduces transmission 30% ebola outbreak. intervention begins 15th day (dotted vertical line), active remainder model duration. Applying intervention leads many fewer individuals infectious ebola outbreak. see applying intervention reduces transmission can effective reducing number individuals infected outbreak.","code":"# create an intervention on the transmission rate reduce_transmission <- intervention(   type = \"rate\",   time_begin = 15, time_end = 100, reduction = 0.2 ) # set a seed for comparison with the baseline model set.seed(0)  # run the epidemic model and save data as the baseline data_baseline <- model_ebola_r(   population = guinea_population,   time_end = 100 )  set.seed(0) # note that the intervention is passed within a list, # where it is named for the rate it is targeting data_intervention <- model_ebola_r(   population = guinea_population,   intervention = list(     transmissibility = reduce_transmission   ),   time_end = 100 )  # assign scenario names data_baseline$scenario <- \"baseline\" data_intervention$scenario <- \"intervention\"  # bind the data together data_scenarios <- bind_rows(data_baseline, data_intervention) filter(data_scenarios, compartment == \"removed\") %>%   ggplot() +   geom_vline(     xintercept = 15,     linetype = \"dotted\"   ) +   geom_line(     aes(time, value, colour = scenario)   ) +   scale_colour_brewer(     palette = \"Set1\",     name = \"Scenario\",     labels = c(\"Baseline\", \"Intervention\")   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Days\",     y = \"Outbreak size\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"modelling-the-roll-out-of-vaccination","dir":"Articles","previous_headings":"","what":"Modelling the roll-out of vaccination","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"can also model rollout vaccination EVD, model structured differently models epidemics, vaccination must modelled differently . model_ebola_r() accept vaccination regime <vaccination> object, can still model effect vaccination gradual decrease transmission rate \\(\\beta\\) time. done using time dependence functionality epidemics. New implementing parameter time dependence epidemics? may help read vignette time dependence functionality first! first define function suitable time_dependence argument. function assumes baseline transmission rate ebola decreases time, 5% reduction day due vaccination. Figure 5: Effect implementing vaccination regime gradually reduces ebola transmission time, using time dependence functionality. Similar functionality can used model parameters flexibly allowed <rate_intervention> class.","code":"# we assume a maximum time of 100 days, and a 5% daily reduction # we assume that this vaccination begins on the 15th day time_dep_vax <- function(     time, x, max_time = 100, time_start = 15,     reduction = 0.05) {   if (time < time_start) {     x   } else {     x * ((1.0 - reduction)^(time / max_time))   } } # set a seed for comparison with the baseline model set.seed(0) # note that the intervention is passed within a list, # where it is named for the rate it is targeting data_apply_vax <- model_ebola_r(   population = guinea_population,   time_dependence = list(     transmissibility = time_dep_vax   ),   time_end = 100 )  # assign scenario name data_apply_vax$scenario <- \"apply_vaccination\"  # bind the data together data_scenarios <- bind_rows(data_baseline, data_apply_vax) filter(data_scenarios, compartment == \"removed\") %>%   ggplot() +   geom_vline(     xintercept = 15,     linetype = \"dotted\"   ) +   geom_line(     aes(time, value, colour = scenario)   ) +   scale_colour_brewer(     palette = \"Set1\",     name = \"Scenario\",     labels = c(\"Baseline\", \"Vaccination campaign\")   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Days\",     y = \"Outbreak size\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"modelling-a-multi-pronged-ebola-response","dir":"Articles","previous_headings":"","what":"Modelling a multi-pronged ebola response","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"Since EVD severe disease high case fatality risk, responses outbreak may require simultaneous implementation number measures reduce transmission end outbreak quickly. can use EVD model existing functionality epidemics model implementation multi-pronged response ebola aims improve: detection treatment cases, safety hospitals risk community transmission, safety funeral practices reduce risk transmission dead bodies. , show effects interventions separately, showing combined effect.","code":""},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"improving-hospitalisation","dir":"Articles","previous_headings":"Modelling a multi-pronged ebola response","what":"Improving hospitalisation","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"first model intervention begins 15 days outbreak, reduces proportion individuals infectious community 30%, thus improving proportion hospitalised. can pass interventions model function’s intervention argument named list, names indicating model parameters target. Figure 6: Effect implementing intervention reduces proportion infectious cases community transferring hospitalisation setting.","code":"# create an intervention on the transmission rate improve_hospitalisation <- intervention(   type = \"rate\",   time_begin = 15, time_end = 100, reduction = 0.3 ) # set a seed for comparison with the baseline model set.seed(0) # note that the intervention is passed within a list, # where it is named for the rate it is targeting data_improve_hosp <- model_ebola_r(   population = guinea_population,   intervention = list(     prop_community = improve_hospitalisation   ),   time_end = 100 )  # assign scenario name data_improve_hosp$scenario <- \"improve_hosp\"  # bind the data together data_scenarios <- bind_rows(data_baseline, data_improve_hosp) filter(data_scenarios, compartment == \"removed\") %>%   ggplot() +   geom_vline(     xintercept = 15,     linetype = \"dotted\"   ) +   geom_line(     aes(time, value, colour = scenario)   ) +   scale_colour_brewer(     palette = \"Set1\",     name = \"Scenario\",     labels = c(\"Baseline\", \"Improved hospitalisation\")   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Days\",     y = \"Outbreak size\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"improve-etu-safety","dir":"Articles","previous_headings":"Modelling a multi-pronged ebola response","what":"Improve ETU safety","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"next model intervention improve safety ETUs reducing transmission risk 70%, alongside earlier improvement hospitalisation. Figure 7: Effect implementing intervention reduces risk ebola transmission hospitalisation context. Note reason intervention little effect likely effective proportion cases hospitalised high. model, large majority cases remain community, improving safety ETUs effective intervention.","code":"# create an intervention on the transmission rate improve_etu_safety <- intervention(   type = \"rate\",   time_begin = 15, time_end = 100, reduction = 0.7 ) # set a seed for comparison with the baseline model set.seed(0) # note that the intervention is passed within a list, # where it is named for the rate it is targeting data_improve_etu <- model_ebola_r(   population = guinea_population,   intervention = list(     etu_risk = improve_etu_safety   ),   time_end = 100 )  # assign scenario name data_improve_etu$scenario <- \"improve_etu\"  # bind the data together data_scenarios <- bind_rows(data_baseline, data_improve_etu) filter(data_scenarios, compartment == \"removed\") %>%   ggplot() +   geom_vline(     xintercept = 15,     linetype = \"dotted\"   ) +   geom_line(     aes(time, value, colour = scenario)   ) +   scale_colour_brewer(     palette = \"Set1\",     name = \"Scenario\",     labels = c(\"Baseline\", \"Improve ETU safety\")   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Days\",     y = \"Outbreak size\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"improve-funeral-safety","dir":"Articles","previous_headings":"Modelling a multi-pronged ebola response","what":"Improve funeral safety","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"next model intervention improve safety funeral practices, reducing transmission risk associated funerals 50%. Figure 8: Effect implementing intervention reduces risk ebola transmission funeral context.","code":"# create an intervention on the transmission rate reduce_funeral_risk <- intervention(   type = \"rate\",   time_begin = 15, time_end = 100, reduction = 0.5 ) # set a seed for comparison with the baseline model set.seed(0) # note that the intervention is passed within a list, # where it is named for the rate it is targeting data_improve_funeral <- model_ebola_r(   population = guinea_population,   intervention = list(     funeral_risk = reduce_funeral_risk   ),   time_end = 100 )  # assign scenario name data_improve_funeral$scenario <- \"improve_funeral\"  # bind the data together data_scenarios <- bind_rows(data_baseline, data_improve_funeral) filter(data_scenarios, compartment == \"removed\") %>%   ggplot() +   geom_vline(     xintercept = 15,     linetype = \"dotted\"   ) +   geom_line(     aes(time, value, colour = scenario)   ) +   scale_colour_brewer(     palette = \"Set1\",     name = \"Scenario\",     labels = c(\"Baseline\", \"Improve funeral safety\")   ) +   scale_y_sqrt() +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Days\",     y = \"Outbreak size\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"combined-interventions","dir":"Articles","previous_headings":"Modelling a multi-pronged ebola response","what":"Combined interventions","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"Figure 9: Effect implementing multiple simultaneous interventions reduce transmission ebola outbreak, beginning 15th day (dotted vertical line), remaining active remainder model duration. Applying interventions substantially reduces final size outbreak, potential plateau outbreak size reached 100 days.","code":"# set a seed for comparison with the baseline model set.seed(0) # note that the intervention is passed within a list, # where it is named for the rate it is targeting data_combined_interventions <- model_ebola_r(   population = guinea_population,   intervention = list(     transmissibility = reduce_transmission,     prop_community = improve_hospitalisation,     etu_risk = improve_etu_safety,     funeral_risk = reduce_funeral_risk   ),   time_end = 100 )  # assign scenario name data_combined_interventions$scenario <- \"combined_interventions\"  # bind the data together data_scenarios <- bind_rows(data_baseline, data_combined_interventions) filter(data_scenarios, compartment == \"removed\") %>%   ggplot() +   geom_vline(     xintercept = 15,     linetype = \"dotted\"   ) +   geom_line(     aes(time, value, colour = scenario)   ) +   scale_colour_brewer(     palette = \"Set1\",     name = \"Scenario\",     labels = c(\"Baseline\", \"Combined interventions\")   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Days\",     y = \"Outbreak size\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"details-discrete-time-ebola-virus-disease-model","dir":"Articles","previous_headings":"","what":"Details: Discrete-time Ebola virus disease model","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"model compartments adopted consensus model Ebola virus disease presented Li et al. (2019), transitions epidemiological compartments modelled using Erlang sub-compartments adapted Getz Dougherty (2018); see References. R code model adapted code Ha Minh Lam initially made available Epirecipes (https://github.com/epirecipes/epicookbook) MIT license. transition rates exposed infectious, infectious funeral compartments (also hospitalised removed), \\(\\gamma^E\\) \\(\\gamma^\\) Getz Dougherty’s notation, passed user infectiousness_rate removal_rate respectively. shape Erlang distributions passage times exposed infectious compartments (\\(k^E\\) \\(k^\\)) recommended set 2 sensible choice, default value erlang_sbubcompartments argument, can allowed vary (independently). Getz Dougherty’s equation (6) gives relationship parameters mean pre-infectious \\(\\rho^E\\) infectious \\(\\rho^\\) periods. \\[\\gamma^E = \\dfrac{k^E}{\\rho^E} = \\dfrac{2}{\\rho^E} ~\\text{}~ \\gamma^= \\dfrac{k^}{\\rho^} = \\dfrac{2}{\\rho^}\\] discrete time model, \\(\\gamma^E\\) \\(\\gamma^\\) used determine passage times newly exposed infectious individuals respective compartments (thus allowing variation passage times).","code":""},{"path":"https://epiverse.github.io/epidemics/articles/ebola_model.html","id":"hospitalisation-funerals-and-removal","dir":"Articles","previous_headings":"Details: Discrete-time Ebola virus disease model","what":"Hospitalisation, funerals, and removal","title":"Modelling responses to a stochastic Ebola virus epidemic","text":"Li et al. (2019) present consensus model EVD individuals can follow multiple pathways infectious compartment — hospitalisation, funeral transmission, safe burial recovery (removed), possibility skipping compartments sequence (e.g. directly infectious removed, infectious hospitalisation removed etc.). model simplifies transitions two pathways: Infectious → funeral → removed (safe burial) Infectious → hospitalised → removed (recovery safe burial) proportion, 1.0 - prop_community, infectious individuals transferred hospitalised compartment timestep, compartment represents Ebola Treatment Units (ETUs), individuals hospitalised compartment considered infectious longer community. passage time individuals hospitalised compartment similar individuals infectious compartment (.e., infectious community), means infectious individual \\(N\\) timesteps exiting infectious compartment exit hospitalised compartment time. Hospitalised individuals can contribute transmission Ebola susceptibles depending value \\(p_\\text{ETU}\\), probability (proportion) hospitalised cases contributing infection susceptibles. interpreted relative risk Ebola virus treatment units (ETUs), range 0.0 – 1.0, 0.0 indicates hospitalisation prevents onward transmission entirely, 1.0 indicates hospitalisation reduce transmission . passed argument etu_risk. assume deaths hospital lead Ebola-safe funerals, individuals exiting hospitalised compartment move ‘removed’ compartment, holds recoveries deaths. assume infectious individuals hospitalised die, deaths outside hospital lead funerals potentially Ebola-safe, contribution funerals Ebola transmission determined \\(p_\\text{funeral}\\), can interpreted relative risk funerals, passed funeral_risk argument. Values closer 0.0 indicate low risk Ebola transmission funerals, values closer 1.0 indicate risk similar transmission community. Individuals assumed spend single timestep funeral transmission compartment, move ‘removed’ compartment. Individuals ‘removed’ compartment affect model dynamics.","code":""},{"path":[]},{"path":"https://epiverse.github.io/epidemics/articles/epidemics.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Getting started with epidemic scenario modelling components","text":"Prepare population contact data. Prepare initial conditions age group. Prepare population population class object.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE ) #> Using POLYMOD social contact data. To cite this in a publication, use the 'get_citation()' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix)  # view contact matrix and demography contact_matrix #>                   #> contact.age.group     [,1]     [,2]     [,3] #>           [0,20)  7.883663 2.794154 1.565665 #>           [20,40) 3.120220 4.854839 2.624868 #>           40+     3.063895 4.599893 5.005571  demography_vector #>   [0,20)  [20,40)      40+  #> 14799290 16526302 28961159 # initial conditions initial_i <- 1e-6 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix)  # view initial conditions initial_conditions #>                S E     I R V #> [0,20)  0.999999 0 1e-06 0 0 #> [20,40) 0.999999 0 1e-06 0 0 #> 40+     0.999999 0 1e-06 0 0 uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )  uk_population #> <population> object #>  #>  Population name:  #> \"UK\" #>  #>  Demography  #> [0,20): 14,799,290 (20%) #> [20,40): 16,526,302 (30%) #> 40+: 28,961,159 (50%) #>  #>  Contact matrix  #>                   #> contact.age.group   [0,20)  [20,40)      40+ #>           [0,20)  7.883663 2.794154 1.565665 #>           [20,40) 3.120220 4.854839 2.624868 #>           40+     3.063895 4.599893 5.005571"},{"path":"https://epiverse.github.io/epidemics/articles/epidemics.html","id":"run-epidemic-model","dir":"Articles","previous_headings":"","what":"Run epidemic model","title":"Getting started with epidemic scenario modelling components","text":"","code":"# run an epidemic model using `epidemic` output <- model_default_cpp(   population = uk_population,   time_end = 600, increment = 1.0 )"},{"path":"https://epiverse.github.io/epidemics/articles/epidemics.html","id":"prepare-data-and-visualise-infections","dir":"Articles","previous_headings":"","what":"Prepare data and visualise infections","title":"Getting started with epidemic scenario modelling components","text":"Plot epidemic time, showing number individuals exposed infected compartments.","code":"# plot figure of epidemic curve filter(output, compartment %in% c(\"exposed\", \"infectious\")) %>%   ggplot(     aes(       x = time,       y = value,       col = demography_group,       linetype = compartment     )   ) +   geom_line() +   scale_y_continuous(     labels = scales::comma   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   expand_limits(     y = c(0, 500e3)   ) +   coord_cartesian(     expand = FALSE   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/finalsize_comparison.html","id":"different-use-cases-of-finalsize-and-epidemics","dir":"Articles","previous_headings":"","what":"Different use cases of finalsize and epidemics","title":"Reducing parameters required for final size estimation","text":"finalsize epidemics can used calculate epidemic final size, aimed different use cases. finalsize assumes infection population characteristics fixed initial conditions. infection, includes properties transmission rate, population, includes social contacts demographic groups, proportion demographic groups specific levels susceptibility infection. advantage finalsize requires define initial transmissibility infection susceptibility population, rather time-dependent processes drive epidemic shape, duration infectiousness latent period infection. questions relating epidemic shape, rather shape, results much simpler set inputs. However, also means finalsize used model temporal dynamics epidemic response, used answer policy questions temporal component, implement interventions. epidemics includes number scenario models, assumptions. models allow modification initial characteristics outbreak due range events. infection, includes interventions (masking treatments) reduce number forward transmissions deaths, also seasonal effects may increase decrease transmission rate. population, initial conditions social contacts can influenced interventions well. makes much easier model temporal dynamics public-health policy decisions taken epidemic response epidemics many features allow modelling. However, requires inputs defined, including time-dependent infections processes. can also difficult model scenarios complicated susceptibility structure required, demographic groups underlying immunity infection due past exposure vaccination. Thus epidemics likely especially useful outbreaks novel pathogens (Covid-19 pandemic) little population immunity infection. easier configure finalsize ---box scenarios complex demographic patterns underlying susceptibility (immunity ) infection, potentially due history previous outbreaks policy responses (vaccination). Thus, model temporal dynamics, can quickly provide useful initial estimates final size outbreaks, without write compartmental models implement multiple policy decisions.","code":""},{"path":"https://epiverse.github.io/epidemics/articles/finalsize_comparison.html","id":"converting-scenarios-between-finalsize-and-epidemics","dir":"Articles","previous_headings":"","what":"Converting scenarios between finalsize and epidemics","title":"Reducing parameters required for final size estimation","text":", show example show model similar scenario using finalsize epidemics. example, might want study full epidemic dynamics future, start simpler final size estimate meantime. show build equivalent models, allowing extensions model epidemic temporal dynamics (using epidemics) later. illustration, use epidemics model effect vaccination trajectory epidemic. finalsize allow implementation dynamic vaccination calendar, can model reduced susceptibility infection population, due prior vaccination. two methods comparable model vaccination epidemics occurring main wave epidemic, sets underlying susceptibility.","code":""},{"path":"https://epiverse.github.io/epidemics/articles/finalsize_comparison.html","id":"prepare-population-and-model-parameters","dir":"Articles","previous_headings":"Converting scenarios between finalsize and epidemics","what":"Prepare population and model parameters","title":"Reducing parameters required for final size estimation","text":"first prepare population (modelled U.K.), initial conditions, model parameters, passing epidemics::model_default_cpp(). example include interventions vaccination regimes. Code prepare model inputs folded brevity. See “Get started” vignette explanation prepare inputs. model spread influenza pandemic potential, assuming $R_0 = $ 1.5, pre-infectious period 3 days, infectious period 7 days. leads following model parameters transmissibility \\(\\beta\\), rate transition exposed infectious \\(\\sigma\\), recovery rate \\(\\gamma\\).","code":"# load contact and population data from socialmixr::polymod polymod <- polymod contact_data <- contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE )  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix)  # initial conditions: one in every 1 million is infected initial_i <- 1e-6 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions ) rownames(initial_conditions) <- rownames(contact_matrix) # prepare the population to model as affected by the epidemic # the contact_matrix, demography_vector, and initial_conditions # have been prepared in the folded code above uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )  # view the population uk_population #>  #>  Population name:  #>  Demography  #> [0,20): 14,799,290 (20%) #> [20,40): 16,526,302 (30%) #> 40+: 28,961,159 (50%) #>  #>  Contact matrix  #>                   #> contact.age.group   [0,20)  [20,40)      40+ #>           [0,20)  7.883663 2.794154 1.565665 #>           [20,40) 3.120220 4.854839 2.624868 #>           40+     3.063895 4.599893 5.005571 # simulate pandemic parameters transmissibility <- 1.5 / 7 infectiousness_rate <- 1 / 3 recovery_rate <- 1 / 7"},{"path":"https://epiverse.github.io/epidemics/articles/finalsize_comparison.html","id":"implementing-vaccination-in-epidemics","dir":"Articles","previous_headings":"Converting scenarios between finalsize and epidemics","what":"Implementing vaccination in epidemics","title":"Reducing parameters required for final size estimation","text":"simplicity, implement vaccination regime vaccines delivered individuals age 40 course roughly six months (150 days) main epidemic peak. assume 1 every 1000 individuals age group vaccinated every day; translates approximately 28,900 individuals per day. assume vaccination non-leaky, protecting vaccinated individuals infection, due model structure ‘default’ SEIR-V model epidemics use . New modelling vaccination using epidemics? may help read “Modelling vaccination campaign” vignette first. first create <vaccination> object represent vaccination regime. pass vaccination regime epidemic function optional vaccination argument, model 600 days epidemic. obtain ‘final’ epidemic size using epidemics::epidemic_size().","code":"# prepare a vaccination object vaccinate_elders <- vaccination(   name = \"vaccinate elders\",   time_begin = matrix(1, nrow(contact_matrix)),   time_end = matrix(150, nrow(contact_matrix)),   nu = matrix(c(0.0, 0.0, 0.001)) ) # model epidemic with vaccination prior to the main epidemic wave output <- model_default_cpp(   population = uk_population,   transmissibility = transmissibility,   infectiousness_rate = infectiousness_rate,   recovery_rate = recovery_rate,   vaccination = vaccinate_elders,   time_end = 600, increment = 1.0 )  # Calculate the epidemic size using the helper function finalsize_dat <- tibble(   demography_group = names(demography_vector),   value = epidemic_size(output) / demography_vector )  # View the data finalsize_dat #> # A tibble: 3 × 2 #>   demography_group value #>   <chr>            <dbl> #> 1 [0,20)           0.620 #> 2 [20,40)          0.528 #> 3 40+              0.351"},{"path":"https://epiverse.github.io/epidemics/articles/finalsize_comparison.html","id":"calculating-individuals-vaccinated-in-epidemic-model","dir":"Articles","previous_headings":"Converting scenarios between finalsize and epidemics","what":"Calculating individuals vaccinated in epidemic model","title":"Reducing parameters required for final size estimation","text":"compare results ODE model analytical method, necessary set population’s susceptibility demography--susceptibility matrices reflect proportion individuals age group vaccinated outbreak. , need calculate total proportion individuals age group vaccinated end epidemic model run.","code":"# Proportion of the individuals vaccinated p_vacc <- filter(output, compartment == \"vaccinated\", time == max(time)) p_vacc <- p_vacc$value / demography_vector"},{"path":"https://epiverse.github.io/epidemics/articles/finalsize_comparison.html","id":"implementing-vaccination-in-finalsize","dir":"Articles","previous_headings":"Converting scenarios between finalsize and epidemics","what":"Implementing vaccination in finalsize","title":"Reducing parameters required for final size estimation","text":"use proportion individuals vaccinated age group set matrices pass susceptibility p_susceptibility arguments finalsize::final_size(). New final size estimation heterogeneity susceptibility infection? may help read “Modelling heterogeneous susceptibility” vignette, “Guide constructing susceptibility matrices” finalsize first. create susceptibility matrix two groups, ‘unvaccinated’, full susceptibility, ‘vaccinated’, immune infection. create demography--susceptibility matrix reflect individuals >40 age group vaccinated. Since vaccination implemented age groups, assume individuals groups fully susceptible. calculate expected final size using modified susceptibility matrices, combine data output ODE model previous example. need scale contact matrix appropriately. can print data compare values, similar. However, note epidemics::epidemic_size() can used time point epidemic, finalsize::final_size() returns size end epidemic, showing epidemics suitable examine temporal dynamics.","code":"# create the susceptibility matrix susceptibility <- matrix(   data = 1,   nrow = length(demography_vector),   ncol = 2,   dimnames = list(     names(demography_vector),     c(\"unvaccinated\", \"vaccinated\")   ) ) # Second column holds the vaccinated (who are protected fully) susceptibility[, \"vaccinated\"] <- 0  # Assume susceptibility varies within age groups p_susceptibility <- matrix(   data = 1.0,   nrow = length(demography_vector),   ncol = 2,   dimnames = list(     names(demography_vector),     c(\"unvaccinated\", \"vaccinated\")   ) ) p_susceptibility[, \"vaccinated\"] <- p_vacc p_susceptibility[, \"unvaccinated\"] <- 1 - p_vacc # Define population in each age group scalar <- max(eigen(contact_data$matrix)$values) contact_matrix <- (contact_data$matrix / demography_vector) / scalar # Calculate the proportion of individuals infected in each age group dat1 <- final_size(   r0 = 1.5,   contact_matrix = contact_matrix,   demography_vector = demography_vector,   susceptibility = susceptibility,   p_susceptibility = p_susceptibility )  # Final size returns the proportion infected in each susceptibility group # (i.e. non vaccinated and vaccinated) # here we calculate the proportion of infected for the age group as a whole dat3 <- dat1 %>%   select(     -susceptibility,     final_size = p_infected   ) %>%   filter(susc_grp == \"unvaccinated\") %>%   select(-susc_grp)  fs <- dat3$unvaccinated * p_susceptibility[, \"unvaccinated\"]  finalsize_dat <- finalsize_dat %>%   select(demo_grp = demography_group, seir_v = value) %>%   left_join(dat3) finalsize_dat #> # A tibble: 3 × 3 #>   demo_grp seir_v final_size #>   <chr>     <dbl>      <dbl> #> 1 [0,20)    0.620      0.663 #> 2 [20,40)   0.528      0.547 #> 3 40+       0.351      0.276 # note that epidemic_size() returns the absolute values # epidemic size after 10% of the epidemic model run epidemic_size(data = output, stage = 0.1) #>   [0,20)  [20,40)      40+  #> 574.5512 488.4952 586.1743  # epidemic size at 50% epidemic_size(data = output, stage = 0.5) #>  [0,20) [20,40)     40+  #> 5681215 5013060 5474970"},{"path":"https://epiverse.github.io/epidemics/articles/finalsize_comparison.html","id":"consideration-of-computational-speed","dir":"Articles","previous_headings":"","what":"Consideration of computational speed","title":"Reducing parameters required for final size estimation","text":"important reason use finalsize final size calculations may speed — finalsize::final_size() much faster epidemics::epidemic_size() applied epidemics::model_default_cpp(). makes much suitable high-performance applications fitting data. benchmarking shows total time taken 1,000 runs using methods low, methods used scan across multiple values input parameters, dealing parameter uncertainty. Note model runs using epidemics implement complex compartmental structure, multiple interventions vaccination regimes likely slower example shown . However, users choose finalsize assumptions underlying final size calculation met. example, cases vaccinations concurrent large number infections, interventions applied reduce transmission, final size assumptions met. cases, users advised use dynamical model epidemics instead.","code":"# run benchmarks using {bench} benchmark <- mark(   analytical_method = final_size(     r0 = 1.5,     contact_matrix = contact_matrix,     demography_vector = demography_vector,     susceptibility = susceptibility,     p_susceptibility = p_susceptibility   ),   ode_model = epidemic_size(     model_default_cpp(       population = uk_population,       transmissibility = transmissibility,       infectiousness_rate = infectiousness_rate,       recovery_rate = recovery_rate,       vaccination = vaccinate_elders,       time_end = 600, increment = 1.0     )   ),   iterations = 1000,   time_unit = \"s\",   check = FALSE )  # view the total time for 1000 runs in seconds select(as_tibble(benchmark), expression, total_time) #> # A tibble: 2 × 2 #>   expression        total_time #>   <bch:expr>             <dbl> #> 1 analytical_method      0.466 #> 2 ode_model              8.18"},{"path":[]},{"path":"https://epiverse.github.io/epidemics/articles/modelling_interventions.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Getting started with modelling interventions targeting social contacts","text":"Prepare population contact data. Prepare initial conditions age group. Prepare population population class object.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE ) #> Using POLYMOD social contact data. To cite this in a publication, use the 'get_citation()' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix) # initial conditions initial_i <- 1e-6 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix) uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )"},{"path":"https://epiverse.github.io/epidemics/articles/modelling_interventions.html","id":"prepare-an-intervention","dir":"Articles","previous_headings":"","what":"Prepare an intervention","title":"Getting started with modelling interventions targeting social contacts","text":"Prepare intervention simulate school closures.","code":"# prepare an intervention with a differential effect on age groups close_schools <- intervention(   name = \"School closure\",   type = \"contacts\",   time_begin = 200,   time_end = 300,   reduction = matrix(c(0.5, 0.001, 0.001)) )  # examine the intervention object close_schools #> <contacts_intervention> object #>  #>  Intervention name:  #> \"School closure\" #>  #>  Begins at:  #> [1] 200 #>  #>  Ends at:  #> [1] 300 #>  #>  Reduction:  #>              Interv. 1 #> Demo. grp. 1     0.500 #> Demo. grp. 2     0.001 #> Demo. grp. 3     0.001"},{"path":"https://epiverse.github.io/epidemics/articles/modelling_interventions.html","id":"run-epidemic-model","dir":"Articles","previous_headings":"","what":"Run epidemic model","title":"Getting started with modelling interventions targeting social contacts","text":"","code":"# run an epidemic model using `epidemic` output <- model_default_cpp(   population = uk_population,   intervention = list(contacts = close_schools),   time_end = 600, increment = 1.0 )"},{"path":"https://epiverse.github.io/epidemics/articles/modelling_interventions.html","id":"prepare-data-and-visualise-infections","dir":"Articles","previous_headings":"","what":"Prepare data and visualise infections","title":"Getting started with modelling interventions targeting social contacts","text":"Plot epidemic time, showing number individuals exposed infected compartments.","code":"# plot figure of epidemic curve filter(output, compartment %in% c(\"exposed\", \"infectious\")) %>%   ggplot(     aes(       x = time,       y = value,       col = demography_group,       linetype = compartment     )   ) +   geom_line() +   annotate(     geom = \"rect\",     xmin = close_schools$time_begin,     xmax = close_schools$time_end,     ymin = 0, ymax = 500e3,     fill = alpha(\"red\", alpha = 0.2),     lty = \"dashed\"   ) +   annotate(     geom = \"text\",     x = mean(c(close_schools$time_begin, close_schools$time_end)),     y = 400e3,     angle = 90,     label = \"School closure\"   ) +   scale_y_continuous(     labels = scales::comma   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   expand_limits(     y = c(0, 500e3)   ) +   coord_cartesian(     expand = FALSE   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/modelling_vaccination.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Modelling the effect of a vaccination campaign","text":"Prepare population contact data. Prepare initial conditions age group. Prepare population population class object.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 65),   symmetric = TRUE ) #> Using POLYMOD social contact data. To cite this in a publication, use the 'get_citation()' function #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix) # initial conditions initial_i <- 1e-6 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix) uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )"},{"path":"https://epiverse.github.io/epidemics/articles/modelling_vaccination.html","id":"prepare-a-vaccination-campaign","dir":"Articles","previous_headings":"","what":"Prepare a vaccination campaign","title":"Modelling the effect of a vaccination campaign","text":"Prepare vaccination campaign targeting individuals aged 65.","code":"# prepare a vaccination object vaccinate_elders <- vaccination(   name = \"vaccinate elders\",   time_begin = matrix(100, nrow(contact_matrix)),   time_end = matrix(250, nrow(contact_matrix)),   nu = matrix(c(0.0001, 0, 0)) )  # view vaccination object vaccinate_elders #> <vaccination> object #>  #>  Vaccination name:  #> \"vaccinate elders\" #>  #>  Begins at:  #>      dose_1 #> [1,]    100 #> [2,]    100 #> [3,]    100 #>  #>  Ends at:  #>      dose_1 #> [1,]    250 #> [2,]    250 #> [3,]    250 #>  #>  Vaccination rate:  #>      dose_1 #> [1,]  1e-04 #> [2,]  0e+00 #> [3,]  0e+00"},{"path":"https://epiverse.github.io/epidemics/articles/modelling_vaccination.html","id":"run-epidemic-model","dir":"Articles","previous_headings":"","what":"Run epidemic model","title":"Modelling the effect of a vaccination campaign","text":"","code":"# run an epidemic model using `epidemic` output <- model_default_cpp(   population = uk_population,   vaccination = vaccinate_elders,   time_end = 600, increment = 1.0 )"},{"path":"https://epiverse.github.io/epidemics/articles/modelling_vaccination.html","id":"prepare-data-and-visualise-infections","dir":"Articles","previous_headings":"","what":"Prepare data and visualise infections","title":"Modelling the effect of a vaccination campaign","text":"Plot epidemic time, showing number individuals exposed, infected, vaccinated compartments.","code":"# plot figure of epidemic curve filter(output, compartment %in% c(\"exposed\", \"infectious\")) %>%   ggplot(     aes(       x = time,       y = value,       col = demography_group,       linetype = compartment     )   ) +   geom_line() +   scale_y_continuous(     labels = scales::comma   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   expand_limits(     y = c(0, 500e3)   ) +   coord_cartesian(     expand = FALSE   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/multiple_interventions.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Modelling overlapping and sequential interventions targeting social contacts","text":"prepare population contact data U.K., epidemiological compartments matching default epidemic model (SEIR-V). assume one every million people infected infectious, translating 67 total infections U.K. population 67 million. code steps similar “Getting started vignette” hidden , although can expanded reference.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 65),   symmetric = TRUE )  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix) # initial conditions initial_i <- 1e-4 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix) uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )"},{"path":"https://epiverse.github.io/epidemics/articles/multiple_interventions.html","id":"examine-the-baseline","dir":"Articles","previous_headings":"","what":"Examine the baseline","title":"Modelling overlapping and sequential interventions targeting social contacts","text":"first examine baseline scenario — interventions implemented slow spread epidemic — visualise outcomes terms daily new infections. simulate epidemic using model_default_cpp(), calling default model outlined “Get started vignette”. show one instance plotting code using ggplot2 package , instances hidden keep vignette short. Figure 1: model infectious disease epidemic, assuming directly transmitted infection influenza, \\(R_0\\) 1.3, infectious period 5 days, pre-infectious period 1.5 days. baseline scenario, epidemic continue approximately 400 days, one year, peak new infections 150th 180th day different age groups. scenario, epidemic expected final size around 23 million individuals infected overall. following sections shall iteratively model effects applying non-pharmaceutical interventions reduce contacts examine whether epidemic’s final size reduced, whether peak infections can spread time.","code":"# no intervention baseline scenario data_baseline <- model_default_cpp(   population = uk_population,   time_end = 400, increment = 1.0 )  # get new infections data_baseline_infections <- new_infections(data_baseline, by_group = TRUE) # visualise the spread of the epidemic in terms of new infections # plot figure of epidemic curve plot_baseline <- ggplot() +   geom_line(     data = data_baseline_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"dashed\"   ) +   scale_y_sqrt(     labels = scales::comma,     breaks = c(10^seq(3, 5), 5e4)   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )  plot_baseline"},{"path":"https://epiverse.github.io/epidemics/articles/multiple_interventions.html","id":"modelling-overlapping-interventions","dir":"Articles","previous_headings":"","what":"Modelling overlapping interventions","title":"Modelling overlapping and sequential interventions targeting social contacts","text":"shall prepare multiple interventions plausibly implemented course epidemic. can use c() function combine two intervention objects single intervention accommodates effect interventions. multiple intervention can passed — single intervention object — epidemic model model_default_cpp(). can combine number intervention objects single intervention object passed model_default_cpp(). cumulative effect interventions handled automatically C++ code underlying epidemics. Remember two multiple interventions can also combined using c(). important careful make sure interventions intend combine concatenated together. example, c(combined_interventions, combined_interventions) valid, effectively double effect school workplace closures example. simulate epidemic using model_default_cpp() function, calling default model outlined “Get started vignette”. simulate epidemic 600 days. Figure 3: Epidemic model two overlapping interventions early phase outbreak: school closures target infections among younger people, workplace closures target infections among working-age adults. scenario school closures 6 months well workplace closures 2 months, epidemic still continue approximately 600 days, one half years, number days 10,000 daily cases reduced, typically occur intervention workplaces lifted. scenario, epidemic expected final size around 22 million individuals infected overall — similar school closures intervention. distinct peak new infections schools simulated re-open, nearly 100,000 new infections days.","code":"# combine interventions using `c()` combined_interventions <- c(   close_schools, close_workplaces )  # visualise the combined intervention object combined_interventions #>  #>  Intervention name:  #>  Begins at:  #>      npi_1 npi_2 #> [1,]    60    80 #>  #>  Ends at:  #>      npi_1 npi_2 #> [1,]   240   140 #>  #>  Reduction:  #>              Interv. 1 Interv. 2 #> Demo. grp. 1      0.30      0.01 #> Demo. grp. 2      0.01      0.30 #> Demo. grp. 3      0.01      0.01 # get data from an epidemic model with both interventions data_combined <- model_default_cpp(   population = uk_population,   intervention = list(contacts = combined_interventions),   time_end = 600, increment = 1.0 )  # get data on new infections data_infections <- new_infections(data_combined, by_group = TRUE) plot_intervention_cases <-   ggplot() +   geom_vline(     xintercept = c(       close_schools$time_begin,       close_schools$time_end     ),     linetype = \"dotted\"   ) +   geom_vline(     xintercept = c(       close_workplaces$time_begin,       close_workplaces$time_end     ),     colour = \"red\",     linetype = \"dotted\"   ) +   annotate(     geom = \"text\",     x = mean(c(close_schools$time_begin, close_schools$time_end)),     y = 50000,     label = \"Schools closed\"   ) +   annotate(     geom = \"text\",     x = mean(c(       close_workplaces$time_begin,       close_workplaces$time_end     )),     y = 30000,     colour = \"red\",     label = \"Workplaces\\nclosed\"   ) +   geom_line(     data = data_baseline_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"dashed\"   ) +   geom_line(     data = data_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"solid\"   ) +   scale_y_sqrt(     labels = scales::comma,     breaks = c(10^seq(3, 5), 5e4)   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )  plot_intervention_cases"},{"path":"https://epiverse.github.io/epidemics/articles/multiple_interventions.html","id":"school-closures","dir":"Articles","previous_headings":"Modelling overlapping interventions","what":"School closures","title":"Modelling overlapping and sequential interventions targeting social contacts","text":"first example, shall model school closures, primarily aimed reducing infections among younger individuals transmit families. first prepare intervention simulates effect closing schools reduce contacts younger people. assume reduces contacts age group 0 – 19 30%, contacts age groups 1% (adults meet individuals age). intervention assumed last 6 months approximately 180 days, beginning 100th day outbreak — similar duration initial school closures Covid-19 pandemic 2020 U.K. simulate epidemic 600 days expect intervention spread disease incidence longer period. Figure 2: Epidemic model intervention targets infections among children closing schools six months, thus reducing children’s social contacts. school closures scenario, epidemic continue approximately 600 days, one half years, 10,000 daily new infections one year. scenario, epidemic expected final size around 22 million individuals infected overall.","code":"# prepare an intervention that models school closures for ~3 months (100 days) close_schools <- intervention(   name = \"School closure\",   type = \"contacts\",   time_begin = 60,   time_end = 60 + 180,   reduction = matrix(c(0.3, 0.01, 0.01)) )  # examine the intervention object close_schools #>  #>  Intervention name:  #>  Begins at:  #> [1] 60 #>  #>  Ends at:  #> [1] 240 #>  #>  Reduction:  #>              Interv. 1 #> Demo. grp. 1      0.30 #> Demo. grp. 2      0.01 #> Demo. grp. 3      0.01 # no intervention baseline scenario data_schools_closed <- model_default_cpp(   population = uk_population,   intervention = list(contacts = close_schools),   time_end = 600, increment = 1.0 )  # get new infections data_noschool_infections <- new_infections(data_schools_closed, by_group = TRUE) # visualise the spread of the epidemic in terms of new infections when # schools are closed plot_noschool <-   ggplot() +   geom_vline(     xintercept = c(       close_schools$time_begin,       close_schools$time_end     ),     linetype = \"dotted\"   ) +   annotate(     geom = \"text\",     x = mean(c(close_schools$time_begin, close_schools$time_end)),     y = 1000,     label = \"Schools closed\"   ) +   geom_line(     data = data_baseline_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"dashed\"   ) +   geom_line(     data = data_noschool_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"solid\"   ) +   scale_y_sqrt(     labels = scales::comma,     breaks = c(10^seq(3, 5), 5e4)   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )  plot_noschool"},{"path":"https://epiverse.github.io/epidemics/articles/multiple_interventions.html","id":"workplace-closures","dir":"Articles","previous_headings":"Modelling overlapping interventions","what":"Workplace closures","title":"Modelling overlapping and sequential interventions targeting social contacts","text":"General workplace closures broad-based measure aimed reducing infections among working age adults. shall prepare intervention simulates effect closing workplaces addition closing schools, assume reduces contacts age group 20 – 65 30%, contacts age groups 1% (assume individuals age groups meeting many individuals workplaces). intervention assumed last 60 days, beginning 80th day outbreak — simulates situation policymakers decide close workplaces three weeks deciding close schools, choose keep workplaces closed long (2 months 60 days vs. 6 months 180 days school closures).","code":"# prepare an intervention which mostly affects adults 20 -- 65 intervention_duration <- 60 close_workplaces <- intervention(   name = \"Workplace closure\",   type = \"contacts\",   time_begin = 80,   time_end = 80 + intervention_duration,   reduction = matrix(c(0.01, 0.3, 0.01)) )  # examine the intervention object close_workplaces #>  #>  Intervention name:  #>  Begins at:  #> [1] 80 #>  #>  Ends at:  #> [1] 140 #>  #>  Reduction:  #>              Interv. 1 #> Demo. grp. 1      0.01 #> Demo. grp. 2      0.30 #> Demo. grp. 3      0.01"},{"path":"https://epiverse.github.io/epidemics/articles/multiple_interventions.html","id":"combining-interventions","dir":"Articles","previous_headings":"Modelling overlapping interventions","what":"Combining interventions","title":"Modelling overlapping and sequential interventions targeting social contacts","text":"can use c() function combine two intervention objects single intervention accommodates effect interventions. multiple intervention can passed — single intervention object — epidemic model model_default_cpp(). intervention object made multiple interventions first intervention specified treated baseline intervention, age-specific effect reducing contacts duration effect. interventions assumed additional percentage point increases effect active interventions.","code":""},{"path":"https://epiverse.github.io/epidemics/articles/multiple_interventions.html","id":"re-applying-workplace-closures","dir":"Articles","previous_headings":"Modelling overlapping interventions","what":"Re-applying workplace closures","title":"Modelling overlapping and sequential interventions targeting social contacts","text":"scenario combined interventions, daily new infections forecast exceed 50,000 397th day epidemic. final example, simulate re-implementing two months workplace closures, school closures, reduce infections. Combine multiple interventions object two interventions third intervention. simulate epidemic using model_default_cpp() function 600 days . Figure 4: Epidemic model two initial, overlapping interventions schools workplaces, followed later intervention workplaces. scenario school closures 6 months well two phases workplace closures 2 months , epidemic continue 600 days, one half years, number days 10,000 daily cases reduced, typically occur interventions workplaces lifted — similar previous example. scenario, epidemic expected final size around 15 million individuals infected overall — lower previous examples.","code":"# log the date that cases exceed 50000 daily start_date <- min(   which(     new_infections(data_combined, by_group = FALSE)[, new_infections > 50000]   ) )  # create a new workplace closures object workplace_closures_2 <- intervention(   type = \"contacts\",   time_begin = start_date,   time_end = start_date + 60,   reduction = matrix(c(0.01, 0.3, 0.01)) ) combined_interventions <- c(combined_interventions, workplace_closures_2) # get data from an epidemic model with both interventions data_combined <- model_default_cpp(   population = uk_population,   intervention = list(contacts = combined_interventions),   time_end = 600, increment = 1.0 )  # get data on new infections data_infections <- new_infections(data_combined, by_group = TRUE) plot_three_interventions <-   ggplot() +   geom_vline(     xintercept = c(       close_schools$time_begin,       close_schools$time_end     ),     linetype = \"dotted\"   ) +   geom_vline(     xintercept = c(       close_workplaces$time_begin,       close_workplaces$time_end,       workplace_closures_2$time_begin,       workplace_closures_2$time_end     ),     colour = \"red\",     linetype = \"dotted\"   ) +   annotate(     geom = \"text\",     x = mean(c(close_schools$time_begin, close_schools$time_end)),     y = 50000,     label = \"Schools closed\"   ) +   annotate(     geom = \"text\",     x = c(       mean(         c(close_workplaces$time_begin, close_workplaces$time_end)       ),       mean(c(workplace_closures_2$time_begin, workplace_closures_2$time_end))     ),     y = 30000,     colour = \"red\",     label = c(\"Workplaces\\nclosed\", \"Workplaces\\nclosed\")   ) +   geom_line(     data = data_baseline_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"dashed\"   ) +   geom_line(     data = data_infections,     aes(time, new_infections, colour = demography_group),     linetype = \"solid\"   ) +   scale_y_sqrt(     labels = scales::comma,     breaks = c(10^seq(3, 5), 5e4)   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   coord_cartesian(     expand = FALSE   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"Individuals\"   )  plot_three_interventions"},{"path":"https://epiverse.github.io/epidemics/articles/parameter_uncertainty.html","id":"prepare-r-estimates","dir":"Articles","previous_headings":"","what":"Prepare \\(R\\) estimates","title":"Generating and modelling parameter uncertainty","text":"example, consider influenza pandemic potential (Ghani et al. 2010), prepare multiple samples estimated \\(R\\). obtain probability distribution function (PDF) distribution serial intervals; Gamma distribution shape \\(k\\) = 2.622 scale \\(\\theta\\) = 0.957 (Ghani et al. 2010). forthcoming Epiverse package epiparameter expected make substantially easier access use epidemiological parameters, serial interval, reported literature, making easier model scenarios differing intrinsic characteristics pathogen causing outbreak. use PDF estimate \\(R\\) 2009 influenza pandemic U.K., using EpiEstim package. use \\(R\\) estimate (mean standard deviation) EpiEstim generate 100 samples \\(R\\), assuming normally distributed.  Generate 100 samples \\(R\\).","code":"# Get 2009 influenza data for school in Pennsylvania data(Flu2009) flu_early_data <- filter(Flu2009$incidence, dates < \"2009-05-10\")  # get the PDF of the distribution of serial intervals serial_pdf <- dgamma(seq(0, 25), shape = 2.622, scale = 0.957) serial_pdf <- serial_pdf / sum(serial_pdf) # check sum to 1  # Use EpiEstim to estimate R with uncertainty # Uses Gamma distribution by default output_R <- estimate_R(   incid = flu_early_data,   method = \"non_parametric_si\",   config = make_config(list(si_distr = serial_pdf)) )  # Plot output to visualise plot(output_R, \"R\") # Generate 100 R samples set.seed(1) r_samples <- rnorm(   n = 100, mean = output_R$R$`Mean(R)`, sd = output_R$R$`Std(R)` )"},{"path":"https://epiverse.github.io/epidemics/articles/parameter_uncertainty.html","id":"prepare-epidemic-model-inputs","dir":"Articles","previous_headings":"","what":"Prepare epidemic model inputs","title":"Generating and modelling parameter uncertainty","text":"define inputs default, SEIR-V model epidemics form <population> object. omit non-pharmaceutical interventions vaccinations example. Since step identical previous vignettes, code folded, can expanded clarity.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE )  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix)  # initial conditions: one in every 1 million is infected initial_i <- 1e-6 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions ) rownames(initial_conditions) <- rownames(contact_matrix)  # prepare the population to model as affected by the epidemic uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )  # an intervention to close schools close_schools <- intervention(   type = \"contacts\",   time_begin = 200,   time_end = 260,   reduction = matrix(c(0.5, 0.01, 0.01)) )"},{"path":"https://epiverse.github.io/epidemics/articles/parameter_uncertainty.html","id":"run-with-r-uncertainty","dir":"Articles","previous_headings":"","what":"Run with \\(R\\) uncertainty","title":"Generating and modelling parameter uncertainty","text":"Loop sampled \\(R\\) values generate epidemic model outputs uncertainty. view output scenario runs. obtain epidemic runs plot number new infections scenario; plotting code folded brevity. Figure 1: Modelling scenarios spread influenza pandemic potential U.K., uncertainty reproduction number \\(R\\). scenario represents one 1,000 runs different values \\(R\\) estimated case data 2009 influenza pandemic U.K. Scenarios coloured \\(R\\), divided four bins visual clarity. Values \\(R <\\) 1.0 lead large epidemics. duration non-pharmaceutical intervention close schools two months (affecting social contacts individuals age 20) also shown. example, high \\(R\\) scenarios (green), school closures little effect, epidemic peaked intervention can take effect; demonstrates uncertainty epidemic characterists may influence effectiveness response measures. forthcoming Epiverse package scenarios expected include functionality wraps iteration step shown vignette, make easier model parameter uncertainty.","code":"# define the infectious period infectious_period <- 7  # iterate over the R samples, running the epidemic model for each value of R output_samples <- Map(   r_samples,   seq_along(r_samples),   f = function(x, i) {     # run an epidemic model using `epidemic()`     output <- model_default_cpp(       population = uk_population,       transmissibility = x / infectious_period,       recovery_rate = 1 / infectious_period,       intervention = list(contacts = close_schools),       time_end = 600, increment = 1.0     )      # calculate new infections     output <- new_infections(output)      # assign scenario number     output[, c(\"scenario\", \"R\") := list(i, x)]      output   } ) # View the firt few rows of the first two runs lapply(output_samples[1:2], head) #> [[1]] #> Key: <time, demography_group> #>     time demography_group new_infections scenario       R #>    <num>           <char>          <num>    <int>   <num> #> 1:     0              40+       0.000000        1 1.47341 #> 2:     0           [0,20)       0.000000        1 1.47341 #> 3:     0          [20,40)       0.000000        1 1.47341 #> 4:     1              40+       4.488961        1 1.47341 #> 5:     1           [0,20)       3.516643        1 1.47341 #> 6:     1          [20,40)       3.414592        1 1.47341 #>  #> [[2]] #> Key: <time, demography_group> #>     time demography_group new_infections scenario        R #>    <num>           <char>          <num>    <int>    <num> #> 1:     0              40+       0.000000        2 1.812195 #> 2:     0           [0,20)       0.000000        2 1.812195 #> 3:     0          [20,40)       0.000000        2 1.812195 #> 4:     1              40+       5.538607        2 1.812195 #> 5:     1           [0,20)       4.341045        2 1.812195 #> 6:     1          [20,40)       4.213767        2 1.812195  # combine to prepare for plotting output_samples <- bind_rows(output_samples) ggplot(output_samples) +   geom_vline(     xintercept = c(200, 260),     colour = alpha(\"black\", 0.5),     linetype = \"dashed\"   ) +   annotate(     geom = \"text\",     x = 230, y = 600e3,     label = \"Schools closed\",     colour = alpha(\"black\", 0.5),     angle = 90,     hjust = \"inward\"   ) +   geom_line(     aes(       time, new_infections,       group = scenario,       colour = R     ),     alpha = 0.3   ) +   scale_colour_fermenter(     palette = \"Dark2\",     breaks = c(0, 1, 1.5, 2.0, 3.0),     limits = c(0, 3)   ) +   scale_y_continuous(     name = \"New infections\",     labels = scales::label_comma(scale = 1e-3, suffix = \"K\")   ) +   labs(     x = \"Time (days since start of epidemic)\"   ) +   facet_grid(     cols = vars(demography_group)   ) +   theme_bw() +   theme(     legend.position = \"top\",     legend.key.height = unit(2, \"mm\")   )"},{"path":[]},{"path":"https://epiverse.github.io/epidemics/articles/rate_interventions.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Modelling other interventions that change transmission rates","text":"prepare population contact data U.K., epidemiological compartments matching default epidemic model (SEIR-V). assume one every million people infected infectious, translating 67 total infections U.K. population 67 million. code steps similar “Getting started vignette” hidden , although can expanded reference.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 65),   symmetric = TRUE )  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix) # initial conditions initial_i <- 1e-4 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix) uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )"},{"path":"https://epiverse.github.io/epidemics/articles/rate_interventions.html","id":"modelling-an-intervention-on-transmissibility","dir":"Articles","previous_headings":"","what":"Modelling an intervention on transmissibility","title":"Modelling other interventions that change transmission rates","text":"model intervention transmissibility \\(\\beta\\) reduces 10%. represent interventions requiring people wear masks reduce transmission. first run baseline scenario — interventions implemented slow spread epidemic — visualise outcomes terms daily new infections. simulate epidemic using model_default_cpp(), calling default model outlined “Get started vignette”. examine effect mask mandate, simulate epidemic 200 days expect intervention spread disease incidence longer period. plot data examine effect implementing mask mandate daily number new infections.","code":"# prepare an intervention that models mask mandates for ~3 months (100 days) mask_mandate <- intervention(   name = \"mask mandate\",   type = \"rate\",   time_begin = 60,   time_end = 60 + 100,   reduction = 0.1 )  # examine the intervention object mask_mandate #>  #>  Intervention name:  #>  Begins at:  #>      [,1] #> [1,]   60 #>  #>  Ends at:  #>      [,1] #> [1,]  160 #>  #>  Reduction:  #> Interv. 1  #>       0.1  # check the object is_intervention(mask_mandate) #> [1] TRUE  is_contacts_intervention(mask_mandate) #> [1] FALSE  is_rate_intervention(mask_mandate) #> [1] TRUE # no intervention baseline scenario data <- model_default_cpp(   population = uk_population,   time_end = 200, increment = 1.0 )  # with a mask mandate data_masks <- model_default_cpp(   population = uk_population,   intervention = list(transmissibility = mask_mandate),   time_end = 200, increment = 1.0 ) # get new infections in each scenario data <- new_infections(data, by_group = TRUE) data_masks <- new_infections(data_masks, by_group = TRUE)  # assign a scenario name to each scenario data$scenario <- \"baseline\" data_masks$scenario <- \"masks\"  # bind data together data_combined <- bind_rows(data, data_masks) ggplot(data_combined) +   geom_line(     aes(time, new_infections, col = demography_group, linetype = scenario)   ) +   coord_cartesian(     expand = FALSE   ) +   annotate(     geom = \"rect\",     xmin = get_parameter(mask_mandate, \"time_begin\"),     xmax = get_parameter(mask_mandate, \"time_end\"),     ymin = 0, ymax = 150e3,     fill = alpha(\"red\", alpha = 0.2),     lty = \"dashed\"   ) +   scale_y_continuous(     labels = scales::comma   ) +   scale_linetype_manual(     name = \"Scenario\",     values = c(       baseline = \"dashed\",       masks = \"solid\"     )   ) +   scale_colour_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   expand_limits(     y = c(0, 100e3)   ) +   coord_cartesian(     expand = FALSE   ) +   theme_bw() +   theme(     legend.position = \"top\"   ) +   labs(     x = \"Simulation time (days)\",     linetype = \"Compartment\",     y = \"New infections\"   )"},{"path":"https://epiverse.github.io/epidemics/articles/time_dependence.html","id":"setup-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Setup and initial conditions","title":"Modelling time-dependence and seasonality in transmission dynamics","text":"","code":"# set up initial conditions polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE ) contact_matrix <- t(contact_data$matrix) demography_vector <- contact_data$demography$population  # Prepare some initial objects uk_population <- population(   name = \"UK population\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = matrix(     c(1 - 1e-6, 0, 1e-6, 0, 0),     nrow = nrow(contact_matrix), ncol = 5L,     byrow = TRUE   ) )"},{"path":"https://epiverse.github.io/epidemics/articles/time_dependence.html","id":"defining-a-time-dependent-function","dir":"Articles","previous_headings":"","what":"Defining a time-dependent function","title":"Modelling time-dependence and seasonality in transmission dynamics","text":"Next prepare function affects transmissibility (often denoted \\(\\beta\\)) way two peaks two troughs transmissibility rate course year. Note example uses arbitrary function, might want choose realistic function model. Nonetheless, figures later show, can still generate realistic looking epidemic curves good starting point understanding feature works. can plot output function time examine effect \\(\\beta\\).","code":"# prepare function, refer to transmissiblity as beta in function name mod_beta <- function(time, x, tmax = 365 / 4) {   x + (x * sinpi(time / tmax)) } # get the function output # calculate beta - this is done automatically inside epidemic_*() output <- mod_beta(seq(0, 365), 1.3 / 7.0)  # plot the effect of time dependence ggplot() +   geom_line(     aes(x = seq(0, 365), y = output)   ) +   labs(x = \"Days\", y = \"Transmission rate (beta)\") +   theme_bw()"},{"path":"https://epiverse.github.io/epidemics/articles/time_dependence.html","id":"model-with-time-dependent-transmission","dir":"Articles","previous_headings":"","what":"Model with time-dependent transmission","title":"Modelling time-dependence and seasonality in transmission dynamics","text":"Next run epidemic model including time dependence transmissibility. plot number newly infectious individuals check model dynamics. Note plotting code folded can expanded.  , can see epidemic large first wave, followed smaller second wave later model run (represents one year).","code":"# note transmissibility is the function/model parameter # the function that affects it may have any name data <- model_default_cpp(   population = uk_population,   time_dependence = list(     transmissibility = mod_beta   ),   time_end = 365, increment = 1 )  # get data on new infections data_infections <- new_infections(data) # plot data on new infections ggplot(data_infections) +   geom_line(     aes(x = time, y = new_infections, col = demography_group)   ) +   scale_y_continuous(     labels = scales::comma,     name = \"New infections\"   ) +   scale_color_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   theme_bw() +   coord_cartesian(     expand = FALSE   ) +   labs(     x = \"Time (days)\",     title = \"Effect of time-dependence of transmission rate\"   ) +   theme(     legend.position = \"top\",     plot.title = element_text(face = \"bold\")   )"},{"path":"https://epiverse.github.io/epidemics/articles/time_dependence.html","id":"non-pharmaceutical-interventions-and-time-dependence","dir":"Articles","previous_headings":"","what":"Non-pharmaceutical interventions and time-dependence","title":"Modelling time-dependence and seasonality in transmission dynamics","text":"can also model effect imposing non-pharmaceutical interventions reduce social contacts, trajectory epidemic time-dependent changes transmission rate. example, impose intervention three phases: (1) closing schools, primarily affects age group 0 – 19, (2) closing workplaces, affects age groups > 20 years old, (3) partially reopening schools intervention lower effect social contacts age group 0 – 19. First construct intervention, object <contacts_intervention> class. run model specifying time-dependence transmission rate, well intervention social contacts. assign scenario names data, combine , plot comparison.  can observe implementing interventions social contacts can substantially reduce number infections age groups epidemic waves.","code":"# school closures affecting younger age groups close_schools <- intervention(   type = \"contacts\", time_begin = 50, time_end = 120,   reduction = c(0.1, 0.01, 0.01) )  # workplace closures affecting mostly adults close_workplaces <- intervention(   type = \"contacts\", time_begin = 65, time_end = 90,   reduction = c(0.01, 0.2, 0.2) )  # partially reopen schools partial_schools <- intervention(   type = \"contacts\", time_begin = 120, time_end = 180,   reduction = c(0.05, 0.01, 0.01) )  # combine interventions npis <- c(close_schools, close_workplaces, partial_schools)  # print to examine npis #>  #>  Intervention name:  #>  Begins at:  #>      npi_1 npi_2 npi_3 #> [1,]    50    65   120 #>  #>  Ends at:  #>      npi_1 npi_2 npi_3 #> [1,]   120    90   180 #>  #>  Reduction:  #>              Interv. 1 Interv. 2 Interv. 3 #> Demo. grp. 1      0.10      0.01      0.05 #> Demo. grp. 2      0.01      0.20      0.01 #> Demo. grp. 3      0.01      0.20      0.01 # run the model with interventions and time-dependence data_npi <- model_default_cpp(   population = uk_population,   intervention = list(contacts = npis),   time_dependence = list(     transmissibility = mod_beta   ),   time_end = 365, increment = 1 )  # get the infections data_infections_npi <- new_infections(data_npi) data_infections$scenario <- \"baseline\" data_infections_npi$scenario <- \"intervention\"  # combine the data data_npi_compare <- bind_rows(data_infections, data_infections_npi) ggplot(data_npi_compare) +   geom_line(     aes(       x = time, y = new_infections,       col = demography_group, linetype = scenario     )   ) +   scale_y_continuous(     labels = scales::comma,     name = \"New infections\"   ) +   scale_color_brewer(     palette = \"Dark2\",     name = \"Age group\",     labels = c(\"Baseline\", \"Intervention\")   ) +   scale_linetype_manual(     name = \"Scenario\",     values = c(       baseline = \"dashed\",       intervention = \"solid\"     )   ) +   theme_bw() +   coord_cartesian(     expand = FALSE   ) +   labs(     x = \"Time (days)\",     title = \"Effect of multiple interventions on contacts\"   ) +   theme(     legend.position = \"top\",     plot.title = element_text(face = \"bold\")   )"},{"path":"https://epiverse.github.io/epidemics/articles/time_dependence.html","id":"timing-vaccination-to-prevent-epidemic-peaks","dir":"Articles","previous_headings":"","what":"Timing vaccination to prevent epidemic peaks","title":"Modelling time-dependence and seasonality in transmission dynamics","text":"can model effect timing vaccination doses begin end first wave, 120 days. example include non-pharmaceutical interventions. First define vaccination regime targets adults aged 40 years priority group. age groups vaccinated campaign. also assume single dose vaccine confers immunity (.e., non-leaky vaccination). model effect administering vaccine doses expected peaks epidemic waves, plot outcome.  , can see 2 million individuals vaccinated (immunised; blue line, right-hand Y axis) 100 days end first wave infections, start second wave infections. Vaccination reduces number daily infections among individuals age groups second wave. peak, vaccination scenario sees approximately 5,000 fewer daily infections baseline scenario, may represent substantial benefit public health.","code":"# define vaccination object vax_regime <- vaccination(   nu = matrix(0.001, nrow = 3, ncol = 1),   time_begin = matrix(c(0, 0, 120)),   time_end = matrix(c(0, 0, 220)) )  # view the vaccination object vax_regime #>  #>  Vaccination name:  #>  Begins at:  #>      dose_1 #> [1,]      0 #> [2,]      0 #> [3,]    120 #>  #>  Ends at:  #>      dose_1 #> [1,]      0 #> [2,]      0 #> [3,]    220 #>  #>  Vaccination rate:  #>      dose_1 #> [1,]  0.001 #> [2,]  0.001 #> [3,]  0.001 # pass time dependence and vaccination. Note no interventions data_vax <- model_default_cpp(   population = uk_population,   vaccination = vax_regime,   time_dependence = list(     transmissibility = mod_beta   ),   time_end = 365, increment = 1 )  # collect data and add scenario data_vax_infections <- new_infections(   data_vax,   compartments_from_susceptible = c(\"exposed\", \"vaccinated\") ) data_vax_infections$scenario <- \"vaccination\"  # combine data data_vax_compare <- bind_rows(data_infections, data_vax_infections) ggplot(data_vax_compare) +   geom_rect(     aes(       xmin = 120, xmax = 220,       ymin = 0, ymax = 20e3     ),     fill = \"grey\", alpha = 0.1   ) +   geom_line(     data = filter(       data_vax, compartment == \"vaccinated\", demography_group == \"40+\"     ),     aes(time, value / 1e2),     colour = \"darkblue\"   ) +   annotate(     geom = \"text\",     x = 190,     y = 10e3,     label = \"Vaccines administered (100 days)\",     angle = 90,     colour = \"darkblue\"   ) +   geom_line(     aes(       x = time, y = new_infections,       col = demography_group, linetype = scenario     )   ) +   scale_y_continuous(     labels = scales::comma,     name = \"New infections\",     sec.axis = dup_axis(       trans = function(x) x * 1e2,       name = \"Individuals vaccinated\",       labels = function(x) {         scales::comma(x, scale = 1e-6, suffix = \"M\")       }     )   ) +   scale_color_brewer(     palette = \"Dark2\",     name = \"Age group\"   ) +   scale_linetype_manual(     name = \"Scenario\",     values = c(       baseline = \"dashed\",       vaccination = \"solid\"     )   ) +   theme_bw() +   coord_cartesian(     ylim = c(0, 20e3),     expand = FALSE   ) +   labs(     x = \"Time (days)\",     title = \"Effect of a vaccination regime\"   ) +   theme(     legend.position = \"top\",     plot.title = element_text(face = \"bold\")   )"},{"path":"https://epiverse.github.io/epidemics/articles/vacamole.html","id":"modifications-for-epidemics","dir":"Articles","previous_headings":"","what":"Modifications for epidemics","title":"Modelling leaky vaccination and hospitalisation outcomes with Vacamole","text":"made modifications ODE model Vacamole order make general thus potentially applicable wider range settings. Specifically, dropped ICU ICU2H compartment potentially less relevant context intensive care capacity low. added transitions infectious () hospitalised (H) compartments death (D), may general assumption hospital capacity low (relatively → D) treatments poor (relatively H → D). assume, first pass implementation vaccination primarily reduces adverse outcomes, modification transition rates (\\(\\beta_V,\\eta_{V},\\omega_V\\)): \\(\\beta_V\\): transmission rate \\(\\beta\\) individuals fully vaccinated compartment \\(V_2\\); \\(\\eta_{V}\\): hospitalisation rate \\(\\eta\\) fully vaccinated, infected individuals (\\(I_V\\) → \\(H_V\\)); \\(\\omega_V\\): mortality rate fully vaccinated individuals stage post infection (, H). details ODE system version Vacamole included epidemics can found end page.","code":"library(epidemics) library(dplyr) library(tidyr) library(ggplot2) library(colorspace) library(scales)"},{"path":"https://epiverse.github.io/epidemics/articles/vacamole.html","id":"prepare-population-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare population and initial conditions","title":"Modelling leaky vaccination and hospitalisation outcomes with Vacamole","text":"Prepare population contact data. Prepare initial conditions age group. Vacamole model 11 compartments therefore requires matrix 11 columns. Prepare time days model epidemic, outbreak beginning day zero. Prepare population population class object.","code":"# load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 65),   symmetric = TRUE )  # prepare contact matrix contact_matrix <- t(contact_data$matrix)  # prepare the demography vector demography_vector <- contact_data$demography$population names(demography_vector) <- rownames(contact_matrix) # initial conditions initial_i <- 1e-6  # // 0| 1| 2|3| 4|5| 6|7| 8|9|10 # // S|V1|V2|E|EV|I|IV|H|HV|D|R  # make initial conditions - order is important initial_conditions <- c(   S = 1 - initial_i,   V1 = 0, V2 = 0,   E = 0, EV = 0,   I = initial_i, IV = 0,   H = 0, HV = 0, D = 0, R = 0 ) initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions )  # assign rownames for clarity rownames(initial_conditions) <- rownames(contact_matrix) epidemic_days <- 300 uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions )"},{"path":"https://epiverse.github.io/epidemics/articles/vacamole.html","id":"prepare-a-two-dose-vaccination-campaign","dir":"Articles","previous_headings":"","what":"Prepare a two dose vaccination campaign","title":"Modelling leaky vaccination and hospitalisation outcomes with Vacamole","text":"prepare two-dose vaccination campaign concatenating two single dose vaccination regimes, .e., applying function c() two vaccination objects. possible combine multiple vaccination objects together using c() — limitation vaccination regimes combined way must number demographic groups. possible add single dose two-vaccination regime using c() two vaccination objects two one dose, respectively. prepare dummy vaccination regime vaccination compare two-dose vaccination campaign. done using no_vaccination() function specifying number doses (, 2 doses).","code":"# prepare a two dose vaccination regime for a single age group # prepare the first dose dose_1 <- vaccination(   name = \"two-dose vaccination\", # name given to first dose   nu = matrix(1e-2, nrow = 3),   time_begin = matrix(30, nrow = 3),   time_end = matrix(epidemic_days, nrow = 3) )  # prepare the second dose with a 30 day interval in start date dose_2 <- vaccination(   name = \"two-dose vaccination\", # name given to first dose   nu = matrix(1e-2, nrow = 3),   time_begin = matrix(60, nrow = 3),   time_end = matrix(epidemic_days, nrow = 3) )  # use `c()` to combine the two doses double_vaccination <- c(dose_1, dose_2)  # print to visualise double_vaccination #>  #>  Vaccination name:  #>  Begins at:  #>      dose_1 dose_2 #> [1,]     30     60 #> [2,]     30     60 #> [3,]     30     60 #>  #>  Ends at:  #>      dose_1 dose_2 #> [1,]    300    300 #> [2,]    300    300 #> [3,]    300    300 #>  #>  Vaccination rate:  #>      dose_1 dose_2 #> [1,]   0.01   0.01 #> [2,]   0.01   0.01 #> [3,]   0.01   0.01 # prepare a null vaccination regime with two doses # use the convenience function `no_vaccination()` no_vaccination <- no_vaccination(population = uk_population, doses = 2)"},{"path":"https://epiverse.github.io/epidemics/articles/vacamole.html","id":"model-epidemic-using-vacamole","dir":"Articles","previous_headings":"","what":"Model epidemic using Vacamole","title":"Modelling leaky vaccination and hospitalisation outcomes with Vacamole","text":"First, run model vaccination. model’s default parameters : Transmissibility (\\(\\beta\\), transmissibility): 0.186, resulting \\(R_0\\) = 1.3 infectious period 7 days, given \\(\\beta = R_0 / \\text{infectious period}\\). Infectiousness rate (\\(\\sigma\\), infectiousness_rate): 0.5, assuming pre-infectious period 2 days, given \\(\\sigma = 1 / \\text{pre-infectious period}\\). Hospitalisation rate (\\(\\eta\\), hospitalistion_rate): 1.0 / 1000, assuming one every thousand infectious individuals hospitalised. Mortality rate (\\(\\omega\\), mortality_rate): 1.0 / 1000, assuming one every thousand infectious hospitalised individuals dies. Recovery rate (\\(\\gamma\\), recovery_rate): 0.143, assuming infectious period 7 days, given \\(\\gamma = 1 / \\text{infectious period}\\). Susceptibility reduction vaccination (susc_reduction_vax): 0.2, assuming 20% reduction susceptibility individuals doubly vaccinated. Hospitalisation reduction vaccination (hosp_reduction_vax): 0.2, assuming 20% reduction hospitalisation individuals doubly vaccinated. Mortality reduction vaccination (mort_reduction_vax): 0.2, assuming 20% reduction mortality individuals doubly vaccinated. Next run model two dose vaccination regime.","code":"data <- model_vacamole_cpp(   population = uk_population,   vaccination = no_vaccination, # note custom no_vaccination object   time_end = epidemic_days ) data_vaccination <- model_vacamole_cpp(   population = uk_population,   vaccination = double_vaccination, # note custom object for two doses   time_end = epidemic_days )"},{"path":"https://epiverse.github.io/epidemics/articles/vacamole.html","id":"visualise-model-outcomes","dir":"Articles","previous_headings":"","what":"Visualise model outcomes","title":"Modelling leaky vaccination and hospitalisation outcomes with Vacamole","text":"First, calculate total number infections resulting recoveries deaths course simulation; epidemic’s final size.  Finally, can compare peak hospital bed occupancy scenario — can rough indication much hospital capacity required pandemic characteristics occur, well another way examine effect vaccination reducing requirement. example demonstrates implementing vaccination can substantially reduce peak hospital occupancy (100%) compared scenario vaccines deployed.","code":"# collect data from the two scenarios data_scenarios <- list(data, data_vaccination)  # get deaths and recoveries from infection data_scenarios <- Map(   data_scenarios, c(\"no_vax\", \"vax\"),   f = function(df, sc) {     df_ <- distinct(df, demography_group)      # get total deaths per group     df_$total_deaths <- filter(       df, time == max(time), compartment == \"dead\"     ) %>% pull(value)      # get total recoveries per group using helper function `epidemic_size()`     # do not count dead     df_$total_recovered <- epidemic_size(df, include_deaths = FALSE)      # add scenario information     df_$scenario <- sc      # return data     df_   } )  # collect data data_scenarios <- bind_rows(data_scenarios)  # transform to long format data_scenarios <- pivot_longer(   data_scenarios,   cols = c(\"total_deaths\", \"total_recovered\"),   names_to = \"measure\" ) ggplot(data_scenarios) +   geom_col(     aes(demography_group, value, fill = scenario),     position = \"dodge\",     colour = \"black\"   ) +   facet_wrap(     facets = vars(measure),     scales = \"free_y\",     labeller = labeller(       measure = c(         total_deaths = \"Total deaths\",         total_recovered = \"Epidemic size (infections without deaths)\"       )     )   ) +   scale_fill_discrete_qualitative(     palette = \"Dynamic\",     labels = c(\"No vaccination\", \"Vaccination\"),     name = \"Scenario\",     na.value = \"lightgrey\"   ) +   scale_y_continuous(     labels = label_comma(       scale = 1e-6, suffix = \"M\"     )   ) +   theme_bw() +   theme(     legend.position = \"bottom\",     legend.key.height = unit(2, \"mm\"),     strip.background = element_blank(),     strip.text = element_text(       face = \"bold\",       size = 11     )   ) +   expand_limits(     x = c(0.5, length(unique(data_scenarios$demography_group)) + 0.5)   ) +   coord_cartesian(     expand = FALSE   ) +   labs(     x = \"Age group\",     y = \"No. of individuals\",     title = \"Effect of vaccination on deaths and total infections\"   ) # collect data from the two scenarios data_scenarios <- list(data, data_vaccination)  peak_hospital_occupancy <- vapply(data_scenarios, function(df) {   # get highest hospital occupancy   # first get total hospitalisations among vaccinated and un- or part-vacc.   df <- filter(     df,     grepl(       pattern = \"hospitalised\", x = compartment,       fixed = TRUE     )   ) %>%     # summarise all hospitalised over time, aggregating away age groups     summarise(       total_hosp = sum(value), .by = \"time\"     ) %>%     # filter for the time point with highest hospital occupancy     filter(total_hosp == max(total_hosp)) %>%     # get the value     pull(total_hosp) }, FUN.VALUE = numeric(1))  # set names for comprehensibility names(peak_hospital_occupancy) <- c(\"No vaccination\", \"Vaccination\")  # show peak hospital occupancy in a readable format format(peak_hospital_occupancy, big.mark = \",\", digits = 1) #> No vaccination    Vaccination  #>        \"1,813\"        \"    5\""},{"path":"https://epiverse.github.io/epidemics/articles/vacamole.html","id":"vacamole-ode-system-for-epidemics","dir":"Articles","previous_headings":"","what":"Vacamole ODE system for {epidemics}","title":"Modelling leaky vaccination and hospitalisation outcomes with Vacamole","text":"Vacamole ODE system adapted {epidemics} : Susceptibles vaccinated, partially vaccinated (considered unprotected) can transition exposed vaccinated: \\[dS = -\\beta S(+I_V) - \\nu_1 S\\] Two sequential vaccination compartments, lower conversion rate two-dose vaccinated individuals (considered protected) exposed: \\[dV_1 = \\nu_1S - \\beta V_1(+I_V) - \\nu_2V_1\\] \\[dV_2 = \\nu_2V_1 - \\beta_VV_2(+I_V)\\] Two parallel exposed compartments, similar conversion infectious: \\[dE = \\beta (S+V_1)(+I_V) - \\sigma E\\] \\[dE_V = \\beta_VV_2(+I_V) - \\sigma E_V\\] Two parallel infectious compartments, lower hospitalisation mortality rate vaccinated: \\[dI = \\sigma E - \\gamma - \\eta - \\omega \\] \\[dI_V = \\sigma E_V - \\gamma I_V - \\eta_{V} I_V - \\omega_V I_V\\] Two parallel hospitalisation compartments, lower mortality rate vaccinated: \\[dH = \\eta - \\gamma H - \\eta_2 H - \\omega H\\] \\[dH_V = \\eta_{V} - \\gamma H_V - \\omega_V H_V\\] Single recovered compartment: \\[dR = \\gamma(+ H + I_V + H_V)\\] Single mortality compartment: \\[dD = \\omega(+ H) + \\omega_V(I_V + H_V)\\]","code":""},{"path":[]},{"path":"https://epiverse.github.io/epidemics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratik Gupte. Author, maintainer, copyright holder. Rosalind Eggo. Author, copyright holder. Edwin Van Leeuwen. Author, copyright holder. Adam Kucharski. Contributor, reviewer. Tim Taylor. Contributor, reviewer. Hugo Gruson. Reviewer. Joshua W. Lambert. Reviewer.","code":""},{"path":"https://epiverse.github.io/epidemics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gupte P, Eggo R, Van Leeuwen E (2024). epidemics: Library Compartmental Epidemic Scenario Models. R package version 0.1.0,  https://epiverse-trace.github.io/epidemics/, https://github.com/epiverse-trace/epidemics.","code":"@Manual{,   title = {epidemics: A Library of Compartmental Epidemic Scenario Models},   author = {Pratik Gupte and Rosalind Eggo and Edwin {Van Leeuwen}},   year = {2024},   note = {R package version 0.1.0,  https://epiverse-trace.github.io/epidemics/},   url = {https://github.com/epiverse-trace/epidemics}, }"},{"path":"https://epiverse.github.io/epidemics/index.html","id":"epidemics-a-library-of-compartmental-epidemic-scenario-models-","dir":"","previous_headings":"","what":"A Library of Compartmental Epidemic Scenario Models","title":"A Library of Compartmental Epidemic Scenario Models","text":"epidemics R package provides convenient interface library compartmental models can help model epidemic scenarios directly transmitted respiratory infections influenza Covid-19 well haemorrhagic fevers Ebola virus disease. models epidemics implement methods outlined Bjørnstad et al. (2020a) Bjørnstad et al. (2020b). models epidemics can help provide rough estimates course epidemics, effectiveness pharmaceutical non-pharmaceutical interventions. epidemics currently provides three models: deterministic SEIR-V model susceptible, exposed, infectious, recovered, vaccinated compartments (SEIR-V), allowing heterogeneity social contacts, implementation group-specific non-pharmaceutical intervention reduces social contacts, vaccination regime group-specific start end dates, deterministic Vacamole model developed RIVM, Dutch Public Health Institute Covid-19 pandemic, focus scenario modelling hospitalisation vaccination (Ainslie et al. 2022), stochastic, discrete-time, compartmental SEIR model suitable modelling haemorrhagic fevers Ebola Virus Disease, including hospitalisation hospital funeral transmissions, adapted Li et al. (2019) Getz Dougherty (2018), initial implementation compartmental model diphtheria context internally displaced persons camps, including reporting rate, hospitalisation rate, delays entering leaving hospital, taken Finger et al. (2019). models planned added near future. Please get touch like see model added epidemics model library — happy help translating framework, special focus making model applicable LMIC settings. epidemics relies Eigen via {RcppEigen}, Boost Odeint via {BH}, developed Centre Mathematical Modelling Infectious Diseases London School Hygiene Tropical Medicine part Epiverse-TRACE initiative.","code":""},{"path":"https://epiverse.github.io/epidemics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Library of Compartmental Epidemic Scenario Models","text":"current development version epidemics can installed GitHub using pak package.","code":"if(!require(\"pak\")) install.packages(\"pak\") pak::pak(\"epiverse-trace/epidemics\")"},{"path":"https://epiverse.github.io/epidemics/index.html","id":"installation-notes","dir":"","previous_headings":"Installation","what":"Installation Notes","title":"A Library of Compartmental Epidemic Scenario Models","text":"users also using developing packages use Stan might face issues modified toolchain accommodate packages cmdstanr; see resolved issue starting point face similar problems. Users Windows systems need packages RTools family installed system path; see link guidance using RTools version R.","code":""},{"path":"https://epiverse.github.io/epidemics/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"A Library of Compartmental Epidemic Scenario Models","text":"show example using default model epidemics model epidemic U.K. population R0 similar pandemic influenza, heterogeneity social contacts among different age groups, implementation school closures dampen spread infection. Prepare social contact pattern population (, U.K population), divided three age groups: 0 – 19, 20 – 39, 40+. Prepare initial conditions population age group — , one every million individuals infected start epidemic (total 60 infections). Prepare object class <population>, using function population(). Define intervention close schools two months. intervention mostly affects individuals age range 0 – 19, reduces contacts 50%, reducing contacts age groups 1%. object class <contacts_intervention>, created using function intervention(), setting type = \"contacts\". Run default epidemic model, using function model_default_cpp(). assume R0 1.5 similar pandemic influenza, infectious period 7 days, pre-infectious period 3 days. values can calculate transmissibility β 1.5 / 7.0, infectiousness_rate α 1.0 / 3.0 recovery_rate γ 1.0 / 7.0. Visualise development individuals “infectious” compartment model time. Note curves represent number individuals infectious, number newly infectious individuals.","code":"# load epidemics library(epidemics) library(ggplot2) library(dplyr) # load contact and population data from socialmixr::polymod polymod <- socialmixr::polymod contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0, 20, 40),   symmetric = TRUE )  # prepare contact matrix contact_matrix <- t(contact_data[[\"matrix\"]])  # prepare the demography vector demography_vector <- contact_data[[\"demography\"]][[\"population\"]] names(demography_vector) <- rownames(contact_matrix) # initial conditions: one in every 1 million is infected initial_i <- 1e-6 initial_conditions <- c(   S = 1 - initial_i, E = 0, I = initial_i, R = 0, V = 0 )  # build for all age groups initial_conditions <- rbind(   initial_conditions,   initial_conditions,   initial_conditions ) rownames(initial_conditions) <- rownames(contact_matrix) # prepare the population to model as affected by the epidemic uk_population <- population(   name = \"UK\",   contact_matrix = contact_matrix,   demography_vector = demography_vector,   initial_conditions = initial_conditions ) # an intervention to close schools close_schools <- intervention(   type = \"contacts\",   time_begin = 200,   time_end = 260,   reduction = matrix(c(0.5, 0.01, 0.01)) )  # view the intervention close_schools #>  #>  Intervention name:  #>  Begins at:  #> [1] 200 #>  #>  Ends at:  #> [1] 260 #>  #>  Reduction:  #>              Interv. 1 #> Demo. grp. 1      0.50 #> Demo. grp. 2      0.01 #> Demo. grp. 3      0.01 # run an epidemic model using `epidemic()` output <- model_default_cpp(   population = uk_population,   transmissibility = 1.5 / 7.0,   infectiousness_rate = 1.0 / 3.0,   recovery_rate = 1.0 / 7.0,   intervention = list(contacts = close_schools),   time_end = 600, increment = 1.0 )"},{"path":"https://epiverse.github.io/epidemics/index.html","id":"package-vignettes","dir":"","previous_headings":"","what":"Package vignettes","title":"A Library of Compartmental Epidemic Scenario Models","text":"details use epidemics can found online documentation package vignettes, “Articles”.","code":""},{"path":"https://epiverse.github.io/epidemics/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"A Library of Compartmental Epidemic Scenario Models","text":"epidemics aims library published epidemiological models, following projects may useful building models: R package finalsize also developed Epiverse-TRACE helps calculate final size epidemic heterogeneous population, quicker option estimates total infections temporal dynamics less important; Epirecipes project cookbook-style guide focuses different ways implement epidemic models R languages; R package odin generates systems ordinary differential equations (ODE) integrate , using domain specific language (DSL), widely used translate compartmental models R C code performance gains; Many R packages provide modelling options, can found CRAN Epidemiology Task View section “Infectious disease modelling”.","code":""},{"path":"https://epiverse.github.io/epidemics/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"A Library of Compartmental Epidemic Scenario Models","text":"report bug please open issue.","code":""},{"path":"https://epiverse.github.io/epidemics/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"A Library of Compartmental Epidemic Scenario Models","text":"Contributions epidemics welcomed. Please follow package contributing guide.","code":""},{"path":"https://epiverse.github.io/epidemics/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"A Library of Compartmental Epidemic Scenario Models","text":"Please note epidemics project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":[]},{"path":"https://epiverse.github.io/epidemics/reference/as.intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list to a intervention object — as.intervention","title":"Convert a list to a intervention object — as.intervention","text":"Convert list intervention object","code":""},{"path":"https://epiverse.github.io/epidemics/reference/as.intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list to a intervention object — as.intervention","text":"","code":"as.intervention(x, type = c(\"contacts\", \"rate\"))"},{"path":"https://epiverse.github.io/epidemics/reference/as.intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list to a intervention object — as.intervention","text":"x list, object inherits list. type string type intervention: \"contacts\" <contact_intervention> \"rate\" <rate_intervention>.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/as.intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list to a intervention object — as.intervention","text":"intervention class object.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/as.intervention.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list to a intervention object — as.intervention","text":"","code":"# prepare a list npi <- list(   name = \"npi\",   type = \"contacts\",   time_begin = 30,   time_end = 60,   reduction = rep(0.1, 3) )  as.intervention(npi) #> <contacts_intervention> object #>  #>  Intervention name:  #> \"npi\" #>  #>  Begins at:  #> [1] 30 #>  #>  Ends at:  #> [1] 60 #>  #>  Reduction:  #>              Interv. 1 #> Demo. grp. 1       0.1 #> Demo. grp. 2       0.1 #> Demo. grp. 3       0.1"},{"path":"https://epiverse.github.io/epidemics/reference/as.vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list to a vaccination object — as.vaccination","title":"Convert a list to a vaccination object — as.vaccination","text":"Convert list vaccination object","code":""},{"path":"https://epiverse.github.io/epidemics/reference/as.vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list to a vaccination object — as.vaccination","text":"","code":"as.vaccination(x)"},{"path":"https://epiverse.github.io/epidemics/reference/as.vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list to a vaccination object — as.vaccination","text":"x list, object inherits list.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/as.vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list to a vaccination object — as.vaccination","text":"vaccination class object.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/as.vaccination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list to a vaccination object — as.vaccination","text":"","code":"# prepare a list vax <- list(   name = \"vax_regime\",   time_begin = matrix(1),   time_end = matrix(100),   nu = matrix(0.001) )  as.vaccination(vax) #> <vaccination> object #>  #>  Vaccination name:  #> \"vax_regime\" #>  #>  Begins at:  #>      dose_1 #> [1,]      1 #>  #>  Ends at:  #>      dose_1 #> [1,]    100 #>  #>  Vaccination rate:  #>      dose_1 #> [1,]  0.001"},{"path":"https://epiverse.github.io/epidemics/reference/assert_intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert properties of a intervention object — assert_intervention","title":"Assert properties of a intervention object — assert_intervention","text":"Assert objects intervention class properties expected epidemic model. See intervention() specific model functions check intervention properties required model. function internal use argument checking functions.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/assert_intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert properties of a intervention object — assert_intervention","text":"","code":"assert_intervention(x, type = c(\"contacts\", \"rate\"), population = NULL)"},{"path":"https://epiverse.github.io/epidemics/reference/assert_intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert properties of a intervention object — assert_intervention","text":"x intervention object. type string type intervention check . May one \"contacts\" \"rate\". population optional argument population object. present, used check whether intervention object x corresponding values reduction demographic group population.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/assert_intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert properties of a intervention object — assert_intervention","text":"Silently returns <intervention>-superclass object x class x, .e., <rate_intervention> <contacts_intervention>. Primarily called side effects throwing errors x meet certain requirements.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/assert_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert properties of a population object — assert_population","title":"Assert properties of a population object — assert_population","text":"Assert objects population class parameters expected epidemic model. See population() specific epidemic functions check population parameters required model. function internal use argument checking functions.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/assert_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert properties of a population object — assert_population","text":"","code":"assert_population(x, compartments, demography_vector = NULL)"},{"path":"https://epiverse.github.io/epidemics/reference/assert_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert properties of a population object — assert_population","text":"x <population> object. compartments character vector giving names model compartments whose length taken reference number columns initial_conditions matrix x. demography_vector optional numeric vector whose length used check length demography vector present x.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/assert_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert properties of a population object — assert_population","text":"Silently returns <population> object x. Primarily called side effects throwing errors x meet certain requirements.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/assert_vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert properties of a vaccination object — assert_vaccination","title":"Assert properties of a vaccination object — assert_vaccination","text":"Assert objects vaccination class parameters expected epidemic model. See vaccination() specific epidemic functions check vaccination properties required model. function internal use argument checking functions.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/assert_vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert properties of a vaccination object — assert_vaccination","text":"","code":"assert_vaccination(x, doses, population = NULL)"},{"path":"https://epiverse.github.io/epidemics/reference/assert_vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert properties of a vaccination object — assert_vaccination","text":"x vaccination object. doses number doses expected vaccination object. population optional argument <population> object. present, used check whether vaccination object x corresponding values demographic group population.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/assert_vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert properties of a vaccination object — assert_vaccination","text":"Silently returns <vaccination> object x. Primarily called side effects throwing errors x meet certain requirements.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_default_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check arguments to default epidemic function — check_prepare_default_args","title":"Check arguments to default epidemic function — check_prepare_default_args","text":"Check prepare four main arguments model_default_cpp() use .model_default_cpp().","code":""},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_default_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check arguments to default epidemic function — check_prepare_default_args","text":"","code":".check_args_model_default(mod_args)  .prepare_args_model_default(mod_args)"},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_default_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check arguments to default epidemic function — check_prepare_default_args","text":".check_args_model_default() invisibly returns model arguments passed mod_args. Model functionalities, vaccination interventions, passed NULL replaced dummy values internal functions. .prepare_args_model_default() returns list model arguments suitable .model_default_cpp(). named list consisting : initial_state: initial conditions modified represent absolute rather proportional values; transmissibility, infectiousness_rate, recovery_rate: three numbers representing transmission rate infection, rate transition exposed infectious, recovery rate, respectively; contact_matrix, numeric matrix population contact matrix scaled largest real eigenvalue size groups; npi_time_begin, npi_time_end: two vectors start end times interventions applied; npi_cr: matrix age- intervention-specific effect social contacts; vax_time_begin,vax_time_end, vax_nu: three numeric matrices age- dose-specific start times, end times, rates vaccination doses implemented; time_end, increment: two numbers time end simulation, value simulation time incremented.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_default_args.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check arguments to default epidemic function — check_prepare_default_args","text":".prepare_args_model_default() prepares arguments .model_default_cpp(), C++ function solves default ODE system using Boost odeint solver, .ode_model_default(), passed deSolve::lsoda() model_default_r(). .prepare_args_model_default() converts arguments collected mod_args simpler structures lists numeric integer vectors can interpreted C++ types Rcpp::List, Rcpp::NumericVector, Eigen::MatrixXd.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_diphtheria_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check arguments to the diphtheria model function — check_prepare_diphtheria_args","title":"Check arguments to the diphtheria model function — check_prepare_diphtheria_args","text":"Check prepare four main arguments model_diphtheria_cpp() use .model_diphtheria_cpp().","code":""},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_diphtheria_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check arguments to the diphtheria model function — check_prepare_diphtheria_args","text":"","code":".check_args_model_diphtheria(mod_args)  .prepare_args_model_diphtheria(mod_args)"},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_diphtheria_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check arguments to the diphtheria model function — check_prepare_diphtheria_args","text":".check_args_model_diphtheria() invisibly returns model arguments passed mod_args. Model functionalities, interventions, passed NULL replaced dummy values internal functions. .prepare_args_model_diphtheria() returns list model arguments suitable .model_diphtheria_cpp(). named list consisting : initial_state: initial conditions modified represent absolute rather proportional values; transmissibility, transmissibility_vax: two numbers representing transmission rate infection unvaccinated single-dose vaccinated, two-dose vaccinated individuals, respectively; infectiousness_rate: single number transition rate 'exposed' 'exposed_vaccinated' 'infectious' 'infectious_vaccinated' compartments; recovery_rate: single number recovery rate infection; reporting_rate: single number proportion infectious cases reported; prop_hosp: single number proportion reported cases need hospitalisation; hosp_entry_rate, hosp_exit_rate: two numbers representing rate entry exit 'hospitalised' compartment; rate_interventions: Rcpp List giving interventions model parameters; time_dependence: Rcpp List giving time-dependent effects model parameters form R functions; pop_change_times pop_change_values: times values changes population susceptibles; time_end, increment: two numbers time end simulation, value simulation time incremented.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_diphtheria_args.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check arguments to the diphtheria model function — check_prepare_diphtheria_args","text":".prepare_args_model_diphtheria() prepares arguments .model_diphtheria_cpp(), C++ function solves default ODE system using Boost odeint solver. .prepare_args_model_diphtheria() converts arguments collected mod_args simpler structures lists numeric integer vectors can interpreted C++ types Rcpp::List, Rcpp::NumericVector, Eigen::MatrixXd.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_vacamole_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check arguments to the Vacamole epidemic function — check_prepare_vacamole_args","title":"Check arguments to the Vacamole epidemic function — check_prepare_vacamole_args","text":"Check prepare four main arguments model_vacamole_cpp() use .model_vacamole_cpp().","code":""},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_vacamole_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check arguments to the Vacamole epidemic function — check_prepare_vacamole_args","text":"","code":".check_args_model_vacamole(mod_args)  .prepare_args_model_vacamole(mod_args)"},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_vacamole_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check arguments to the Vacamole epidemic function — check_prepare_vacamole_args","text":".check_args_model_vacamole() invisibly returns model arguments passed mod_args. Model functionalities, interventions, passed NULL replaced dummy values internal functions. .prepare_args_model_vacamole() returns list model arguments suitable .model_vacamole_cpp(). named list consisting : initial_state: initial conditions modified represent absolute rather proportional values; transmissibility, transmissibility_vax: two numbers representing transmission rate infection unvaccinated single-dose vaccinated, two-dose vaccinated individuals, respectively; infectiousness_rate: single number transition rate 'exposed' 'exposed_vaccinated' 'infectious' 'infectious_vaccinated' compartments; mortality_rate, mortality_rate_vax: two numbers representing mortality rate infection unvaccinated single-dose vaccinated, two-dose vaccinated individuals, respectively; hospitalisation_rate, hospitalisation_rate_vax: two numbers representing hospitalisation rate infection unvaccinated single-dose vaccinated, two-dose vaccinated individuals, respectively; recovery_rate: single number recovery rate infection; contact_matrix, numeric matrix population contact matrix scaled largest real eigenvalue size groups; npi_time_begin, npi_time_end: two vectors start end times interventions applied; npi_cr: matrix age- intervention-specific effect social contacts; vax_time_begin,vax_time_end, vax_nu: three numeric matrices age- dose-specific start times, end times, rates vaccination doses implemented; time_end, increment: two numbers time end simulation, value simulation time incremented.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/check_prepare_vacamole_args.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check arguments to the Vacamole epidemic function — check_prepare_vacamole_args","text":".prepare_args_model_vacamole() prepares arguments .model_vacamole_cpp(), C++ function solves default ODE system using Boost odeint solver, .ode_model_vacamole(), passed deSolve::lsoda() model_vacamole_r(). .prepare_args_model_vacamole() converts arguments collected mod_args simpler structures lists numeric integer vectors can interpreted C++ types Rcpp::List, Rcpp::NumericVector, Eigen::MatrixXd.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/cumulative_contacts_intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Cumulative Effect of Interventions on Social Contacts — cumulative_contacts_intervention","title":"Calculate the Cumulative Effect of Interventions on Social Contacts — cumulative_contacts_intervention","text":"Calculate Cumulative Effect Interventions Social Contacts Scale Contact Matrix Active Interventions Social Contacts","code":""},{"path":"https://epiverse.github.io/epidemics/reference/cumulative_contacts_intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Cumulative Effect of Interventions on Social Contacts — cumulative_contacts_intervention","text":"","code":"cumulative_contacts_intervention(t, time_begin, time_end, reduction)  intervention_on_cm(t, cm, time_begin, time_end, cr)"},{"path":"https://epiverse.github.io/epidemics/reference/cumulative_contacts_intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Cumulative Effect of Interventions on Social Contacts — cumulative_contacts_intervention","text":"t current time. time_begin numeric vector start times interventions modelled. time_end numeric vector end times interventions modelled. Must length time_begin. reduction numeric matrix rows give effect interventions demographic group, columns give proportion reduction contacts. two interventions overlap, proportions added, maximum possible value 1.0 (.e., contacts). cm numeric matrix social contacts demographic groups.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/cumulative_contacts_intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Cumulative Effect of Interventions on Social Contacts — cumulative_contacts_intervention","text":"cumulative_contacts_intervention() returns numeric vector proportion reduction contacts demographic group. intervention_on_cm() returns contact matrix cm scaled cumulative effect active interventions.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/cumulative_rate_intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Cumulative Effect of Interventions on Rate Parameters — cumulative_rate_intervention","title":"Calculate the Cumulative Effect of Interventions on Rate Parameters — cumulative_rate_intervention","text":"Calculate Cumulative Effect Interventions Rate Parameters","code":""},{"path":"https://epiverse.github.io/epidemics/reference/cumulative_rate_intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Cumulative Effect of Interventions on Rate Parameters — cumulative_rate_intervention","text":"","code":"cumulative_rate_intervention(t, time_begin, time_end, reduction)"},{"path":"https://epiverse.github.io/epidemics/reference/cumulative_rate_intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Cumulative Effect of Interventions on Rate Parameters — cumulative_rate_intervention","text":"t current time. time_begin numeric vector start times interventions modelled. time_end numeric vector end times interventions modelled. Must length time_begin. reduction numeric vector element gives effect corresponding intervention model rate parameters. two interventions overlap, proportions added, maximum possible value 1.0 (.e., rate set zero).","code":""},{"path":"https://epiverse.github.io/epidemics/reference/cumulative_rate_intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Cumulative Effect of Interventions on Rate Parameters — cumulative_rate_intervention","text":"cumulative_rate_intervention() returns number proportion reduction model rate parameter. intervention_on_cm() returns contact matrix cm scaled cumulative effect active interventions.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_default_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an age-structured SEIR-V epidemic ODE model using a Boost solver — .model_default_cpp","title":"Run an age-structured SEIR-V epidemic ODE model using a Boost solver — .model_default_cpp","text":"compartmental model optional non-pharmaceutical intervention optional vaccination regime. function intended called internally model_default_cpp().","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_default_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an age-structured SEIR-V epidemic ODE model using a Boost solver — .model_default_cpp","text":"","code":".model_default_cpp(   initial_state,   transmissibility,   infectiousness_rate,   recovery_rate,   contact_matrix,   npi_time_begin,   npi_time_end,   npi_cr,   vax_time_begin,   vax_time_end,   vax_nu,   rate_interventions,   time_dependence,   time_end = 100,   increment = 1 )"},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_default_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an age-structured SEIR-V epidemic ODE model using a Boost solver — .model_default_cpp","text":"initial_state matrix initial state compartments. transmissibility transmission rate \\(\\beta\\) unvaccinated partially vaccinated individuals infected disease. infectiousness_rate rate transition exposed infectious \\(\\alpha\\). recovery_rate recovery rate \\(\\gamma\\). contact_matrix population contact matrix. npi_time_begin start time non-pharmaceutical interventions . npi_time_end end time non-pharmaceutical interventions. npi_cr reduction contacts non-pharmaceutical interventions. vax_time_begin start time vaccination campaigns. vax_time_end end time vaccination campaigns. vax_nu vaccination rate vaccination campaigns. rate_interventions named list <rate_intervention> objects. time_dependence named list functions parameter time dependence. time_end end time simulation. increment time increment simulation.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_default_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an age-structured SEIR-V epidemic ODE model using a Boost solver — .model_default_cpp","text":"two element list, first element list matrices whose elements correspond numbers individuals compartment specified initial conditions matrix (see population()). second list element vector timesteps.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_diphtheria_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an SEIHR ODE model for diphtheria using a Boost solver — .model_diphtheria_cpp","title":"Run an SEIHR ODE model for diphtheria using a Boost solver — .model_diphtheria_cpp","text":"compartmental model diphtheria parameters help account case reporting rate, delays seeking hospitalisation, time spent hospitalised compartment. function intended called internally model_diphtheria_cpp().","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_diphtheria_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an SEIHR ODE model for diphtheria using a Boost solver — .model_diphtheria_cpp","text":"","code":".model_diphtheria_cpp(   initial_state,   transmissibility,   infectiousness_rate,   recovery_rate,   reporting_rate,   prop_hosp,   hosp_entry_rate,   hosp_exit_rate,   rate_interventions,   time_dependence,   pop_change_times,   pop_change_values,   time_end = 100,   increment = 1 )"},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_diphtheria_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an SEIHR ODE model for diphtheria using a Boost solver — .model_diphtheria_cpp","text":"initial_state matrix initial state compartments. transmissibility transmission rate \\(\\beta\\). infectiousness_rate rate transition exposed infectious \\(\\alpha\\). recovery_rate recovery rate \\(\\gamma\\). reporting_rate recovery rate \\(\\r\\). prop_hosp proportion individuals hospitalised \\(\\eta\\). hosp_entry_rate rate individuals hospitalised, represented 1 / time hospitalisation \\(\\tau_1\\). hosp_exit_rate rate individuals discharged hospital, represented 1 / time discharge \\(\\tau_2\\). rate_interventions named list <rate_intervention> objects. time_dependence named list functions parameter time dependence. pop_change_times numeric vector times population susceptibles changes. pop_change_values Rcpp List numeric vectors giving value changes demographic group change population. time_end end time simulation. increment time increment simulation.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_diphtheria_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an SEIHR ODE model for diphtheria using a Boost solver — .model_diphtheria_cpp","text":"two element list, first element list matrices whose elements correspond numbers individuals compartment specified initial conditions matrix. second list element vector timesteps.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_vacamole_cpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the RIVM Vacamole model — .model_vacamole_cpp","title":"Run the RIVM Vacamole model — .model_vacamole_cpp","text":"Vacamole deterministic, compartmental epidemic model built Kylie Ainslie others RIVM, Dutch Public Health Institute Covid-19 pandemic, focus scenario modelling hospitalisation vaccination. Model code: https://github.com/kylieainslie/vacamole Manuscript describing model application: https://doi.org/10.2807/1560-7917.ES.2022.27.44.2101090 function intended called internally model_vacamole_cpp().","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_vacamole_cpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the RIVM Vacamole model — .model_vacamole_cpp","text":"","code":".model_vacamole_cpp(   initial_state,   transmissibility,   transmissibility_vax,   infectiousness_rate,   mortality_rate,   mortality_rate_vax,   hospitalisation_rate,   hospitalisation_rate_vax,   recovery_rate,   contact_matrix,   npi_time_begin,   npi_time_end,   npi_cr,   vax_time_begin,   vax_time_end,   vax_nu,   rate_interventions,   time_dependence,   time_end = 100,   increment = 1 )"},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_vacamole_cpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the RIVM Vacamole model — .model_vacamole_cpp","text":"initial_state matrix initial state compartments. transmissibility transmission rate \\(\\beta\\) unvaccinated partially vaccinated individuals infected disease. transmissibility_vax transmission rate \\(\\beta_V\\) individuals received two vaccine doses infected disease. infectiousness_rate rate transition exposed infectious \\(\\alpha\\). common fully susceptible, partially vaccinated, fully vaccinated individuals (fully vaccinated represents two doses). mortality_rate mortality rate fully susceptible partially vaccinated unprotected individuals. mortality_rate_vax mortality rate individuals protected vaccination. hospitalisation_rate hospitalisation rate fully susceptible partially vaccinated unprotected individuals. hospitalisation_rate_vax hospitalisation rate individuals protected vaccination. recovery_rate recovery rate \\(\\gamma\\). contact_matrix population contact matrix. npi_time_begin start time non-pharmaceutical interventions . npi_time_end end time non-pharmaceutical interventions. npi_cr reduction contacts non-pharmaceutical interventions. vax_time_begin start time vaccination campaigns. vax_time_end end time vaccination campaigns. vax_nu vaccination rate vaccination campaigns. rate_interventions named list <rate_intervention> objects. time_dependence named list functions parameter time dependence. time_end end time simulation. increment time increment simulation.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-model_vacamole_cpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the RIVM Vacamole model — .model_vacamole_cpp","text":"two element list, first element list matrices whose elements correspond numbers individuals compartment specified initial conditions matrix (see population()). second list element vector timesteps.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-ode_model_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordinary Differential Equations for the Default Model — .ode_model_default","title":"Ordinary Differential Equations for the Default Model — .ode_model_default","text":"Provides ODEs default SEIR-V model format suitable passing deSolve::lsoda(). See model_default_r() list required parameters.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-ode_model_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordinary Differential Equations for the Default Model — .ode_model_default","text":"","code":".ode_model_default(t, y, params)"},{"path":"https://epiverse.github.io/epidemics/reference/dot-ode_model_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordinary Differential Equations for the Default Model — .ode_model_default","text":"t single number timestep integrate. y conditions epidemiological compartments. params parameters, passed named list.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-ode_model_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordinary Differential Equations for the Default Model — .ode_model_default","text":"list vector many elements number demographic groups times number epidemiological compartments. value gives change number individuals compartment.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-ode_model_vacamole.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordinary Differential Equations for the Vacamole Model — .ode_model_vacamole","title":"Ordinary Differential Equations for the Vacamole Model — .ode_model_vacamole","text":"Provides ODEs RIVM Vacamole model format suitable passing deSolve::lsoda(). See model_vacamole_r() list required parameters.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-ode_model_vacamole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordinary Differential Equations for the Vacamole Model — .ode_model_vacamole","text":"","code":".ode_model_vacamole(t, y, params)"},{"path":"https://epiverse.github.io/epidemics/reference/dot-ode_model_vacamole.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordinary Differential Equations for the Vacamole Model — .ode_model_vacamole","text":"t single number timestep integrate. y conditions epidemiological compartments. params parameters, passed named list.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/dot-ode_model_vacamole.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordinary Differential Equations for the Vacamole Model — .ode_model_vacamole","text":"list vector many elements number demographic groups times number epidemiological compartments. value gives change number individuals compartment.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/epidemic_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the epidemic size — epidemic_size","title":"Get the epidemic size — epidemic_size","text":"Get size epidemic stage start end. calculated number individuals recovered infection stage epidemic.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/epidemic_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the epidemic size — epidemic_size","text":"","code":"epidemic_size(data, stage = 1, by_group = TRUE, include_deaths = TRUE)"},{"path":"https://epiverse.github.io/epidemics/reference/epidemic_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the epidemic size — epidemic_size","text":"data <data.frame> model output, typically output model_default_cpp() similar functions. stage stage epidemic return epidemic size; , 0.0 represents initial conditions epidemic (0% model time ), 1.0 represents end epidemic model (100% model time). values returned stage = 1.0 represent final size epidemic. by_group logical representing whether epidemic size returned demographic group, whether single population-wide value returned. Defaults TRUE. include_deaths logical value indicates whether count dead individuals epidemic size calculation. Defaults TRUE, makes function look \"dead\" compartment data. column, function returns final number recovered removed individuals demographic group.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/epidemic_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the epidemic size — epidemic_size","text":"single number by_group = FALSE, vector numbers length number demographic groups by_group = TRUE. Returns absolute sizes proportions.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/epidemic_size.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the epidemic size — epidemic_size","text":"function can used calculate final size epidemic, setting stage = 1.0 (100% model time; default). function allows calculation epidemic sizes demographic group well total epidemic size.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/epidemic_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the epidemic size — epidemic_size","text":"","code":"# create a population uk_population <- population(   name = \"UK population\",   contact_matrix = matrix(1),   demography_vector = 67e6,   initial_conditions = matrix(     c(0.9999, 0.0001, 0, 0, 0),     nrow = 1, ncol = 5L   ) )  # run epidemic simulation with no vaccination or intervention data <- model_default_cpp(   population = uk_population )  # get the final epidemic size epidemic_size(data) #> No 'dead' compartment found in `data`; counting only 'recovered' individuals in the epidemic size. #> demo_group_1  #>     481200.2   # get the epidemic size at the halfway point epidemic_size(data, stage = 0.5) #> No 'dead' compartment found in `data`; counting only 'recovered' individuals in the epidemic size. #> demo_group_1  #>     81921.88"},{"path":"https://epiverse.github.io/epidemics/reference/epidemics-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epidemics: A Library of Compartmental Epidemic Scenario Models — epidemics-package","title":"epidemics: A Library of Compartmental Epidemic Scenario Models — epidemics-package","text":"library compartmental epidemic models taken published literature, classes represent populations heterogeneous characteristics, public health response measures including non-pharmaceutical interventions social contacts, non-pharmaceutical pharmaceutical interventions affect disease transmissibility, vaccination regimes, disease seasonality, can combined compose epidemic scenarios.","code":""},{"path":[]},{"path":"https://epiverse.github.io/epidemics/reference/epidemics-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epidemics: A Library of Compartmental Epidemic Scenario Models — epidemics-package","text":"Maintainer: Pratik Gupte pratik.gupte@lshtm.ac.uk (ORCID) [copyright holder] Authors: Rosalind Eggo rosalind.eggo@lshtm.ac.uk (ORCID) [copyright holder] Edwin Van Leeuwen edwin.vanleeuwen@ukhsa.gov.uk (ORCID) [copyright holder] contributors: Adam Kucharski adam.kucharski@lshtm.ac.uk (ORCID) [contributor, reviewer] Tim Taylor tim.taylor@hiddenelephants.co.uk (ORCID) [contributor, reviewer] Hugo Gruson hugo.gruson@data.org (ORCID) [reviewer] Joshua W. Lambert joshua.lambert@lshtm.ac.uk (ORCID) [reviewer]","code":""},{"path":"https://epiverse.github.io/epidemics/reference/get_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters from {epidemics} classes — get_parameter","title":"Get parameters from {epidemics} classes — get_parameter","text":"Get parameters {epidemics} classes","code":""},{"path":"https://epiverse.github.io/epidemics/reference/get_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters from {epidemics} classes — get_parameter","text":"","code":"get_parameter(x, parameter)"},{"path":"https://epiverse.github.io/epidemics/reference/get_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters from {epidemics} classes — get_parameter","text":"x object one classes provided epidemics: <population>, <infection>, <intervention>, <vaccination>. parameter string parameter access x.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/get_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters from {epidemics} classes — get_parameter","text":"object class parameter x.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an intervention for an epidemic model — intervention","title":"Create an intervention for an epidemic model — intervention","text":"Prepare object <intervention> super-class specifies modification model parameters. <contacts_intervention> used simulate non-pharmaceutical intervention (NPI) regime reduces population's social contacts. <rate_intervention> used simulate reduction model's rate parameters (transmission rate \\(\\beta\\)), can used represent pharmaceutical interventions improved treatment, also NPIs wearing masks. Interventions single start end time applies demographic groups population, can groups-specific effects reduction contacts. Combine <intervention>-inheriting objects create sequential overlapping intervention regimes using c() two <intervention>-inheriting objects.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an intervention for an epidemic model — intervention","text":"","code":"intervention(name = NA_character_, type, time_begin, time_end, reduction)  is_intervention(x)  is_contacts_intervention(x)  is_rate_intervention(x)  no_contacts_intervention(population)  # S3 method for contacts_intervention c(x, ...)  # S3 method for rate_intervention c(x, ...)  no_rate_intervention()"},{"path":"https://epiverse.github.io/epidemics/reference/intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an intervention for an epidemic model — intervention","text":"name String name intervention. type String type intervention. May one \"contacts\" \"rate\", <contacts_intervention> <rate_intervention> respectively. time_begin Single number start time intervention. time_end Single number end time intervention. reduction <contacts_intervention>s, matrix many rows number demographic groups type population, single column. element gives group-specific proportion reduction contacts. <rate_intervention>s, single number giving proportion reduction model parameter contacts. See details c() can used combine interventions sub-class. x <intervention> object, object checked <intervention> object. population <population> object contact_matrix member. ... intervention objects combine x create multi-dose <intervention> object.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an intervention for an epidemic model — intervention","text":"object <intervention> S3 super-class, possible sub-classes <contact_intervention> <rate_intervention>. Concatenating two <intervention>-inheriting objects using c() also returns <intervention>-inheriting object sub-class. object holds intervention-specific start end times, reductions specified constituent intervention actions (demographic group intervention contacts). combined effect actions population handled internally epidemic model functions. \"null\" intervention generated using no_contacts_intervention(population) no_rate_intervention() returns <intervention> appropriate sub-class start end times, effect set 0.0. is_intervention(), is_contacts_intervention(), is_rate_intervention() return logical value whether object <intervention>, <contacts_intervention>, <rate_intervention> class, respectively.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/intervention.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an intervention for an epidemic model — intervention","text":"Epidemic models can accommodate interventions contacts able accommodate number interventions different start end times different group-specific effects. Epidemic models can accommodate interventions rates also able accommodate number interventions different start end times, uniform effect relevant rate. multiple contact interventions combined using c(), reduction contacts stacked column wise form matrix \\([, j]\\). multiple rate interventions combined using c(), reduction rate concatenated vector length number interventions. Models model_default_cpp() set treat interventions overlapping periods (.e., overlap time active ) additive effect contact rate reductions. contact reductions, group-specific effect \\(J\\) overlapping interventions thus vector \\(\\sum_{j = 1}^J x_{ij}\\), demographic group \\(\\). handled internally epidemic model code. example, contact reduction matrix two perfectly overlapping interventions (\\(J = 2\\)) different effects across three demographic groups (\\(= 3\\)) represented : \\(\\begin{bmatrix}0.1 & 0.05\\\\0.1 & 0.1\\\\0.1 & 0.0\\end{bmatrix}\\) epidemic models, cumulative group-specific effect interventions active \\((0.15, 0.2, 0.1)\\). rate reductions, effect overlapping interventions reduce particular rate also considered additive.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/intervention.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an intervention for an epidemic model — intervention","text":"","code":"# assuming a population with two age groups, 0 -- 18, and 18+ # an example in which schools are closed for 30 days (or other time units) close_schools <- intervention(   name = \"close schools\",   type = \"contacts\",   time_begin = 50,   time_end = 80,   reduction = matrix(c(0.5, 0.01)) # reduces contacts differentially ) close_schools #> <contacts_intervention> object #>  #>  Intervention name:  #> \"close schools\" #>  #>  Begins at:  #> [1] 50 #>  #>  Ends at:  #> [1] 80 #>  #>  Reduction:  #>              Interv. 1 #> Demo. grp. 1      0.50 #> Demo. grp. 2      0.01  # Check for intervention class is_contacts_intervention(close_schools) #> [1] TRUE  # Concatenating interventions # create first intervention npi_1 <- intervention(   type = \"contacts\",   time_begin = 30,   time_end = 60,   reduction = matrix(0.1) )  # second intervention npi_2 <- intervention(   type = \"contacts\",   time_begin = 45,   time_end = 75,   reduction = matrix(0.1) )  c(npi_1, npi_2) #> <contacts_intervention> object #>  #>  Intervention name:  #> NA #>  #>  Begins at:  #>      npi_1 npi_2 #> [1,]    30    45 #>  #>  Ends at:  #>      npi_1 npi_2 #> [1,]    60    75 #>  #>  Reduction:  #>              Interv. 1 Interv. 2 #> Demo. grp. 1       0.1       0.1  # A null intervention for scenarios without interventions pop <- population(   demography_vector = 1e6, contact_matrix = matrix(1),   initial_conditions = matrix(c(0.99, 0.01, 0.0), nrow = 1) )  no_contacts_intervention(pop) #> <contacts_intervention> object #>  #>  Intervention name:  #> \"no_contacts_intervention\" #>  #>  Begins at:  #> [1] 0 #>  #>  Ends at:  #> [1] 0 #>  #>  Reduction:  #>              Interv. 1 #> Demo. grp. 1         0"},{"path":"https://epiverse.github.io/epidemics/reference/intervention_constructor.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the  super-class and sub-classes — intervention_constructor","title":"Constructor for the  super-class and sub-classes — intervention_constructor","text":"Constructor  super-class sub-classes Constructor new <contacts_intervention> Constructor new <rate_intervention>","code":""},{"path":"https://epiverse.github.io/epidemics/reference/intervention_constructor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the  super-class and sub-classes — intervention_constructor","text":"","code":"new_intervention(   name = NA_character_,   time_begin,   time_end,   reduction,   ...,   class )  new_contacts_intervention(name, time_begin, time_end, reduction)  new_rate_intervention(name, time_begin, time_end, reduction)"},{"path":"https://epiverse.github.io/epidemics/reference/intervention_constructor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the  super-class and sub-classes — intervention_constructor","text":"name String name intervention. time_begin matrix single element giving start time intervention. time_end matrix single element giving end time intervention. reduction matrix single column many rows demographic groups targeted intervention. See intervention() details types intervention can created requirements type reduction. ... parameters passed constructor. class string giving type intervention; used generate intervention sub-classes.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/intervention_constructor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the  super-class and sub-classes — intervention_constructor","text":"new_intervention() returns object inherits <intervention> class. new_contacts_intervention() returns object sub-class <intervention> called <contacts_intervention>. new_rate_intervention() returns object sub-class <intervention> called <rate_intervention>.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/intervention_on_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply interventions to rate parameters — intervention_on_rates","title":"Apply interventions to rate parameters — intervention_on_rates","text":"Apply interventions rate parameters","code":""},{"path":"https://epiverse.github.io/epidemics/reference/intervention_on_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply interventions to rate parameters — intervention_on_rates","text":"","code":"intervention_on_rates(t, interventions, parameters)"},{"path":"https://epiverse.github.io/epidemics/reference/intervention_on_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply interventions to rate parameters — intervention_on_rates","text":"t single number simulation time. interventions named list list-like objects least three members \"time_begin\", \"time_end\", \"reduction\". used calculate effect named parameters simulation. parameters named list numeric parameters affected interventions. represents model parameters, transmission rate, \\(\\beta\\), recovery rate, \\(\\gamma\\).","code":""},{"path":"https://epiverse.github.io/epidemics/reference/intervention_on_rates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply interventions to rate parameters — intervention_on_rates","text":"named list length parameters, names. parameters can used timestep ODE model.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Model an SEIR-V epidemic with interventions — model_default","title":"Model an SEIR-V epidemic with interventions — model_default","text":"Simulate epidemic using deterministic, compartmental epidemic model compartments \"susceptible\", \"exposed\", \"infectious\", \"recovered\", \"vaccinated\". model can accommodate heterogeneity social contacts among demographic groups, well differences sizes demographic groups. population, transmissibility, infectiousness_rate, recovery_rate arguments mandatory, passing intervention vaccination optional can used simulate scenarios different epidemic responses different levels type response. See Details information.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model an SEIR-V epidemic with interventions — model_default","text":"","code":"model_default_cpp(   population,   transmissibility = 1.3/7,   infectiousness_rate = 1/2,   recovery_rate = 1/7,   intervention = NULL,   vaccination = NULL,   time_dependence = NULL,   time_end = 100,   increment = 1 )  model_default_r(   population,   transmissibility = 1.3/7,   infectiousness_rate = 1/2,   recovery_rate = 1/7,   intervention = NULL,   vaccination = NULL,   time_dependence = NULL,   time_end = 100,   increment = 1 )"},{"path":"https://epiverse.github.io/epidemics/reference/model_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model an SEIR-V epidemic with interventions — model_default","text":"population object population class, holds population contact matrix, demography vector, initial conditions demographic group. See population(). transmissibility single number rate individuals move susceptible exposed compartment upon contact infectious individual. Often denoted \\(\\beta\\), \\(\\beta = R_0 / \\text{infectious period}\\). infectiousness_rate single number rate individuals move exposed infectious compartment. Often denoted \\(\\sigma\\), \\(\\sigma = 1.0 / \\text{pre-infectious period}\\). value depend upon number infectious individuals population. recovery_rate single number rate individuals move infectious recovered compartment. Often denoted \\(\\gamma\\), \\(\\gamma = 1.0 / \\text{infectious period}\\). intervention named list <intervention>s representing optional non-pharmaceutical pharmaceutical interventions applied epidemic. single intervention social contacts class <contacts_intervention> allowed named element \"contacts\". Multiple <rate_interventions> model parameters allowed; see Details model parameters interventions supported. vaccination <vaccination> object representing optional vaccination regime single dose, followed course epidemic, start end time, age-specific vaccination rates. time_dependence named list functions modify model parameters function model time. List element names must correspond model parameter names. List elements must functions form function(time, x, ...), time simulation time x represents model parameter. order function arguments important. time_end maximum number timesteps run model. Taken days, default value 200 days. increment size time increment. Taken days, default value 1 day.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model an SEIR-V epidemic with interventions — model_default","text":"data.frame columns \"time\", \"compartment\", \"age_group\", \"value\". compartments correspond compartments model chosen model. current default model compartments \"susceptible\", \"exposed\", \"infectious\", \"recovered\", \"vaccinated\".","code":""},{"path":[]},{"path":"https://epiverse.github.io/epidemics/reference/model_default.html","id":"r-and-rcpp-implementations","dir":"Reference","previous_headings":"","what":"R and Rcpp implementations","title":"Model an SEIR-V epidemic with interventions — model_default","text":"model_default_cpp() wrapper function internal C++ function .model_default_cpp() uses Boost odeint solvers, model_default_r() wrapper around deSolve::lsoda() R-implementation ODE system .ode_model_default(). models return equivalent results, C++ implementation faster.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_default.html","id":"model-parameters","dir":"Reference","previous_headings":"","what":"Model parameters","title":"Model an SEIR-V epidemic with interventions — model_default","text":"model allows single, population-wide rates transitions compartments. default values : Transmissibility (\\(\\beta\\), transmissibility): 0.186, assuming \\(R_0\\) = 1.3 infectious period 7 days. Infectiousness rate (\\(\\sigma\\), infectiousness_rate): 0.5, assuming pre-infectious period 2 days. Recovery rate (\\(\\gamma\\), recovery_rate): 0.143, assuming infectious period 7 days.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model an SEIR-V epidemic with interventions — model_default","text":"","code":"# create a population uk_population <- population(   name = \"UK population\",   contact_matrix = matrix(1),   demography_vector = 67e6,   initial_conditions = matrix(     c(0.9999, 0.0001, 0, 0, 0),     nrow = 1, ncol = 5L   ) )  # run epidemic simulation with no vaccination or intervention data <- model_default_cpp(   population = uk_population )  # view some data head(data) #>   time demography_group compartment    value #> 1    0     demo_group_1 susceptible 66993300 #> 2    0     demo_group_1     exposed     6700 #> 3    0     demo_group_1  infectious        0 #> 4    0     demo_group_1   recovered        0 #> 5    0     demo_group_1  vaccinated        0 #> 6    1     demo_group_1 susceptible 66993044"},{"path":"https://epiverse.github.io/epidemics/reference/model_diphtheria.html","id":null,"dir":"Reference","previous_headings":"","what":"Model a diphtheria outbreak using a compartmental ODE model — model_diphtheria","title":"Model a diphtheria outbreak using a compartmental ODE model — model_diphtheria","text":"Simulate diphtheria outbreak using deterministic, compartmental ordinary differential equation model compartments \"susceptible\", \"exposed\", \"infectious\", \"hospitalised\", \"recovered\". model based Finger et al. (2019) intended used context internally displaced people (IDP) refugee camps. model accommodates age demographic structure allows proportion demographic group vaccinated start outbreak, thus contribute outbreak. model also allows changes initial population size, model influxes evacuations camps.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_diphtheria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model a diphtheria outbreak using a compartmental ODE model — model_diphtheria","text":"","code":"model_diphtheria_cpp(   population,   transmissibility = 4/4.5,   infectiousness_rate = 1/3,   recovery_rate = 1/3,   reporting_rate = 0.03,   prop_hosp = 0.01,   hosp_entry_rate = 0.2,   hosp_exit_rate = 0.2,   prop_vaccinated = 0 * get_parameter(population, \"demography_vector\"),   intervention = NULL,   time_dependence = NULL,   population_change = NULL,   time_end = 100,   increment = 1 )"},{"path":"https://epiverse.github.io/epidemics/reference/model_diphtheria.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model a diphtheria outbreak using a compartmental ODE model — model_diphtheria","text":"population object population class, holds population contact matrix, demography vector, initial conditions demographic group. See population(). transmissibility single number rate individuals move susceptible exposed compartment upon contact infectious individual. Often denoted \\(\\beta\\), \\(\\beta = R_0 / \\text{infectious period}\\). infectiousness_rate single number rate individuals move exposed infectious compartment. Often denoted \\(\\sigma\\), \\(\\sigma = 1.0 / \\text{pre-infectious period}\\). value depend upon number infectious individuals population. recovery_rate single number recovery rate, denoted \\(\\gamma\\). reporting_rate single number proportion infectious cases reported; precursor hospitalisation reported cases hospitalised. prop_hosp single number proportion reported cases hospitalised. hosp_entry_rate single number rate reported cases infectious individuals hospitalised. calculated 1 / time hospitalisation, denoted \\(\\tau_1\\). hosp_exit_rate single number rate individuals discharged hospital enter 'recovered' compartment. calculated 1 / time discharge, denoted \\(\\tau_2\\). prop_vaccinated numeric vector length number demographic groups indicated proportion group vaccinated. individuals included model dynamics. intervention named list <rate_intervention> objects representing optional pharmaceutical non-pharmaceutical interventions applied model parameters listed . time_dependence named list name model parameter, element function first two arguments current simulation time, x, value dependent time (x represents model parameter). See Details information, well vignette time- dependence vignette(\"time_dependence\", package = \"epidemics\"). population_change two-element list, elements named \"time\" \"values\", giving times population changes, corresponding changes population demographic group times. \"time\" must numeric vector, \"values\" must list length \"time\", element numeric vector length number demographic groups population. default value 1 day. time_end maximum number timesteps run model. Taken days, default value 100 days. increment size time increment. Taken days, ","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_diphtheria.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model a diphtheria outbreak using a compartmental ODE model — model_diphtheria","text":"<data.frame> columns \"time\", \"compartment\", \"age_group\", \"value\".","code":""},{"path":[]},{"path":"https://epiverse.github.io/epidemics/reference/model_diphtheria.html","id":"rcpp-implementations","dir":"Reference","previous_headings":"","what":"Rcpp implementations","title":"Model a diphtheria outbreak using a compartmental ODE model — model_diphtheria","text":"model_diphtheria_cpp() wrapper function .model_diphtheria_cpp(), internal C++ function uses Boost odeint solvers SEIHR model.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_diphtheria.html","id":"model-parameters","dir":"Reference","previous_headings":"","what":"Model parameters","title":"Model a diphtheria outbreak using a compartmental ODE model — model_diphtheria","text":"model allows single, population-wide rates transitions compartments. default values taken Finger et al. (2019) possible. Transmissibility (\\(\\beta\\), transmissibility): 0.8888889, assuming \\(R_0\\) 4.0 total infectious period 4.5 days. Infectiousness rate (\\(\\sigma\\), infectiousness_rate): 0.333, assuming pre-infectious period 3 days. Reporting rate (\\(r\\), reporting_rate): 0.03, assuming 3% infectious cases detected reported. Proportion hospitalised (\\(\\eta\\), prop_hosp): 0.01, assuming 1% reported cases need hospital treatment. Hospital entry rate (\\(\\tau_1\\), hosp_entry_rate): 0.2, assuming takes 5 days infectious individuals seek hospital treatment. Hospital exit rate (\\(\\tau_2\\), hosp_exit_rate): 0.2, assuming individuals discharged hospital 5 days. Recovery rate (\\(\\gamma\\), recovery_rate): 0.333, assuming infectious period following symptoms, 3 days.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_diphtheria.html","id":"modelling-population-changes","dir":"Reference","previous_headings":"","what":"Modelling population changes","title":"Model a diphtheria outbreak using a compartmental ODE model — model_diphtheria","text":"model allows changes number susceptibles demographic group, represent influxes evacuations camp expected humanitarian relief situations. Users can specify times changes (demographic group) changes using population_changes argument, examine effect outbreak dynamics.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_diphtheria.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Model a diphtheria outbreak using a compartmental ODE model — model_diphtheria","text":"Finger, F., Funk, S., White, K., Siddiqui, M. R., Edmunds, W. J., & Kucharski, . J. (2019). Real-time analysis diphtheria outbreak forcibly displaced Myanmar nationals Bangladesh. BMC Medicine, 17, 58. doi:10.1186/s12916-019-1288-7 .","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_ebola.html","id":null,"dir":"Reference","previous_headings":"","what":"Model an Ebola virus disease epidemic — model_ebola","title":"Model an Ebola virus disease epidemic — model_ebola","text":"Simulate epidemic using discrete-time, stochastic SEIR compartmental model compartments based Li et al. (2019), Erlang passage times based model developed Getz Dougherty (2017), developed model West African Ebola virus disease (EVD) outbreak 2013 -- 2016. See Details information. model_ebola_cpp() Rcpp implementation model currently lags behind R implementation, likely removed.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_ebola.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model an Ebola virus disease epidemic — model_ebola","text":"","code":"model_ebola_r(   population,   erlang_subcompartments = 2,   transmissibility = 1.5/12,   infectiousness_rate = erlang_subcompartments/5,   removal_rate = erlang_subcompartments/12,   prop_community = 0.9,   etu_risk = 0.7,   funeral_risk = 0.5,   intervention = NULL,   time_dependence = NULL,   time_end = 100 )"},{"path":"https://epiverse.github.io/epidemics/reference/model_ebola.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model an Ebola virus disease epidemic — model_ebola","text":"population object <population> class, see population(). model accepts <population> without demographic structure, , demography_vector must single number representing total size affected population. model also account demographic differences social contacts, means contact_matrix ignored. consistency, matrix must square many rows demography groups, one. erlang_subcompartments number Erlang subcompartments assumed exposed, infectious, hospitalised compartments. Defaults 2. transmissibility single number rate individuals move susceptible exposed compartment upon contact infectious individual. Often denoted \\(\\beta\\), \\(\\beta = R_0 / \\text{infectious period}\\). infectiousness_rate single number rate individuals move exposed infectious compartment. Often denoted \\(\\sigma\\), \\(\\sigma = 1.0 / \\text{pre-infectious period}\\). value depend upon number infectious individuals population. removal_rate rate infectious individuals transition infectious hospitalised compartments funeral removed compartments. model distinguish recoveries deaths. Denoted Getz Dougherty \\(\\gamma^\\) (see Details). prop_community proportion infectious individuals remain community hospitalised treatment. Defaults 0.5 etu_risk relative risk onward transmission EVD hospitalised individuals. Must single value 0.0 1.0, 0.0 indicates hospitalisation completely prevents onward transmission, 1.0 indicates hospitalisation prevent onward transmission . etu_risk used scale value transmissibility transmissibility \\(\\beta\\). Defaults 0.2. funeral_risk relative risk onward transmission EVD funerals individuals died EVD. Must single value 0.0 1.0, 0.0 indicates onward transmission, 1.0 indicates funeral transmission equivalent transmission community. funeral_risk used scale value transmissibility transmissibility \\(\\beta\\). Defaults 0.5. intervention named list <rate_intervention> objects representing optional pharmaceutical non-pharmaceutical interventions applied model parameters listed . time_dependence named list name model parameter, element function first two arguments current simulation time, x, value dependent time (x represents model parameter). See Details information, well vignette time- dependence vignette(\"time_dependence\", package = \"epidemics\"). time_end maximum number timesteps run model, days. Defaults 100 days.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_ebola.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model an Ebola virus disease epidemic — model_ebola","text":"<data.table> long format columns \"time\", \"compartment\", \"age_group\", \"value\", gives number individuals model compartment time ( 1 time_end).","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_ebola.html","id":"details-discrete-time-ebola-virus-disease-model","dir":"Reference","previous_headings":"","what":"Details: Discrete-time ebola virus disease model","title":"Model an Ebola virus disease epidemic — model_ebola","text":"model compartments adopted consensus model Ebola virus disease presented Li et al. (2019), transitions epidemiological compartments modelled using Erlang sub-compartments adapted Getz Dougherty (2018); see References. R code model adapted code Ha Minh Lam initially made available Epirecipes (https://github.com/epirecipes/epicookbook) MIT license. shape Erlang distributions passage times exposed infectious compartments (\\(k^E\\) \\(k^\\)) recommended set 2 sensible choice, default value erlang_sbubcompartments argument, can allowed vary (independently). transition rates exposed infectious, infectious funeral compartments (also hospitalised removed), \\(\\gamma^E\\) \\(\\gamma^\\) Getz Dougherty's notation, passed user infectiousness_rate removal_rate respectively. Getz Dougherty's equation (6) gives relationship parameters mean pre-infectious \\(\\rho^E\\) infectious \\(\\rho^\\) periods. $$\\gamma^E = \\dfrac{k^E}{\\rho^E} = \\dfrac{2}{\\rho^E} ~\\text{}~ \\gamma^= \\dfrac{k^}{\\rho^} = \\dfrac{2}{\\rho^}$$ discrete time model, \\(\\gamma^E\\) \\(\\gamma^\\) used determine passage times newly exposed infectious individuals respective compartments (thus allowing variation passage times).","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_ebola.html","id":"hospitalisation-funerals-and-removal","dir":"Reference","previous_headings":"","what":"Hospitalisation, funerals, and removal","title":"Model an Ebola virus disease epidemic — model_ebola","text":"proportion, 1.0 - prop_community, infectious individuals transferred hospitalised compartment timestep, compartment represents Ebola Treatment Units (ETUs), individuals hospitalised compartment considered infectious longer community. passage time individuals hospitalised compartment similar individuals infectious compartment (.e., infectious community), means infectious individual \\(N\\) timesteps exiting infectious compartment exit hospitalised compartment time. Hospitalised individuals can contribute transmission Ebola susceptibles depending value etu_risk scales baseline transmission rate \\(\\beta\\) hospitalised individuals. assume deaths hospital lead Ebola-safe funerals, individuals exiting hospitalised compartment move 'removed' compartment, holds recoveries deaths. assume deaths outside hospital lead funerals potentially unsafe burials, funeral_risk argument scales baseline transmission rate \\(\\beta\\) funeral transmission Ebola susceptibles. Individuals assumed spend single timestep funeral transmission compartment, move 'removed' compartment. Individuals 'removed' compartment affect model dynamics.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_ebola.html","id":"model-parameters","dir":"Reference","previous_headings":"","what":"Model parameters","title":"Model an Ebola virus disease epidemic — model_ebola","text":"default values : Transmissibility (\\(\\beta\\), transmissibility): 0.125, resulting \\(R_0\\) = 1.5 infectious period 12 days. Infectiousness rate (\\(\\gamma^E\\), infectiousness_rate): 0.4, assuming pre-infectious period 5 days two Erlang subcompartments. Removal rate (\\(\\gamma^\\), recovery_rate): 0.1667, assuming infectious period 12 days two Erlang subcompartments.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_ebola.html","id":"implementing-vaccination","dir":"Reference","previous_headings":"","what":"Implementing vaccination","title":"Model an Ebola virus disease epidemic — model_ebola","text":"Vaccination currently implemented model \"vaccinated\" epidemiological compartment. prevents use <vaccination> object. Instead, users can use time_dependence argument pass function modifies model parameters --- specifically, transmission rate --- way consistent effect vaccination. example shown vignette model; run code open vignette: vignette(\"ebola_model\", package = \"epidemics\")","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_ebola.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Model an Ebola virus disease epidemic — model_ebola","text":"Li, S.-L., Ferrari, M. J., Bjørnstad, O. N., Runge, M. C., Fonnesbeck, C. J., Tildesley, M. J., Pannell, D., & Shea, K. (2019). Concurrent assessment epidemiological operational uncertainties optimal outbreak control: Ebola case study. Proceedings Royal Society B: Biological Sciences, 286(1905), 20190774. doi:10.1098/rspb.2019.0774 Getz, W. M., & Dougherty, E. R. (2018). Discrete stochastic analogs Erlang epidemic models. Journal Biological Dynamics, 12(1), 16–38. doi:10.1080/17513758.2017.1401677","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_ebola.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model an Ebola virus disease epidemic — model_ebola","text":"","code":"# create a population with 6 compartments population <- population(   contact_matrix = matrix(1),   demography_vector = 14e6,   initial_conditions = matrix(     c(0.999998, 0.000001, 0.000001, 0, 0, 0),     nrow = 1, ncol = 6L   ) )  # run epidemic simulation with no vaccination or intervention data <- model_ebola_r(   population = population )  # view some data head(data) #>   time demography_group  compartment    value #> 1    1     demo_group_1  susceptible 13999972 #> 2    1     demo_group_1      exposed       14 #> 3    1     demo_group_1   infectious       14 #> 4    1     demo_group_1 hospitalised        0 #> 5    1     demo_group_1      funeral        0 #> 6    1     demo_group_1      removed        0"},{"path":"https://epiverse.github.io/epidemics/reference/model_vacamole.html","id":null,"dir":"Reference","previous_headings":"","what":"Model leaky, two-dose vaccination in an epidemic using Vacamole — model_vacamole","title":"Model leaky, two-dose vaccination in an epidemic using Vacamole — model_vacamole","text":"Simulate epidemic using Vacamole model Covid-19 developed RIVM, National Institute Public Health Environment Netherlands. model aimed estimating impact 'leaky' vaccination epidemic. See Details References information.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_vacamole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model leaky, two-dose vaccination in an epidemic using Vacamole — model_vacamole","text":"","code":"model_vacamole_cpp(   population,   transmissibility = 1.3/7,   infectiousness_rate = 1/2,   hospitalisation_rate = 1/1000,   mortality_rate = 1/1000,   recovery_rate = 1/7,   susc_reduction_vax = 0.2,   hosp_reduction_vax = 0.2,   mort_reduction_vax = 0.2,   intervention = NULL,   vaccination,   time_dependence = NULL,   time_end = 100,   increment = 1 )  model_vacamole_r(   population,   transmissibility = 1.3/7,   infectiousness_rate = 1/2,   hospitalisation_rate = 1/1000,   mortality_rate = 1/1000,   recovery_rate = 1/7,   susc_reduction_vax = 0.2,   hosp_reduction_vax = 0.2,   mort_reduction_vax = 0.2,   intervention = NULL,   vaccination,   time_dependence = NULL,   time_end = 100,   increment = 1 )"},{"path":"https://epiverse.github.io/epidemics/reference/model_vacamole.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model leaky, two-dose vaccination in an epidemic using Vacamole — model_vacamole","text":"population object population class, holds population contact matrix, demography vector, initial conditions demographic group. See population(). transmissibility single number rate individuals move susceptible exposed compartment upon contact infectious individual. Often denoted \\(\\beta\\), \\(\\beta = R_0 / \\text{infectious period}\\). infectiousness_rate single number rate individuals move exposed infectious compartment. Often denoted \\(\\sigma\\), \\(\\sigma = 1.0 / \\text{pre-infectious period}\\). value depend upon number infectious individuals population. hospitalisation_rate single number hospitalisation rate infectious individuals. mortality_rate single parameter mortality rate infectious hospitalised individuals. recovery_rate single number rate individuals move infectious recovered compartment. Often denoted \\(\\gamma\\), \\(\\gamma = 1.0 / \\text{infectious period}\\). susc_reduction_vax single value 0.0 1.0 giving reduction susceptibility infectious individuals received two doses vaccine. hosp_reduction_vax single value 0.0 1.0 giving reduction hospitalisation rate infectious individuals received two doses vaccine. mort_reduction_vax single value 0.0 1.0 giving reduction mortality infectious hospitalised individuals received two doses vaccine. intervention named list <intervention>s representing optional non-pharmaceutical pharmaceutical interventions applied epidemic. single intervention social contacts class <contacts_intervention> allowed named element \"contacts\". Multiple <rate_interventions> model parameters allowed; see Details model parameters interventions supported. vaccination <vaccination> object representing vaccination regime two doses followed course epidemic, start end time, age-specific vaccination rates dose. See vaccination(). time_dependence named list functions modify model parameters function model time. List element names must correspond model parameter names. List elements must functions form function(time, x, ...), time simulation time x represents model parameter. order function arguments important. time_end maximum number timesteps run model. Taken days, default value 200 days. increment size time increment. Taken days, default value 1 day.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_vacamole.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model leaky, two-dose vaccination in an epidemic using Vacamole — model_vacamole","text":"data.frame columns \"time\", \"compartment\", \"age_group\", \"value\". compartments correspond compartments model chosen model. current default model compartments \"susceptible\", \"vaccinated_one_dose\", \"vaccinated_two_dose\", \"exposed\", \"infectious\", \"infectious_vaccinated\", \"hospitalised\", \"hospitalised_vaccinated\", \"recovered\",  \"dead\".","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_vacamole.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model leaky, two-dose vaccination in an epidemic using Vacamole — model_vacamole","text":"model allows : 'hospitalised' compartment along hospitalisation rates; Two doses vaccination, 'leaky' protection, .e., vaccination prevent infection completely allows reduction infection rate, well reduced rates moving states considered serious, 'hospitalised' 'dead'.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_vacamole.html","id":"r-and-rcpp-implementations","dir":"Reference","previous_headings":"","what":"R and Rcpp implementations","title":"Model leaky, two-dose vaccination in an epidemic using Vacamole — model_vacamole","text":"model_vacamole_cpp() wrapper function .model_vacamole_cpp(), internal C++ function uses Boost odeint solvers, model_vacamole_r() wrapper around deSolve::lsoda() takes internal function ``.ode_model_vacamole()`. models return equivalent results, C++ implementation faster.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_vacamole.html","id":"model-parameters","dir":"Reference","previous_headings":"","what":"Model parameters","title":"Model leaky, two-dose vaccination in an epidemic using Vacamole — model_vacamole","text":"model allows single, population-wide rates transitions compartments. default values : Transmissibility (\\(\\beta\\), transmissibility): 0.186, resulting \\(R_0\\) = 1.3 infectious period 7 days. Infectiousness rate (\\(\\sigma\\), infectiousness_rate): 0.5, assuming pre-infectious period 2 days. Hospitalisation rate (\\(\\eta\\), hospitalistion_rate): 1.0 / 1000, assuming one every thousand infectious individuals hospitalised. Mortality rate (\\(\\omega\\), mortality_rate): 1.0 / 1000, assuming one every thousand infectious hospitalised individuals dies. Recovery rate (\\(\\gamma\\), recovery_rate): 0.143, assuming infectious period 7 days. Susceptibility reduction vaccination (susc_reduction_vax): 0.2, assuming 20% reduction susceptibility individuals doubly vaccinated. Hospitalisation reduction vaccination (hosp_reduction_vax): 0.2, assuming 20% reduction hospitalisation individuals doubly vaccinated. Mortality reduction vaccination (mort_reduction_vax): 0.2, assuming 20% reduction mortality individuals doubly vaccinated.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_vacamole.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Model leaky, two-dose vaccination in an epidemic using Vacamole — model_vacamole","text":"Ainslie, K. E. C., Backer, J. ., Boer, P. T. de, Hoek, . J. van, Klinkenberg, D., Altes, H. K., Leung, K. Y., Melker, H. de, Miura, F., & Wallinga, J. (2022). scenario modelling analysis anticipate impact COVID-19 vaccination adolescents children disease outcomes Netherlands, summer 2021. Eurosurveillance, 27(44), 2101090. doi:10.2807/1560-7917.ES.2022.27.44.2101090","code":""},{"path":"https://epiverse.github.io/epidemics/reference/model_vacamole.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model leaky, two-dose vaccination in an epidemic using Vacamole — model_vacamole","text":"","code":"# create a population, note eleven columns for compartments population <- population(   contact_matrix = matrix(1),   demography_vector = 67e6,   initial_conditions = matrix(     c(0.9999, 0, 0, 0, 0, 0.0001, 0, 0, 0, 0, 0),     nrow = 1, ncol = 11L   ) )  # create a vaccination regime double_vax <- vaccination(   nu = matrix(1e-3, ncol = 2, nrow = 1),   time_begin = matrix(c(10, 30), nrow = 1),   time_end = matrix(c(50, 80), nrow = 1) )  # run epidemic simulation with no vaccination or intervention data <- model_vacamole_cpp(   population = population,   vaccination = double_vax )  # view some data head(data) #>   time demography_group         compartment    value #> 1    0     demo_group_1         susceptible 66993300 #> 2    0     demo_group_1 vaccinated_one_dose        0 #> 3    0     demo_group_1 vaccinated_two_dose        0 #> 4    0     demo_group_1             exposed        0 #> 5    0     demo_group_1  exposed_vaccinated        0 #> 6    0     demo_group_1          infectious     6700"},{"path":"https://epiverse.github.io/epidemics/reference/new_infections.html","id":null,"dir":"Reference","previous_headings":"","what":"Get new infections over model time — new_infections","title":"Get new infections over model time — new_infections","text":"Get new infections model time","code":""},{"path":"https://epiverse.github.io/epidemics/reference/new_infections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get new infections over model time — new_infections","text":"","code":"new_infections(data, compartments_from_susceptible = NULL, by_group = TRUE)"},{"path":"https://epiverse.github.io/epidemics/reference/new_infections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get new infections over model time — new_infections","text":"data <data.frame> model output, typically output model_default_cpp() similar functions. compartments_from_susceptible optional argument, character vector names model compartments individuals transition \"susceptible\" compartment, related infection. common example compartment \"vaccinated\" individuals longer susceptible, also counted infected. by_group logical representing whether epidemic size returned demographic group, whether single population-wide value returned.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/new_infections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get new infections over model time — new_infections","text":"<data.frame> columns data, additional variable compartment, \"new_infections\", resulting additional rows.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/new_infections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get new infections over model time — new_infections","text":"","code":"# create a population uk_population <- population(   contact_matrix = matrix(1),   demography_vector = 67e6,   initial_conditions = matrix(     c(0.9999, 0.0001, 0, 0, 0),     nrow = 1, ncol = 5L   ) )   # run epidemic simulation with no vaccination or intervention data <- model_default_cpp(   population = uk_population,   time_end = 200,   increment = 1 )  new_infections(data) #> Key: <time, demography_group> #>       time demography_group new_infections #>      <num>           <char>          <num> #>   1:     0     demo_group_1         0.0000 #>   2:     1     demo_group_1       255.6554 #>   3:     2     demo_group_1       597.4504 #>   4:     3     demo_group_1       786.9596 #>   5:     4     demo_group_1       899.2263 #>  ---                                       #> 197:   196     demo_group_1    194151.2197 #> 198:   197     demo_group_1    196154.0970 #> 199:   198     demo_group_1    198089.5442 #> 200:   199     demo_group_1    199954.3897 #> 201:   200     demo_group_1    201745.5414"},{"path":"https://epiverse.github.io/epidemics/reference/no_time_dependence.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify no time dependence of model rates — no_time_dependence","title":"Specify no time dependence of model rates — no_time_dependence","text":"Specify time dependence model rates","code":""},{"path":"https://epiverse.github.io/epidemics/reference/no_time_dependence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify no time dependence of model rates — no_time_dependence","text":"","code":"no_time_dependence()"},{"path":"https://epiverse.github.io/epidemics/reference/no_time_dependence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify no time dependence of model rates — no_time_dependence","text":"list single named element, transmissibility, function returns second argument. matches specification functions passed time_dependence argument epidemic functions.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/output_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Return ODE model output as a data.table — output_to_df","title":"Return ODE model output as a data.table — output_to_df","text":"Return ODE model output data.table","code":""},{"path":"https://epiverse.github.io/epidemics/reference/output_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return ODE model output as a data.table — output_to_df","text":"","code":"output_to_df(output, population, compartments)"},{"path":"https://epiverse.github.io/epidemics/reference/output_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return ODE model output as a data.table — output_to_df","text":"output model output, must two element list (epidemic) models, names \"x\" \"time\", \"x\" represents condition compartment timestep \"time\". population <population> object corresponding population used epidemic model. <population> object used generate names demographic groups, named. compartments vector model compartment names.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/output_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return ODE model output as a data.table — output_to_df","text":"<data.frame> columns \"compartment\", \"demography_group\", \"value\", \"time\"; specify epidemiological compartment, name demography group, number individuals group compartment, model timestep, respectively. Names demographic groups generated names provided population object; form \"demo_group_X\".","code":""},{"path":"https://epiverse.github.io/epidemics/reference/population.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new population for an epidemic model — population","title":"Construct a new population for an epidemic model — population","text":"Construct new population epidemic model Check whether object <population>","code":""},{"path":"https://epiverse.github.io/epidemics/reference/population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new population for an epidemic model — population","text":"","code":"population(   name = NA_character_,   contact_matrix,   demography_vector,   initial_conditions )  is_population(x)"},{"path":"https://epiverse.github.io/epidemics/reference/population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new population for an epidemic model — population","text":"name Optional string population name. contact_matrix matrix giving contacts demographic groups population. Must square matrix. demography_vector vector sizes demographic group. Must length dimensions contact matrix. initial_conditions Matrix representing initial proportions demographic group four model compartments: 'susceptible', 'infected/infectious', 'recovered', 'vaccinated'. Must many rows number demographic groups. compartment represented columns matrix, element \\(M_{ij}\\) represents proportion individuals demographic group \\(\\) compartment \\(j\\) . x object checked valid population.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a new population for an epidemic model — population","text":"object <population> S3 class. is_population() returns logical whether object <population>.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a new population for an epidemic model — population","text":"","code":"uk_pop <- population(   name = \"UK population\",   contact_matrix = matrix(1),   demography_vector = 67e6,   initial_conditions = matrix(     c(0.9999, 0.0001, 0, 0),     nrow = 1, ncol = 4   ) )  # print to check uk_pop #> <population> object #>  #>  Population name:  #> \"UK population\" #>  #>  Demography  #> Dem. grp. 1: 67,000,000 (100%) #>  #>  Contact matrix  #>              Dem. grp. 1: #> Dem. grp. 1:            1  # check for class <population> is_population(uk_pop) #> [1] TRUE"},{"path":"https://epiverse.github.io/epidemics/reference/print.population.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a <population> object — print.population","title":"Print a <population> object — print.population","text":"Print <population> object","code":""},{"path":"https://epiverse.github.io/epidemics/reference/print.population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a <population> object — print.population","text":"","code":"# S3 method for population print(x, ...)"},{"path":"https://epiverse.github.io/epidemics/reference/print.population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a <population> object — print.population","text":"x <population> object. ... parameters passed print().","code":""},{"path":"https://epiverse.github.io/epidemics/reference/print.population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a <population> object — print.population","text":"Invisibly returns <population> object x. Called printing side-effects.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/print.vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a <vaccination> object — print.vaccination","title":"Print a <vaccination> object — print.vaccination","text":"Print <vaccination> object","code":""},{"path":"https://epiverse.github.io/epidemics/reference/print.vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a <vaccination> object — print.vaccination","text":"","code":"# S3 method for vaccination print(x, ...)"},{"path":"https://epiverse.github.io/epidemics/reference/print.vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a <vaccination> object — print.vaccination","text":"x <vaccination> object. ... parameters passed print().","code":""},{"path":"https://epiverse.github.io/epidemics/reference/print.vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a <vaccination> object — print.vaccination","text":"Invisibly returns <vaccination> object x. Called printing side-effects.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/print_intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an object of the <intervention> super-class — print_intervention","title":"Print an object of the <intervention> super-class — print_intervention","text":"Print object <intervention> super-class Print objects <contact_intervention> class Print objects <rate_intervention> class","code":""},{"path":"https://epiverse.github.io/epidemics/reference/print_intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an object of the <intervention> super-class — print_intervention","text":"","code":"# S3 method for intervention print(x, ...)  # S3 method for contact_intervention print(x, ...)  # S3 method for rate_intervention print(x, ...)"},{"path":"https://epiverse.github.io/epidemics/reference/print_intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an object of the <intervention> super-class — print_intervention","text":"x object inherits <intervention> class. print.contacts_intervention(), object <contacts_intervention> class. print.rate_intervention(), object <rate_intervention> class. ... parameters passed print().","code":""},{"path":"https://epiverse.github.io/epidemics/reference/print_intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print an object of the <intervention> super-class — print_intervention","text":"Invisibly returns object x. Called printing side-effects.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a new vaccination regime for an epidemic model — vaccination","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"Prepare <vaccination> object specifies vaccination regime use epidemic model. objects can handle different vaccination start end times, well different vaccination rates, demographic group epidemic modelling scenario. Combine <vaccination> objects create multi-dose vaccination regimes using c() two <vaccination> objects.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"","code":"vaccination(name = NA_character_, nu, time_begin, time_end)  is_vaccination(x)  no_vaccination(population, doses = 1L)  # S3 method for vaccination c(x, ...)"},{"path":"https://epiverse.github.io/epidemics/reference/vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"name String name vaccination regime. nu Matrix group-specific rate vaccination, expressed rate parameter \\(nu\\). element matrix \\(nu_{ij}\\) represents rate delivering vaccine dose \\(j\\) demographic group \\(\\). time_begin Matrix start time delivering vaccination dose \\(j\\) demographic group \\(\\). demographic group \\(\\). time_end Matrix end time delivering vaccination dose \\(j\\) demographic group \\(\\). x <vaccination> object, object checked <vaccination>. population population object contact_matrix member. doses number, defaulting 1, indicate number doses vaccination regime. ... Vaccination objects combine x create multi-dose <vaccination> object.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"object <vaccination> S3 class. vaccination() returns <vaccination> object specified parameters. Concatenating two <vaccination> objects using c() also returns <vaccination> object. object holds group-specific start end times, group-specific vaccination rates specified constituent vaccination regimes. no_vaccination() returns <vaccination> effect population, start end times set 0.0, rate vaccination \\(nu\\) also set 0.0. is_vaccination() return logical whether object <vaccination> class.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/vaccination.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"Multi-dose vaccinations can passed epidemic models, models accommodate multi-dose vaccinations. example, default SEIR-V model provided model_default_cpp() single vaccinated compartment, use first parameter set multi-dose regime determine individuals transition vaccinated compartment. contrast, Vacamole model considers two doses, make use first two parameter sets multi-dose regime. doses can specified, disregarded model.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/vaccination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a new vaccination regime for an epidemic model — vaccination","text":"","code":"# Assuming a population with two age groups, children 0 -- 5, and others 5+ # an example for childhood vaccination only childhood_vaccination <- vaccination(   name = \"childhood_vaccination\",   time_begin = matrix(c(0, 100)), # assuming a simulation over 100 days   time_end = matrix(c(100, 100)),   nu = matrix(c(0.0001, 0.0)) # over 5s never vaccinated ) #> Vaccination: some `time_end`s are not greater than `time_begin`s #> Vaccination: some `time_end`s are not greater than `time_begin`s childhood_vaccination #> Vaccination: some `time_end`s are not greater than `time_begin`s #> <vaccination> object #>  #>  Vaccination name:  #> \"childhood_vaccination\" #>  #>  Begins at:  #>      dose_1 #> [1,]      0 #> [2,]    100 #>  #>  Ends at:  #>      dose_1 #> [1,]    100 #> [2,]    100 #>  #>  Vaccination rate:  #>      dose_1 #> [1,]  1e-04 #> [2,]  0e+00  # check whether the object is a <vaccination> is_vaccination(childhood_vaccination) #> [1] TRUE  # Concatenating vaccinations # create first dose regime vax_1 <- vaccination(   name = \"vax_regime\",   time_begin = matrix(1),   time_end = matrix(100),   nu = matrix(0.001) )  # second dose regime vax_2 <- vaccination(   name = \"vax_regime\",   time_begin = matrix(101),   time_end = matrix(200),   nu = matrix(0.001) )  c(vax_1, vax_2) #> <vaccination> object #>  #>  Vaccination name:  #> \"vax_regime\" #>  #>  Begins at:  #>      dose_1 dose_2 #> [1,]      1    101 #>  #>  Ends at:  #>      dose_1 dose_2 #> [1,]    100    200 #>  #>  Vaccination rate:  #>      dose_1 dose_2 #> [1,]  0.001  0.001"},{"path":"https://epiverse.github.io/epidemics/reference/validate_intervention.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate objects that inherit from the  class — validate_intervention","title":"Validate objects that inherit from the  class — validate_intervention","text":"Validate objects inherit  class Validate objects inherit  class","code":""},{"path":"https://epiverse.github.io/epidemics/reference/validate_intervention.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate objects that inherit from the  class — validate_intervention","text":"","code":"validate_contacts_intervention(x)  validate_rate_intervention(x)"},{"path":"https://epiverse.github.io/epidemics/reference/validate_intervention.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate objects that inherit from the  class — validate_intervention","text":"x validate_contacts_intervention(), object validated <contacts_intervention>. validate_rate_intervention(), object validated <rate_intervention>.","code":""},{"path":"https://epiverse.github.io/epidemics/reference/validate_intervention.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate objects that inherit from the  class — validate_intervention","text":"Invisibly returns input x. Called primarily input checking validator objects <intervention> superclass.","code":""},{"path":"https://epiverse.github.io/epidemics/news/index.html","id":"epidemics-010","dir":"Changelog","previous_headings":"","what":"epidemics 0.1.0","title":"epidemics 0.1.0","text":"initial GitHub release epidemics, R package ships library compartmental epidemic model structures can used, along supplied classes help define population characteristics epidemic response interventions including vaccinations, compose model epidemic scenarios. epidemics still actively developed, major changes planned near future. release aimed supporting reproducibility projects used epidemics subject breaking changes due planned package development. sections describe contents release.","code":""},{"path":"https://epiverse.github.io/epidemics/news/index.html","id":"model-structures-0-1-0","dir":"Changelog","previous_headings":"","what":"Model structures","title":"epidemics 0.1.0","text":"release epidemics includes four model structures supporting range composable elements modify epidemic trajectories. “Default” model: deterministic SEIR-V model allowing heterogeneity social contacts demographic groups, optional, single-dose non-leaky vaccination; “Vacamole” model: deterministic SEI-HRD-V2 implementation model allowing heterogeneity social contacts demographic groups, two-dose leaky vaccination, supporting different infection trajectories infectious hospitalised (H) compartments doubly vaccinated individuals, tracks deaths (D), initially developed Dutch public health agency RIVM vaccine impact modelling Covid-19 pandemic, published Ainslie et al. 2022 https://doi.org/10.2807/1560-7917.ES.2022.27.44.2101090; “Diphtheria” model: deterministic SEIHR model tracking outcomes different demographic groups, including heterogeneity social contacts, adapted Finger et al. 2019 https://doi.org/10.1186/s12916-019-1288-7 intended application disease outbreaks humanitarian camp setting; “Ebola” model: discrete time stochastic SEIHFR model suitable modelling Ebola virus disease haemorrhagic fevers, allows varying efficacy isolation hospital setting (H), allows modelling transmission funeral context (F), adapted consensus Ebola virus disease model Li et al. 2019 https://doi.org/10.1098/rspb.2019.0774 using simulation methods Getz Dougherty 2018 https://doi.org/10.1080/17513758.2017.1401677.","code":""},{"path":"https://epiverse.github.io/epidemics/news/index.html","id":"solving-ode-systems-using-boost-odeint-0-1-0","dir":"Changelog","previous_headings":"","what":"Solving ODE systems using Boost odeint","title":"epidemics 0.1.0","text":"epidemics uses Boost’s odeint https://www.boost.org/doc/libs/1_84_0/libs/numeric/odeint/doc/html/boost_numeric_odeint/getting_started/overview.html treat deterministic models’ ordinary differential equations (ODEs) initial value problems solve . Model ODEs defined structs operators package headers, exposed R internal Rcpp functions. ‘default’, ‘Vacamole’, ‘diphtheria’ models ODE models defined way. intended help reduce overheads associated passing ODE systems written R back forth solver (provided {deSolve}), easier way define feature-rich models writing C code solvers provided {deSolve} accept compiled code. epidemics headers include tools handling C++ representations R objects used package (see ), can imported Rcpp packages. ‘default’ ‘Vacamole’ models equivalent R-implementations well use {deSolve} package; intended made unavailable future releases.","code":""},{"path":"https://epiverse.github.io/epidemics/news/index.html","id":"composable-elements-as-classes-0-1-0","dir":"Changelog","previous_headings":"","what":"Composable elements as classes","title":"epidemics 0.1.0","text":"epidemics provides classes help organise components epidemic scenario model. <population>: S3 class store population characteristics including size demographic groups, social contacts matrix, initial conditions model; <intervention>: S3 abstract class super-class allows definition events modify epidemic trajectory: <rate_intervention>: sub-class <intervention> allows reduction transition rates model compartments simulate effect policy interventions specific period; <contacts_intervention>: sub-class <intervention> allows reduction social contacts simulate effect policy interventions specific period; <vaccination>: S3 class holds intervals group-specific rates individuals transition ‘vaccinated’ compartment(s) model, available;","code":""},{"path":"https://epiverse.github.io/epidemics/news/index.html","id":"other-composable-elements-0-1-0","dir":"Changelog","previous_headings":"","what":"Other composable elements","title":"epidemics 0.1.0","text":"epidemics allows models include elements affect epidemic trajectory, custom classes. Time-dependence: models can passed list functions two arguments, time x expected return x function time, may used model effect seasonality model parameters; Population changes: Applicable diphtheria model, two element list time values, allow definition changes number susceptible individuals model, may used model influxes evacuations individuals humanitarian camps.","code":""},{"path":"https://epiverse.github.io/epidemics/news/index.html","id":"output-processing-functions-0-1-0","dir":"Changelog","previous_headings":"","what":"Output processing functions","title":"epidemics 0.1.0","text":"epidemics provides functions help process output epidemic model run, calculate size epidemic demographic group stage (epidemic_size()), calculate number new infections demographic group timepoint model (new_infections()).","code":""},{"path":"https://epiverse.github.io/epidemics/news/index.html","id":"usage-vignettes-0-1-0","dir":"Changelog","previous_headings":"","what":"Usage vignettes","title":"epidemics 0.1.0","text":"epidemics includes range usage vignettes demonstrate : Get started package; Get started modelling interventions social contacts control outbreaks; Model overlapping sequential interventions social contacts; Model interventions modify transition rates model compartments; Get started modelling vaccination campaign; Model time-dependence seasonality disease transmission dynamics; Generate model uncertainty model parameters; Reduce number parameters required final size estimation; Use ‘Vacamole’ model scenarios leaky vaccination vaccine impact hospitalisation; Use ‘Ebola’ model scenarios responses Ebola virus disease outbreak; Use ‘diphtheria’ model scenarios outbreaks humanitarian camp setting.","code":""},{"path":"https://epiverse.github.io/epidemics/news/index.html","id":"miscellaneous-0-1-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"epidemics 0.1.0","text":"Workflows render vignettes README website; Test code coverage 93%.","code":""}]
